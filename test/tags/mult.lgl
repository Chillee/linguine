tag a is vec2;
tag b is vec3;
tag c is b;

a x = [1., 2.]:a;
b y = [2., 1., 2.]:b;
c z = [3., 3., 3.]:c;

a->b a_b = [[1., 1., 1.], [1., 1., 1.]]:a->b;
a->a a_a = [[1., 0.], [0., 1.]]:a->a;
b->a b_a = [[1., 1.], [1., 1.], [1., 1.]]:b->a;
b->c b_c = [[1., 1., 1.], [1., 1., 1.], [1., 1., 1.]]:b->c;

// Maps
a s11 = x * a_a;
b s12 = x * a_b;
a s13 = z * b_a * a_a; 
c s14 = y * (b_c + b_c);
vec2 s15 = z * (b_a .* b_a); // Ugh, should this work?
a s16 = (x * a_b) * b_a;

// Composition
a->a s21 = a_b * b_a;
a->c s22 = a_b * b_c;
b->c s23 = b_a * a_b * b_c;
a s24 = x * (a_b * b_a);
a->b s25 = a_b + a_a * a_b;

//print 1;