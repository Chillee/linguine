tag a is vec2;
tag a2 is vec2;
tag b is vec3;
tag c is b;
tag d is b;


a x = [1., 2.]:a;
a2 x2 = [2., 1.]:a2;
b y = [2., 1., 2.]:b;
c z = [3., 3., 3.]:c;
d z2 = [2., 2., 2.]:d;

// Vector safety
a s11 = x + [2., 1.]:a;
vec2 s12 = x + x2;
a s13 = (x * 2.) + ([1., 2.]:a * 1.) - [1., 2.]:a;
vec3 s14 = y - [1., 2., 3.]:vec3 + z;
b s15 = y + z - z - y;
vec3 s16 = z .* y + [1., 2., 3.]:b;
b s17 = z + z2;
vec3 s18 = z + z2;

vec2->b v2_b = [[1., 1.], [1., 1.], [1., 1.]]:a->b;
a->vec3 a_v3 = v2_b;
vec3->c v3_c = [[1., 1., 1.], [1., 1., 1.], [1., 1., 1.]]:c->b;

// Matrix safety
vec2->vec3 s21 = v2_b * 2. - [[1., 1.], [1., 1.], [1., 1.]]:vec2->vec3;
c->b s22 = v3_c * 2. + [[1., 1., 1.], [1., 1., 1.], [1., 1., 1.]]:b->b;
mat3x2 s23 = v2_b .* (a_v3 * 2.);
b->b s24 = v3_c + v3_c;

print 1;