{"version":3,"sources":["../../node_modules/gl-matrix/lib/gl-matrix/common.js","../../node_modules/gl-matrix/lib/gl-matrix/mat2.js","../../node_modules/gl-matrix/lib/gl-matrix/mat2d.js","../../node_modules/gl-matrix/lib/gl-matrix/mat3.js","../../node_modules/gl-matrix/lib/gl-matrix/mat4.js","../../node_modules/gl-matrix/lib/gl-matrix/vec3.js","../../node_modules/gl-matrix/lib/gl-matrix/vec4.js","../../node_modules/gl-matrix/lib/gl-matrix/quat.js","../../node_modules/gl-matrix/lib/gl-matrix/quat2.js","../../node_modules/gl-matrix/lib/gl-matrix/vec2.js","../../node_modules/gl-matrix/lib/gl-matrix.js","../../node_modules/teapot/teapot.js","../../node_modules/bunny/index.js","../../node_modules/primitive-cube/index.js","../../node_modules/vectors/normalize-nd.js","../../node_modules/icosphere/index.js","../../node_modules/normals/normals.js","../../node_modules/dtype/index.js","../../node_modules/array-pack-2d/index.js","../../node_modules/orbit-camera/orbit.js","../../node_modules/events/events.js","../../node_modules/wheel/index.js","../../node_modules/scroll-speed/index.js","../../node_modules/mouse-position/index.js","../../node_modules/mouse-pressed/index.js","../../node_modules/vkey/index.js","../../../../../../../../usr/lib/node_modules/parcel/node_modules/process/browser.js","../../node_modules/key-pressed/index.js","../../node_modules/canvas-orbit-camera/index.js","../../node_modules/webgl-obj-loader/dist/webgl-obj-loader.min.js","../lglexample.ts","main.ts"],"names":["EPSILON","ARRAY_TYPE","Float32Array","Array","RANDOM","Math","random","setMatrixArrayType","type","degree","PI","toRadian","a","equals","b","abs","max","create","out","glMatrix","clone","copy","identity","fromValues","m00","m01","m10","m11","set","transpose","a1","invert","a0","a2","a3","det","adjoint","determinant","multiply","b0","b1","b2","b3","rotate","rad","s","sin","c","cos","scale","v","v0","v1","fromRotation","fromScaling","str","frob","sqrt","pow","LDU","L","D","U","add","subtract","exactEquals","multiplyScalar","multiplyScalarAndAdd","mul","sub","d","tx","ty","aa","ab","ac","ad","atx","aty","a4","a5","b4","b5","translate","fromTranslation","fromMat4","m02","m12","m20","m21","m22","a01","a02","a12","a00","a10","a11","a20","a21","a22","b01","b11","b21","b00","b02","b10","b12","b20","b22","x","y","fromMat2d","fromQuat","q","z","w","x2","y2","z2","xx","yx","yy","zx","zy","zz","wx","wy","wz","normalFromMat4","a03","a13","a23","a30","a31","a32","a33","b03","b04","b05","b06","b07","b08","b09","projection","width","height","a6","a7","a8","b6","b7","b8","m03","m13","m23","m30","m31","m32","m33","axis","len","t","rotateX","rotateY","rotateZ","fromXRotation","fromYRotation","fromZRotation","fromRotationTranslation","xy","xz","yz","fromQuat2","translation","bx","by","bz","bw","ax","ay","az","aw","magnitude","getTranslation","mat","getScaling","getRotation","trace","S","fromRotationTranslationScale","sx","sy","sz","fromRotationTranslationScaleOrigin","o","ox","oy","oz","out0","out1","out2","out4","out5","out6","out8","out9","out10","frustum","left","right","bottom","top","near","far","rl","tb","nf","perspective","fovy","aspect","f","tan","Infinity","perspectiveFromFieldOfView","fov","upTan","upDegrees","downTan","downDegrees","leftTan","leftDegrees","rightTan","rightDegrees","xScale","yScale","ortho","lr","bt","lookAt","eye","center","up","x0","x1","y0","y1","z0","z1","eyex","eyey","eyez","upx","upy","upz","centerx","centery","centerz","targetTo","target","a9","a14","a15","b9","b13","b14","b15","length","divide","ceil","floor","min","round","scaleAndAdd","distance","squaredDistance","squaredLength","negate","inverse","normalize","dot","cross","lerp","hermite","factorTimes2","factor1","factor2","factor3","factor4","bezier","inverseFactor","inverseFactorTimesTwo","r","zScale","transformMat4","m","transformMat3","transformQuat","qx","qy","qz","qw","uvx","uvy","uvz","uuvx","uuvy","uuvz","w2","p","angle","tempA","tempB","cosine","acos","div","dist","sqrDist","sqrLen","forEach","vec","stride","offset","count","fn","arg","i","l","v2","v3","v4","s1","s2","ix","iy","iz","iw","setAxisAngle","getAxisAngle","out_axis","calculateW","slerp","omega","cosom","sinom","scale0","scale1","u1","u2","u3","sqrt1MinusU1","sqrtU1","invDot","conjugate","fromMat3","fTrace","fRoot","j","k","fromEuler","halfToRad","cx","cy","cz","vec4","rotationTo","tmpvec3","vec3","xUnitVec3","yUnitVec3","sqlerp","temp1","temp2","setAxes","matr","mat3","view","dq","w1","fromRotationTranslationValues","outer","quat","mat4","getReal","getDual","setReal","setDual","ax1","ay1","az1","aw1","bx1","by1","bz1","ax2","ay2","az2","aw2","rotateByQuatAppend","rotateByQuatPrepend","rotateAroundAxis","axisLength","ax0","ay0","az0","aw0","bw1","bx0","by0","bz0","bw0","mt","sqlen","a_dot_b","transformMat2","transformMat2d","p0","p1","sinC","cosC","len1","len2","module","exports","dtype","Int8Array","Int16Array","Int32Array","Uint8Array","Uint16Array","Uint32Array","Float64Array","Uint8ClampedArray","EventEmitter","_events","_maxListeners","undefined","prototype","defaultMaxListeners","setMaxListeners","n","isNumber","isNaN","TypeError","emit","er","handler","args","listeners","error","isObject","arguments","Error","err","context","isUndefined","isFunction","call","slice","apply","addListener","listener","newListener","push","warned","console","on","once","fired","g","removeListener","list","position","splice","removeAllListeners","key","ret","listenerCount","evlistener","emitter","process","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","setTimeout","e","clearTimeout","runTimeout","fun","runClearTimeout","marker","queue","draining","currentQueue","queueIndex","cleanUpNextTick","concat","drainQueue","timeout","run","nextTick","Item","array","title","browser","env","argv","version","versions","noop","off","prependListener","prependOnceListener","name","binding","cwd","chdir","dir","umask"],"mappings":"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;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjvHAyZ,MAAM,CAACC,OAAP,GAAiB,UAASC,KAAT,EAAgB;AAC/B,UAAQA,KAAR;AACE,SAAK,MAAL;AACE,aAAOC,SAAP;;AACF,SAAK,OAAL;AACE,aAAOC,UAAP;;AACF,SAAK,OAAL;AACE,aAAOC,UAAP;;AACF,SAAK,OAAL;AACE,aAAOC,UAAP;;AACF,SAAK,QAAL;AACE,aAAOC,WAAP;;AACF,SAAK,QAAL;AACE,aAAOC,WAAP;;AACF,SAAK,SAAL;AACE,aAAO3a,YAAP;;AACF,SAAK,SAAL;AACE,aAAO4a,YAAP;;AACF,SAAK,OAAL;AACE,aAAO3a,KAAP;;AACF,SAAK,eAAL;AACE,aAAO4a,iBAAP;AApBJ;AAsBD,CAvBD;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASC,YAAT,GAAwB;AACtB,OAAKC,OAAL,GAAe,KAAKA,OAAL,IAAgB,EAA/B;AACA,OAAKC,aAAL,GAAqB,KAAKA,aAAL,IAAsBC,SAA3C;AACD;;AACDd,MAAM,CAACC,OAAP,GAAiBU,YAAjB,EAEA;;AACAA,YAAY,CAACA,YAAb,GAA4BA,YAA5B;AAEAA,YAAY,CAACI,SAAb,CAAuBH,OAAvB,GAAiCE,SAAjC;AACAH,YAAY,CAACI,SAAb,CAAuBF,aAAvB,GAAuCC,SAAvC,EAEA;AACA;;AACAH,YAAY,CAACK,mBAAb,GAAmC,EAAnC,EAEA;AACA;;AACAL,YAAY,CAA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;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACxIA;AACA,IAAI2J,OAAO,GAAG1D,MAAM,CAACC,OAAP,GAAiB,EAA/B,EAEA;AACA;AACA;AACA;;AAEA,IAAI0D,gBAAJ;AACA,IAAIC,kBAAJ;;AAEA,SAASC,gBAAT,GAA4B;AACxB,QAAM,IAAI/B,KAAJ,CAAU,iCAAV,CAAN;AACH;;AACD,SAASgC,mBAAT,GAAgC;AAC5B,QAAM,IAAIhC,KAAJ,CAAU,mCAAV,CAAN;AACH;;AACA,aAAY;AACT,MAAI;AACA,QAAI,OAAOiC,UAAP,KAAsB,UAA1B,EAAsC;AAClCJ,MAAAA,gBAAgB,GAAGI,UAAnB;AACH,KAFD,MAEO;AACHJ,MAAAA,gBAAgB,GAAGE,gBAAnB;AACH;AACJ,GAND,CAME,OAAOG,CAAP,EAAU;AACRL,IAAAA,gBAAgB,GAAGE,gBAAnB;AACH;;AACD,MAAI;AACA,QAAI,OAAOI,YAAP,KAAwB,UAA5B,EAAwC;AACpCL,MAAAA,kBAAkB,GAAGK,YAArB;AACH,KAFD,MAEO;AACHL,MAAAA,kBAAkB,GAAGE,mBAArB;AACH;AACJ,GAND,CAME,OAAOE,CAAP,EAAU;AACRJ,IAAAA,kBAAkB,GAAGE,mBAArB;AACH;AAC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gB;AAC9B,QAAM,IAAI9D,KAAJ,CAAU,kCAAV,CAAN;AACH,CAFD;;AAIA4B,OAAO,CAACoC,GAAR,GAAc,YAAY;AAAE,SAAO,GAAP;AAAY,CAAxC;;AACApC,OAAO,CAACqC,KAAR,GAAgB,UAAUC,GAAV,EAAe;AAC3B,QAAM,IAAIlE,KAAJ,CAAU,gCAAV,CAAN;AACH,CAFD;;AAGA4B,OAAO,CAACuC,KAAR,GAAgB,YAAW;AAAE,SAAO,CAAP;AAAW,CAAxC;;;ACvLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AChEA;;;;;;;;;;;;;;;;;;;;;ACAA;;;;;AAIA,IAAA,WAAA,GAAA,OAAA,CAAA,WAAA,CAAA;;AACA,IAAA,MAAA,GAAA,YAAA,CAAA,OAAA,CAAA,QAAA,CAAA,CAAA;;AACA,IAAA,KAAA,GAAA,YAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AACA,IAAA,gBAAA,GAAA,eAAA,CAAA,OAAA,CAAA,gBAAA,CAAA,CAAA;;AACA,IAAA,WAAA,GAAA,eAAA,CAAA,OAAA,CAAA,WAAA,CAAA,CAAA;;AACA,IAAA,OAAA,GAAA,YAAA,CAAA,OAAA,CAAA,SAAA,CAAA,CAAA;;AACA,IAAA,eAAA,GAAA,eAAA,CAAA,OAAA,CAAA,eAAA,CAAA,CAAA;;AACA,IAAA,qBA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","file":"main.c39d6dcf.map","sourceRoot":"../phong","sourcesContent":["/**\r\n * Common utilities\r\n * @module glMatrix\r\n */\r\n\r\n// Configuration Constants\r\nexport var EPSILON = 0.000001;\r\nexport var ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\r\nexport var RANDOM = Math.random;\r\n\r\n/**\r\n * Sets the type of array used when creating new vectors and matrices\r\n *\r\n * @param {Type} type Array type, such as Float32Array or Array\r\n */\r\nexport function setMatrixArrayType(type) {\r\n  ARRAY_TYPE = type;\r\n}\r\n\r\nvar degree = Math.PI / 180;\r\n\r\n/**\r\n * Convert Degree To Radian\r\n *\r\n * @param {Number} a Angle in Degrees\r\n */\r\nexport function toRadian(a) {\r\n  return a * degree;\r\n}\r\n\r\n/**\r\n * Tests whether or not the arguments have approximately the same value, within an absolute\r\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\r\n * than or equal to 1.0, and a relative tolerance is used for larger values)\r\n *\r\n * @param {Number} a The first number to test.\r\n * @param {Number} b The second number to test.\r\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\r\n}","import * as glMatrix from \"./common.js\";\r\n\r\n/**\r\n * 2x2 Matrix\r\n * @module mat2\r\n */\r\n\r\n/**\r\n * Creates a new identity mat2\r\n *\r\n * @returns {mat2} a new 2x2 matrix\r\n */\r\nexport function create() {\r\n  var out = new glMatrix.ARRAY_TYPE(4);\r\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\r\n    out[1] = 0;\r\n    out[2] = 0;\r\n  }\r\n  out[0] = 1;\r\n  out[3] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new mat2 initialized with values from an existing matrix\r\n *\r\n * @param {mat2} a matrix to clone\r\n * @returns {mat2} a new 2x2 matrix\r\n */\r\nexport function clone(a) {\r\n  var out = new glMatrix.ARRAY_TYPE(4);\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copy the values from one mat2 to another\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the source matrix\r\n * @returns {mat2} out\r\n */\r\nexport function copy(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set a mat2 to the identity matrix\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @returns {mat2} out\r\n */\r\nexport function identity(out) {\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Create a new mat2 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 2)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 3)\r\n * @returns {mat2} out A new 2x2 matrix\r\n */\r\nexport function fromValues(m00, m01, m10, m11) {\r\n  var out = new glMatrix.ARRAY_TYPE(4);\r\n  out[0] = m00;\r\n  out[1] = m01;\r\n  out[2] = m10;\r\n  out[3] = m11;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the components of a mat2 to the given values\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 2)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 3)\r\n * @returns {mat2} out\r\n */\r\nexport function set(out, m00, m01, m10, m11) {\r\n  out[0] = m00;\r\n  out[1] = m01;\r\n  out[2] = m10;\r\n  out[3] = m11;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transpose the values of a mat2\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the source matrix\r\n * @returns {mat2} out\r\n */\r\nexport function transpose(out, a) {\r\n  // If we are transposing ourselves we can skip a few steps but have to cache\r\n  // some values\r\n  if (out === a) {\r\n    var a1 = a[1];\r\n    out[1] = a[2];\r\n    out[2] = a1;\r\n  } else {\r\n    out[0] = a[0];\r\n    out[1] = a[2];\r\n    out[2] = a[1];\r\n    out[3] = a[3];\r\n  }\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Inverts a mat2\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the source matrix\r\n * @returns {mat2} out\r\n */\r\nexport function invert(out, a) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3];\r\n\r\n  // Calculate the determinant\r\n  var det = a0 * a3 - a2 * a1;\r\n\r\n  if (!det) {\r\n    return null;\r\n  }\r\n  det = 1.0 / det;\r\n\r\n  out[0] = a3 * det;\r\n  out[1] = -a1 * det;\r\n  out[2] = -a2 * det;\r\n  out[3] = a0 * det;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the adjugate of a mat2\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the source matrix\r\n * @returns {mat2} out\r\n */\r\nexport function adjoint(out, a) {\r\n  // Caching this value is nessecary if out == a\r\n  var a0 = a[0];\r\n  out[0] = a[3];\r\n  out[1] = -a[1];\r\n  out[2] = -a[2];\r\n  out[3] = a0;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the determinant of a mat2\r\n *\r\n * @param {mat2} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\r\nexport function determinant(a) {\r\n  return a[0] * a[3] - a[2] * a[1];\r\n}\r\n\r\n/**\r\n * Multiplies two mat2's\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the first operand\r\n * @param {mat2} b the second operand\r\n * @returns {mat2} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3];\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2],\r\n      b3 = b[3];\r\n  out[0] = a0 * b0 + a2 * b1;\r\n  out[1] = a1 * b0 + a3 * b1;\r\n  out[2] = a0 * b2 + a2 * b3;\r\n  out[3] = a1 * b2 + a3 * b3;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a mat2 by the given angle\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat2} out\r\n */\r\nexport function rotate(out, a, rad) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3];\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n  out[0] = a0 * c + a2 * s;\r\n  out[1] = a1 * c + a3 * s;\r\n  out[2] = a0 * -s + a2 * c;\r\n  out[3] = a1 * -s + a3 * c;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Scales the mat2 by the dimensions in the given vec2\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the matrix to rotate\r\n * @param {vec2} v the vec2 to scale the matrix by\r\n * @returns {mat2} out\r\n **/\r\nexport function scale(out, a, v) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3];\r\n  var v0 = v[0],\r\n      v1 = v[1];\r\n  out[0] = a0 * v0;\r\n  out[1] = a1 * v0;\r\n  out[2] = a2 * v1;\r\n  out[3] = a3 * v1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a given angle\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2.identity(dest);\r\n *     mat2.rotate(dest, dest, rad);\r\n *\r\n * @param {mat2} out mat2 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat2} out\r\n */\r\nexport function fromRotation(out, rad) {\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n  out[0] = c;\r\n  out[1] = s;\r\n  out[2] = -s;\r\n  out[3] = c;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2.identity(dest);\r\n *     mat2.scale(dest, dest, vec);\r\n *\r\n * @param {mat2} out mat2 receiving operation result\r\n * @param {vec2} v Scaling vector\r\n * @returns {mat2} out\r\n */\r\nexport function fromScaling(out, v) {\r\n  out[0] = v[0];\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = v[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns a string representation of a mat2\r\n *\r\n * @param {mat2} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\r\nexport function str(a) {\r\n  return 'mat2(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\r\n}\r\n\r\n/**\r\n * Returns Frobenius norm of a mat2\r\n *\r\n * @param {mat2} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\r\nexport function frob(a) {\r\n  return Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2));\r\n}\r\n\r\n/**\r\n * Returns L, D and U matrices (Lower triangular, Diagonal and Upper triangular) by factorizing the input matrix\r\n * @param {mat2} L the lower triangular matrix\r\n * @param {mat2} D the diagonal matrix\r\n * @param {mat2} U the upper triangular matrix\r\n * @param {mat2} a the input matrix to factorize\r\n */\r\n\r\nexport function LDU(L, D, U, a) {\r\n  L[2] = a[2] / a[0];\r\n  U[0] = a[0];\r\n  U[1] = a[1];\r\n  U[3] = a[3] - L[2] * U[1];\r\n  return [L, D, U];\r\n}\r\n\r\n/**\r\n * Adds two mat2's\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the first operand\r\n * @param {mat2} b the second operand\r\n * @returns {mat2} out\r\n */\r\nexport function add(out, a, b) {\r\n  out[0] = a[0] + b[0];\r\n  out[1] = a[1] + b[1];\r\n  out[2] = a[2] + b[2];\r\n  out[3] = a[3] + b[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the first operand\r\n * @param {mat2} b the second operand\r\n * @returns {mat2} out\r\n */\r\nexport function subtract(out, a, b) {\r\n  out[0] = a[0] - b[0];\r\n  out[1] = a[1] - b[1];\r\n  out[2] = a[2] - b[2];\r\n  out[3] = a[3] - b[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {mat2} a The first matrix.\r\n * @param {mat2} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\r\nexport function exactEquals(a, b) {\r\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\r\n}\r\n\r\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {mat2} a The first matrix.\r\n * @param {mat2} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3];\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2],\r\n      b3 = b[3];\r\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\r\n}\r\n\r\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat2} out\r\n */\r\nexport function multiplyScalar(out, a, b) {\r\n  out[0] = a[0] * b;\r\n  out[1] = a[1] * b;\r\n  out[2] = a[2] * b;\r\n  out[3] = a[3] * b;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two mat2's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat2} out the receiving vector\r\n * @param {mat2} a the first operand\r\n * @param {mat2} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat2} out\r\n */\r\nexport function multiplyScalarAndAdd(out, a, b, scale) {\r\n  out[0] = a[0] + b[0] * scale;\r\n  out[1] = a[1] + b[1] * scale;\r\n  out[2] = a[2] + b[2] * scale;\r\n  out[3] = a[3] + b[3] * scale;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Alias for {@link mat2.multiply}\r\n * @function\r\n */\r\nexport var mul = multiply;\r\n\r\n/**\r\n * Alias for {@link mat2.subtract}\r\n * @function\r\n */\r\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\r\n\r\n/**\r\n * 2x3 Matrix\r\n * @module mat2d\r\n *\r\n * @description\r\n * A mat2d contains six elements defined as:\r\n * <pre>\r\n * [a, c, tx,\r\n *  b, d, ty]\r\n * </pre>\r\n * This is a short form for the 3x3 matrix:\r\n * <pre>\r\n * [a, c, tx,\r\n *  b, d, ty,\r\n *  0, 0, 1]\r\n * </pre>\r\n * The last row is ignored so the array is shorter and operations are faster.\r\n */\r\n\r\n/**\r\n * Creates a new identity mat2d\r\n *\r\n * @returns {mat2d} a new 2x3 matrix\r\n */\r\nexport function create() {\r\n  var out = new glMatrix.ARRAY_TYPE(6);\r\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\r\n    out[1] = 0;\r\n    out[2] = 0;\r\n    out[4] = 0;\r\n    out[5] = 0;\r\n  }\r\n  out[0] = 1;\r\n  out[3] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new mat2d initialized with values from an existing matrix\r\n *\r\n * @param {mat2d} a matrix to clone\r\n * @returns {mat2d} a new 2x3 matrix\r\n */\r\nexport function clone(a) {\r\n  var out = new glMatrix.ARRAY_TYPE(6);\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  out[4] = a[4];\r\n  out[5] = a[5];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copy the values from one mat2d to another\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the source matrix\r\n * @returns {mat2d} out\r\n */\r\nexport function copy(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  out[4] = a[4];\r\n  out[5] = a[5];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set a mat2d to the identity matrix\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @returns {mat2d} out\r\n */\r\nexport function identity(out) {\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 1;\r\n  out[4] = 0;\r\n  out[5] = 0;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Create a new mat2d with the given values\r\n *\r\n * @param {Number} a Component A (index 0)\r\n * @param {Number} b Component B (index 1)\r\n * @param {Number} c Component C (index 2)\r\n * @param {Number} d Component D (index 3)\r\n * @param {Number} tx Component TX (index 4)\r\n * @param {Number} ty Component TY (index 5)\r\n * @returns {mat2d} A new mat2d\r\n */\r\nexport function fromValues(a, b, c, d, tx, ty) {\r\n  var out = new glMatrix.ARRAY_TYPE(6);\r\n  out[0] = a;\r\n  out[1] = b;\r\n  out[2] = c;\r\n  out[3] = d;\r\n  out[4] = tx;\r\n  out[5] = ty;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the components of a mat2d to the given values\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {Number} a Component A (index 0)\r\n * @param {Number} b Component B (index 1)\r\n * @param {Number} c Component C (index 2)\r\n * @param {Number} d Component D (index 3)\r\n * @param {Number} tx Component TX (index 4)\r\n * @param {Number} ty Component TY (index 5)\r\n * @returns {mat2d} out\r\n */\r\nexport function set(out, a, b, c, d, tx, ty) {\r\n  out[0] = a;\r\n  out[1] = b;\r\n  out[2] = c;\r\n  out[3] = d;\r\n  out[4] = tx;\r\n  out[5] = ty;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Inverts a mat2d\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the source matrix\r\n * @returns {mat2d} out\r\n */\r\nexport function invert(out, a) {\r\n  var aa = a[0],\r\n      ab = a[1],\r\n      ac = a[2],\r\n      ad = a[3];\r\n  var atx = a[4],\r\n      aty = a[5];\r\n\r\n  var det = aa * ad - ab * ac;\r\n  if (!det) {\r\n    return null;\r\n  }\r\n  det = 1.0 / det;\r\n\r\n  out[0] = ad * det;\r\n  out[1] = -ab * det;\r\n  out[2] = -ac * det;\r\n  out[3] = aa * det;\r\n  out[4] = (ac * aty - ad * atx) * det;\r\n  out[5] = (ab * atx - aa * aty) * det;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the determinant of a mat2d\r\n *\r\n * @param {mat2d} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\r\nexport function determinant(a) {\r\n  return a[0] * a[3] - a[1] * a[2];\r\n}\r\n\r\n/**\r\n * Multiplies two mat2d's\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the first operand\r\n * @param {mat2d} b the second operand\r\n * @returns {mat2d} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3],\r\n      a4 = a[4],\r\n      a5 = a[5];\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2],\r\n      b3 = b[3],\r\n      b4 = b[4],\r\n      b5 = b[5];\r\n  out[0] = a0 * b0 + a2 * b1;\r\n  out[1] = a1 * b0 + a3 * b1;\r\n  out[2] = a0 * b2 + a2 * b3;\r\n  out[3] = a1 * b2 + a3 * b3;\r\n  out[4] = a0 * b4 + a2 * b5 + a4;\r\n  out[5] = a1 * b4 + a3 * b5 + a5;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a mat2d by the given angle\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat2d} out\r\n */\r\nexport function rotate(out, a, rad) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3],\r\n      a4 = a[4],\r\n      a5 = a[5];\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n  out[0] = a0 * c + a2 * s;\r\n  out[1] = a1 * c + a3 * s;\r\n  out[2] = a0 * -s + a2 * c;\r\n  out[3] = a1 * -s + a3 * c;\r\n  out[4] = a4;\r\n  out[5] = a5;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Scales the mat2d by the dimensions in the given vec2\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the matrix to translate\r\n * @param {vec2} v the vec2 to scale the matrix by\r\n * @returns {mat2d} out\r\n **/\r\nexport function scale(out, a, v) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3],\r\n      a4 = a[4],\r\n      a5 = a[5];\r\n  var v0 = v[0],\r\n      v1 = v[1];\r\n  out[0] = a0 * v0;\r\n  out[1] = a1 * v0;\r\n  out[2] = a2 * v1;\r\n  out[3] = a3 * v1;\r\n  out[4] = a4;\r\n  out[5] = a5;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Translates the mat2d by the dimensions in the given vec2\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the matrix to translate\r\n * @param {vec2} v the vec2 to translate the matrix by\r\n * @returns {mat2d} out\r\n **/\r\nexport function translate(out, a, v) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3],\r\n      a4 = a[4],\r\n      a5 = a[5];\r\n  var v0 = v[0],\r\n      v1 = v[1];\r\n  out[0] = a0;\r\n  out[1] = a1;\r\n  out[2] = a2;\r\n  out[3] = a3;\r\n  out[4] = a0 * v0 + a2 * v1 + a4;\r\n  out[5] = a1 * v0 + a3 * v1 + a5;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a given angle\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2d.identity(dest);\r\n *     mat2d.rotate(dest, dest, rad);\r\n *\r\n * @param {mat2d} out mat2d receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat2d} out\r\n */\r\nexport function fromRotation(out, rad) {\r\n  var s = Math.sin(rad),\r\n      c = Math.cos(rad);\r\n  out[0] = c;\r\n  out[1] = s;\r\n  out[2] = -s;\r\n  out[3] = c;\r\n  out[4] = 0;\r\n  out[5] = 0;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2d.identity(dest);\r\n *     mat2d.scale(dest, dest, vec);\r\n *\r\n * @param {mat2d} out mat2d receiving operation result\r\n * @param {vec2} v Scaling vector\r\n * @returns {mat2d} out\r\n */\r\nexport function fromScaling(out, v) {\r\n  out[0] = v[0];\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = v[1];\r\n  out[4] = 0;\r\n  out[5] = 0;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2d.identity(dest);\r\n *     mat2d.translate(dest, dest, vec);\r\n *\r\n * @param {mat2d} out mat2d receiving operation result\r\n * @param {vec2} v Translation vector\r\n * @returns {mat2d} out\r\n */\r\nexport function fromTranslation(out, v) {\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 1;\r\n  out[4] = v[0];\r\n  out[5] = v[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns a string representation of a mat2d\r\n *\r\n * @param {mat2d} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\r\nexport function str(a) {\r\n  return 'mat2d(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ')';\r\n}\r\n\r\n/**\r\n * Returns Frobenius norm of a mat2d\r\n *\r\n * @param {mat2d} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\r\nexport function frob(a) {\r\n  return Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + 1);\r\n}\r\n\r\n/**\r\n * Adds two mat2d's\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the first operand\r\n * @param {mat2d} b the second operand\r\n * @returns {mat2d} out\r\n */\r\nexport function add(out, a, b) {\r\n  out[0] = a[0] + b[0];\r\n  out[1] = a[1] + b[1];\r\n  out[2] = a[2] + b[2];\r\n  out[3] = a[3] + b[3];\r\n  out[4] = a[4] + b[4];\r\n  out[5] = a[5] + b[5];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the first operand\r\n * @param {mat2d} b the second operand\r\n * @returns {mat2d} out\r\n */\r\nexport function subtract(out, a, b) {\r\n  out[0] = a[0] - b[0];\r\n  out[1] = a[1] - b[1];\r\n  out[2] = a[2] - b[2];\r\n  out[3] = a[3] - b[3];\r\n  out[4] = a[4] - b[4];\r\n  out[5] = a[5] - b[5];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat2d} out\r\n */\r\nexport function multiplyScalar(out, a, b) {\r\n  out[0] = a[0] * b;\r\n  out[1] = a[1] * b;\r\n  out[2] = a[2] * b;\r\n  out[3] = a[3] * b;\r\n  out[4] = a[4] * b;\r\n  out[5] = a[5] * b;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two mat2d's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat2d} out the receiving vector\r\n * @param {mat2d} a the first operand\r\n * @param {mat2d} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat2d} out\r\n */\r\nexport function multiplyScalarAndAdd(out, a, b, scale) {\r\n  out[0] = a[0] + b[0] * scale;\r\n  out[1] = a[1] + b[1] * scale;\r\n  out[2] = a[2] + b[2] * scale;\r\n  out[3] = a[3] + b[3] * scale;\r\n  out[4] = a[4] + b[4] * scale;\r\n  out[5] = a[5] + b[5] * scale;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {mat2d} a The first matrix.\r\n * @param {mat2d} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\r\nexport function exactEquals(a, b) {\r\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5];\r\n}\r\n\r\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {mat2d} a The first matrix.\r\n * @param {mat2d} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3],\r\n      a4 = a[4],\r\n      a5 = a[5];\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2],\r\n      b3 = b[3],\r\n      b4 = b[4],\r\n      b5 = b[5];\r\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5));\r\n}\r\n\r\n/**\r\n * Alias for {@link mat2d.multiply}\r\n * @function\r\n */\r\nexport var mul = multiply;\r\n\r\n/**\r\n * Alias for {@link mat2d.subtract}\r\n * @function\r\n */\r\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\r\n\r\n/**\r\n * 3x3 Matrix\r\n * @module mat3\r\n */\r\n\r\n/**\r\n * Creates a new identity mat3\r\n *\r\n * @returns {mat3} a new 3x3 matrix\r\n */\r\nexport function create() {\r\n  var out = new glMatrix.ARRAY_TYPE(9);\r\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\r\n    out[1] = 0;\r\n    out[2] = 0;\r\n    out[3] = 0;\r\n    out[5] = 0;\r\n    out[6] = 0;\r\n    out[7] = 0;\r\n  }\r\n  out[0] = 1;\r\n  out[4] = 1;\r\n  out[8] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copies the upper-left 3x3 values into the given mat3.\r\n *\r\n * @param {mat3} out the receiving 3x3 matrix\r\n * @param {mat4} a   the source 4x4 matrix\r\n * @returns {mat3} out\r\n */\r\nexport function fromMat4(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[4];\r\n  out[4] = a[5];\r\n  out[5] = a[6];\r\n  out[6] = a[8];\r\n  out[7] = a[9];\r\n  out[8] = a[10];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new mat3 initialized with values from an existing matrix\r\n *\r\n * @param {mat3} a matrix to clone\r\n * @returns {mat3} a new 3x3 matrix\r\n */\r\nexport function clone(a) {\r\n  var out = new glMatrix.ARRAY_TYPE(9);\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  out[4] = a[4];\r\n  out[5] = a[5];\r\n  out[6] = a[6];\r\n  out[7] = a[7];\r\n  out[8] = a[8];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copy the values from one mat3 to another\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the source matrix\r\n * @returns {mat3} out\r\n */\r\nexport function copy(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  out[4] = a[4];\r\n  out[5] = a[5];\r\n  out[6] = a[6];\r\n  out[7] = a[7];\r\n  out[8] = a[8];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Create a new mat3 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\r\n * @returns {mat3} A new mat3\r\n */\r\nexport function fromValues(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\r\n  var out = new glMatrix.ARRAY_TYPE(9);\r\n  out[0] = m00;\r\n  out[1] = m01;\r\n  out[2] = m02;\r\n  out[3] = m10;\r\n  out[4] = m11;\r\n  out[5] = m12;\r\n  out[6] = m20;\r\n  out[7] = m21;\r\n  out[8] = m22;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the components of a mat3 to the given values\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\r\n * @returns {mat3} out\r\n */\r\nexport function set(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\r\n  out[0] = m00;\r\n  out[1] = m01;\r\n  out[2] = m02;\r\n  out[3] = m10;\r\n  out[4] = m11;\r\n  out[5] = m12;\r\n  out[6] = m20;\r\n  out[7] = m21;\r\n  out[8] = m22;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set a mat3 to the identity matrix\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @returns {mat3} out\r\n */\r\nexport function identity(out) {\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 1;\r\n  out[5] = 0;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transpose the values of a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the source matrix\r\n * @returns {mat3} out\r\n */\r\nexport function transpose(out, a) {\r\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\r\n  if (out === a) {\r\n    var a01 = a[1],\r\n        a02 = a[2],\r\n        a12 = a[5];\r\n    out[1] = a[3];\r\n    out[2] = a[6];\r\n    out[3] = a01;\r\n    out[5] = a[7];\r\n    out[6] = a02;\r\n    out[7] = a12;\r\n  } else {\r\n    out[0] = a[0];\r\n    out[1] = a[3];\r\n    out[2] = a[6];\r\n    out[3] = a[1];\r\n    out[4] = a[4];\r\n    out[5] = a[7];\r\n    out[6] = a[2];\r\n    out[7] = a[5];\r\n    out[8] = a[8];\r\n  }\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Inverts a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the source matrix\r\n * @returns {mat3} out\r\n */\r\nexport function invert(out, a) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2];\r\n  var a10 = a[3],\r\n      a11 = a[4],\r\n      a12 = a[5];\r\n  var a20 = a[6],\r\n      a21 = a[7],\r\n      a22 = a[8];\r\n\r\n  var b01 = a22 * a11 - a12 * a21;\r\n  var b11 = -a22 * a10 + a12 * a20;\r\n  var b21 = a21 * a10 - a11 * a20;\r\n\r\n  // Calculate the determinant\r\n  var det = a00 * b01 + a01 * b11 + a02 * b21;\r\n\r\n  if (!det) {\r\n    return null;\r\n  }\r\n  det = 1.0 / det;\r\n\r\n  out[0] = b01 * det;\r\n  out[1] = (-a22 * a01 + a02 * a21) * det;\r\n  out[2] = (a12 * a01 - a02 * a11) * det;\r\n  out[3] = b11 * det;\r\n  out[4] = (a22 * a00 - a02 * a20) * det;\r\n  out[5] = (-a12 * a00 + a02 * a10) * det;\r\n  out[6] = b21 * det;\r\n  out[7] = (-a21 * a00 + a01 * a20) * det;\r\n  out[8] = (a11 * a00 - a01 * a10) * det;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the adjugate of a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the source matrix\r\n * @returns {mat3} out\r\n */\r\nexport function adjoint(out, a) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2];\r\n  var a10 = a[3],\r\n      a11 = a[4],\r\n      a12 = a[5];\r\n  var a20 = a[6],\r\n      a21 = a[7],\r\n      a22 = a[8];\r\n\r\n  out[0] = a11 * a22 - a12 * a21;\r\n  out[1] = a02 * a21 - a01 * a22;\r\n  out[2] = a01 * a12 - a02 * a11;\r\n  out[3] = a12 * a20 - a10 * a22;\r\n  out[4] = a00 * a22 - a02 * a20;\r\n  out[5] = a02 * a10 - a00 * a12;\r\n  out[6] = a10 * a21 - a11 * a20;\r\n  out[7] = a01 * a20 - a00 * a21;\r\n  out[8] = a00 * a11 - a01 * a10;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the determinant of a mat3\r\n *\r\n * @param {mat3} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\r\nexport function determinant(a) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2];\r\n  var a10 = a[3],\r\n      a11 = a[4],\r\n      a12 = a[5];\r\n  var a20 = a[6],\r\n      a21 = a[7],\r\n      a22 = a[8];\r\n\r\n  return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\r\n}\r\n\r\n/**\r\n * Multiplies two mat3's\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the first operand\r\n * @param {mat3} b the second operand\r\n * @returns {mat3} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2];\r\n  var a10 = a[3],\r\n      a11 = a[4],\r\n      a12 = a[5];\r\n  var a20 = a[6],\r\n      a21 = a[7],\r\n      a22 = a[8];\r\n\r\n  var b00 = b[0],\r\n      b01 = b[1],\r\n      b02 = b[2];\r\n  var b10 = b[3],\r\n      b11 = b[4],\r\n      b12 = b[5];\r\n  var b20 = b[6],\r\n      b21 = b[7],\r\n      b22 = b[8];\r\n\r\n  out[0] = b00 * a00 + b01 * a10 + b02 * a20;\r\n  out[1] = b00 * a01 + b01 * a11 + b02 * a21;\r\n  out[2] = b00 * a02 + b01 * a12 + b02 * a22;\r\n\r\n  out[3] = b10 * a00 + b11 * a10 + b12 * a20;\r\n  out[4] = b10 * a01 + b11 * a11 + b12 * a21;\r\n  out[5] = b10 * a02 + b11 * a12 + b12 * a22;\r\n\r\n  out[6] = b20 * a00 + b21 * a10 + b22 * a20;\r\n  out[7] = b20 * a01 + b21 * a11 + b22 * a21;\r\n  out[8] = b20 * a02 + b21 * a12 + b22 * a22;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Translate a mat3 by the given vector\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the matrix to translate\r\n * @param {vec2} v vector to translate by\r\n * @returns {mat3} out\r\n */\r\nexport function translate(out, a, v) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2],\r\n      a10 = a[3],\r\n      a11 = a[4],\r\n      a12 = a[5],\r\n      a20 = a[6],\r\n      a21 = a[7],\r\n      a22 = a[8],\r\n      x = v[0],\r\n      y = v[1];\r\n\r\n  out[0] = a00;\r\n  out[1] = a01;\r\n  out[2] = a02;\r\n\r\n  out[3] = a10;\r\n  out[4] = a11;\r\n  out[5] = a12;\r\n\r\n  out[6] = x * a00 + y * a10 + a20;\r\n  out[7] = x * a01 + y * a11 + a21;\r\n  out[8] = x * a02 + y * a12 + a22;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a mat3 by the given angle\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat3} out\r\n */\r\nexport function rotate(out, a, rad) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2],\r\n      a10 = a[3],\r\n      a11 = a[4],\r\n      a12 = a[5],\r\n      a20 = a[6],\r\n      a21 = a[7],\r\n      a22 = a[8],\r\n      s = Math.sin(rad),\r\n      c = Math.cos(rad);\r\n\r\n  out[0] = c * a00 + s * a10;\r\n  out[1] = c * a01 + s * a11;\r\n  out[2] = c * a02 + s * a12;\r\n\r\n  out[3] = c * a10 - s * a00;\r\n  out[4] = c * a11 - s * a01;\r\n  out[5] = c * a12 - s * a02;\r\n\r\n  out[6] = a20;\r\n  out[7] = a21;\r\n  out[8] = a22;\r\n  return out;\r\n};\r\n\r\n/**\r\n * Scales the mat3 by the dimensions in the given vec2\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the matrix to rotate\r\n * @param {vec2} v the vec2 to scale the matrix by\r\n * @returns {mat3} out\r\n **/\r\nexport function scale(out, a, v) {\r\n  var x = v[0],\r\n      y = v[1];\r\n\r\n  out[0] = x * a[0];\r\n  out[1] = x * a[1];\r\n  out[2] = x * a[2];\r\n\r\n  out[3] = y * a[3];\r\n  out[4] = y * a[4];\r\n  out[5] = y * a[5];\r\n\r\n  out[6] = a[6];\r\n  out[7] = a[7];\r\n  out[8] = a[8];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.translate(dest, dest, vec);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {vec2} v Translation vector\r\n * @returns {mat3} out\r\n */\r\nexport function fromTranslation(out, v) {\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 1;\r\n  out[5] = 0;\r\n  out[6] = v[0];\r\n  out[7] = v[1];\r\n  out[8] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a given angle\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.rotate(dest, dest, rad);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat3} out\r\n */\r\nexport function fromRotation(out, rad) {\r\n  var s = Math.sin(rad),\r\n      c = Math.cos(rad);\r\n\r\n  out[0] = c;\r\n  out[1] = s;\r\n  out[2] = 0;\r\n\r\n  out[3] = -s;\r\n  out[4] = c;\r\n  out[5] = 0;\r\n\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.scale(dest, dest, vec);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {vec2} v Scaling vector\r\n * @returns {mat3} out\r\n */\r\nexport function fromScaling(out, v) {\r\n  out[0] = v[0];\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n\r\n  out[3] = 0;\r\n  out[4] = v[1];\r\n  out[5] = 0;\r\n\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copies the values from a mat2d into a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat2d} a the matrix to copy\r\n * @returns {mat3} out\r\n **/\r\nexport function fromMat2d(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = 0;\r\n\r\n  out[3] = a[2];\r\n  out[4] = a[3];\r\n  out[5] = 0;\r\n\r\n  out[6] = a[4];\r\n  out[7] = a[5];\r\n  out[8] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n* Calculates a 3x3 matrix from the given quaternion\r\n*\r\n* @param {mat3} out mat3 receiving operation result\r\n* @param {quat} q Quaternion to create matrix from\r\n*\r\n* @returns {mat3} out\r\n*/\r\nexport function fromQuat(out, q) {\r\n  var x = q[0],\r\n      y = q[1],\r\n      z = q[2],\r\n      w = q[3];\r\n  var x2 = x + x;\r\n  var y2 = y + y;\r\n  var z2 = z + z;\r\n\r\n  var xx = x * x2;\r\n  var yx = y * x2;\r\n  var yy = y * y2;\r\n  var zx = z * x2;\r\n  var zy = z * y2;\r\n  var zz = z * z2;\r\n  var wx = w * x2;\r\n  var wy = w * y2;\r\n  var wz = w * z2;\r\n\r\n  out[0] = 1 - yy - zz;\r\n  out[3] = yx - wz;\r\n  out[6] = zx + wy;\r\n\r\n  out[1] = yx + wz;\r\n  out[4] = 1 - xx - zz;\r\n  out[7] = zy - wx;\r\n\r\n  out[2] = zx - wy;\r\n  out[5] = zy + wx;\r\n  out[8] = 1 - xx - yy;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n* Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\r\n*\r\n* @param {mat3} out mat3 receiving operation result\r\n* @param {mat4} a Mat4 to derive the normal matrix from\r\n*\r\n* @returns {mat3} out\r\n*/\r\nexport function normalFromMat4(out, a) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2],\r\n      a03 = a[3];\r\n  var a10 = a[4],\r\n      a11 = a[5],\r\n      a12 = a[6],\r\n      a13 = a[7];\r\n  var a20 = a[8],\r\n      a21 = a[9],\r\n      a22 = a[10],\r\n      a23 = a[11];\r\n  var a30 = a[12],\r\n      a31 = a[13],\r\n      a32 = a[14],\r\n      a33 = a[15];\r\n\r\n  var b00 = a00 * a11 - a01 * a10;\r\n  var b01 = a00 * a12 - a02 * a10;\r\n  var b02 = a00 * a13 - a03 * a10;\r\n  var b03 = a01 * a12 - a02 * a11;\r\n  var b04 = a01 * a13 - a03 * a11;\r\n  var b05 = a02 * a13 - a03 * a12;\r\n  var b06 = a20 * a31 - a21 * a30;\r\n  var b07 = a20 * a32 - a22 * a30;\r\n  var b08 = a20 * a33 - a23 * a30;\r\n  var b09 = a21 * a32 - a22 * a31;\r\n  var b10 = a21 * a33 - a23 * a31;\r\n  var b11 = a22 * a33 - a23 * a32;\r\n\r\n  // Calculate the determinant\r\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\r\n\r\n  if (!det) {\r\n    return null;\r\n  }\r\n  det = 1.0 / det;\r\n\r\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\r\n  out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\r\n  out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\r\n\r\n  out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\r\n  out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\r\n  out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\r\n\r\n  out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\r\n  out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\r\n  out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a 2D projection matrix with the given bounds\r\n *\r\n * @param {mat3} out mat3 frustum matrix will be written into\r\n * @param {number} width Width of your gl context\r\n * @param {number} height Height of gl context\r\n * @returns {mat3} out\r\n */\r\nexport function projection(out, width, height) {\r\n  out[0] = 2 / width;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = -2 / height;\r\n  out[5] = 0;\r\n  out[6] = -1;\r\n  out[7] = 1;\r\n  out[8] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns a string representation of a mat3\r\n *\r\n * @param {mat3} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\r\nexport function str(a) {\r\n  return 'mat3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ', ' + a[8] + ')';\r\n}\r\n\r\n/**\r\n * Returns Frobenius norm of a mat3\r\n *\r\n * @param {mat3} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\r\nexport function frob(a) {\r\n  return Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + Math.pow(a[6], 2) + Math.pow(a[7], 2) + Math.pow(a[8], 2));\r\n}\r\n\r\n/**\r\n * Adds two mat3's\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the first operand\r\n * @param {mat3} b the second operand\r\n * @returns {mat3} out\r\n */\r\nexport function add(out, a, b) {\r\n  out[0] = a[0] + b[0];\r\n  out[1] = a[1] + b[1];\r\n  out[2] = a[2] + b[2];\r\n  out[3] = a[3] + b[3];\r\n  out[4] = a[4] + b[4];\r\n  out[5] = a[5] + b[5];\r\n  out[6] = a[6] + b[6];\r\n  out[7] = a[7] + b[7];\r\n  out[8] = a[8] + b[8];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the first operand\r\n * @param {mat3} b the second operand\r\n * @returns {mat3} out\r\n */\r\nexport function subtract(out, a, b) {\r\n  out[0] = a[0] - b[0];\r\n  out[1] = a[1] - b[1];\r\n  out[2] = a[2] - b[2];\r\n  out[3] = a[3] - b[3];\r\n  out[4] = a[4] - b[4];\r\n  out[5] = a[5] - b[5];\r\n  out[6] = a[6] - b[6];\r\n  out[7] = a[7] - b[7];\r\n  out[8] = a[8] - b[8];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat3} out\r\n */\r\nexport function multiplyScalar(out, a, b) {\r\n  out[0] = a[0] * b;\r\n  out[1] = a[1] * b;\r\n  out[2] = a[2] * b;\r\n  out[3] = a[3] * b;\r\n  out[4] = a[4] * b;\r\n  out[5] = a[5] * b;\r\n  out[6] = a[6] * b;\r\n  out[7] = a[7] * b;\r\n  out[8] = a[8] * b;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two mat3's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat3} out the receiving vector\r\n * @param {mat3} a the first operand\r\n * @param {mat3} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat3} out\r\n */\r\nexport function multiplyScalarAndAdd(out, a, b, scale) {\r\n  out[0] = a[0] + b[0] * scale;\r\n  out[1] = a[1] + b[1] * scale;\r\n  out[2] = a[2] + b[2] * scale;\r\n  out[3] = a[3] + b[3] * scale;\r\n  out[4] = a[4] + b[4] * scale;\r\n  out[5] = a[5] + b[5] * scale;\r\n  out[6] = a[6] + b[6] * scale;\r\n  out[7] = a[7] + b[7] * scale;\r\n  out[8] = a[8] + b[8] * scale;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {mat3} a The first matrix.\r\n * @param {mat3} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\r\nexport function exactEquals(a, b) {\r\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8];\r\n}\r\n\r\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {mat3} a The first matrix.\r\n * @param {mat3} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3],\r\n      a4 = a[4],\r\n      a5 = a[5],\r\n      a6 = a[6],\r\n      a7 = a[7],\r\n      a8 = a[8];\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2],\r\n      b3 = b[3],\r\n      b4 = b[4],\r\n      b5 = b[5],\r\n      b6 = b[6],\r\n      b7 = b[7],\r\n      b8 = b[8];\r\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8));\r\n}\r\n\r\n/**\r\n * Alias for {@link mat3.multiply}\r\n * @function\r\n */\r\nexport var mul = multiply;\r\n\r\n/**\r\n * Alias for {@link mat3.subtract}\r\n * @function\r\n */\r\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\r\n\r\n/**\r\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\r\n * @module mat4\r\n */\r\n\r\n/**\r\n * Creates a new identity mat4\r\n *\r\n * @returns {mat4} a new 4x4 matrix\r\n */\r\nexport function create() {\r\n  var out = new glMatrix.ARRAY_TYPE(16);\r\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\r\n    out[1] = 0;\r\n    out[2] = 0;\r\n    out[3] = 0;\r\n    out[4] = 0;\r\n    out[6] = 0;\r\n    out[7] = 0;\r\n    out[8] = 0;\r\n    out[9] = 0;\r\n    out[11] = 0;\r\n    out[12] = 0;\r\n    out[13] = 0;\r\n    out[14] = 0;\r\n  }\r\n  out[0] = 1;\r\n  out[5] = 1;\r\n  out[10] = 1;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new mat4 initialized with values from an existing matrix\r\n *\r\n * @param {mat4} a matrix to clone\r\n * @returns {mat4} a new 4x4 matrix\r\n */\r\nexport function clone(a) {\r\n  var out = new glMatrix.ARRAY_TYPE(16);\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  out[4] = a[4];\r\n  out[5] = a[5];\r\n  out[6] = a[6];\r\n  out[7] = a[7];\r\n  out[8] = a[8];\r\n  out[9] = a[9];\r\n  out[10] = a[10];\r\n  out[11] = a[11];\r\n  out[12] = a[12];\r\n  out[13] = a[13];\r\n  out[14] = a[14];\r\n  out[15] = a[15];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copy the values from one mat4 to another\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\r\nexport function copy(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  out[4] = a[4];\r\n  out[5] = a[5];\r\n  out[6] = a[6];\r\n  out[7] = a[7];\r\n  out[8] = a[8];\r\n  out[9] = a[9];\r\n  out[10] = a[10];\r\n  out[11] = a[11];\r\n  out[12] = a[12];\r\n  out[13] = a[13];\r\n  out[14] = a[14];\r\n  out[15] = a[15];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Create a new mat4 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} A new mat4\r\n */\r\nexport function fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\r\n  var out = new glMatrix.ARRAY_TYPE(16);\r\n  out[0] = m00;\r\n  out[1] = m01;\r\n  out[2] = m02;\r\n  out[3] = m03;\r\n  out[4] = m10;\r\n  out[5] = m11;\r\n  out[6] = m12;\r\n  out[7] = m13;\r\n  out[8] = m20;\r\n  out[9] = m21;\r\n  out[10] = m22;\r\n  out[11] = m23;\r\n  out[12] = m30;\r\n  out[13] = m31;\r\n  out[14] = m32;\r\n  out[15] = m33;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the components of a mat4 to the given values\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} out\r\n */\r\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\r\n  out[0] = m00;\r\n  out[1] = m01;\r\n  out[2] = m02;\r\n  out[3] = m03;\r\n  out[4] = m10;\r\n  out[5] = m11;\r\n  out[6] = m12;\r\n  out[7] = m13;\r\n  out[8] = m20;\r\n  out[9] = m21;\r\n  out[10] = m22;\r\n  out[11] = m23;\r\n  out[12] = m30;\r\n  out[13] = m31;\r\n  out[14] = m32;\r\n  out[15] = m33;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set a mat4 to the identity matrix\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @returns {mat4} out\r\n */\r\nexport function identity(out) {\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = 1;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = 0;\r\n  out[10] = 1;\r\n  out[11] = 0;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transpose the values of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\r\nexport function transpose(out, a) {\r\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\r\n  if (out === a) {\r\n    var a01 = a[1],\r\n        a02 = a[2],\r\n        a03 = a[3];\r\n    var a12 = a[6],\r\n        a13 = a[7];\r\n    var a23 = a[11];\r\n\r\n    out[1] = a[4];\r\n    out[2] = a[8];\r\n    out[3] = a[12];\r\n    out[4] = a01;\r\n    out[6] = a[9];\r\n    out[7] = a[13];\r\n    out[8] = a02;\r\n    out[9] = a12;\r\n    out[11] = a[14];\r\n    out[12] = a03;\r\n    out[13] = a13;\r\n    out[14] = a23;\r\n  } else {\r\n    out[0] = a[0];\r\n    out[1] = a[4];\r\n    out[2] = a[8];\r\n    out[3] = a[12];\r\n    out[4] = a[1];\r\n    out[5] = a[5];\r\n    out[6] = a[9];\r\n    out[7] = a[13];\r\n    out[8] = a[2];\r\n    out[9] = a[6];\r\n    out[10] = a[10];\r\n    out[11] = a[14];\r\n    out[12] = a[3];\r\n    out[13] = a[7];\r\n    out[14] = a[11];\r\n    out[15] = a[15];\r\n  }\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Inverts a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\r\nexport function invert(out, a) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2],\r\n      a03 = a[3];\r\n  var a10 = a[4],\r\n      a11 = a[5],\r\n      a12 = a[6],\r\n      a13 = a[7];\r\n  var a20 = a[8],\r\n      a21 = a[9],\r\n      a22 = a[10],\r\n      a23 = a[11];\r\n  var a30 = a[12],\r\n      a31 = a[13],\r\n      a32 = a[14],\r\n      a33 = a[15];\r\n\r\n  var b00 = a00 * a11 - a01 * a10;\r\n  var b01 = a00 * a12 - a02 * a10;\r\n  var b02 = a00 * a13 - a03 * a10;\r\n  var b03 = a01 * a12 - a02 * a11;\r\n  var b04 = a01 * a13 - a03 * a11;\r\n  var b05 = a02 * a13 - a03 * a12;\r\n  var b06 = a20 * a31 - a21 * a30;\r\n  var b07 = a20 * a32 - a22 * a30;\r\n  var b08 = a20 * a33 - a23 * a30;\r\n  var b09 = a21 * a32 - a22 * a31;\r\n  var b10 = a21 * a33 - a23 * a31;\r\n  var b11 = a22 * a33 - a23 * a32;\r\n\r\n  // Calculate the determinant\r\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\r\n\r\n  if (!det) {\r\n    return null;\r\n  }\r\n  det = 1.0 / det;\r\n\r\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\r\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\r\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\r\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\r\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\r\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\r\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\r\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\r\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\r\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\r\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\r\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\r\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\r\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\r\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\r\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the adjugate of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\r\nexport function adjoint(out, a) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2],\r\n      a03 = a[3];\r\n  var a10 = a[4],\r\n      a11 = a[5],\r\n      a12 = a[6],\r\n      a13 = a[7];\r\n  var a20 = a[8],\r\n      a21 = a[9],\r\n      a22 = a[10],\r\n      a23 = a[11];\r\n  var a30 = a[12],\r\n      a31 = a[13],\r\n      a32 = a[14],\r\n      a33 = a[15];\r\n\r\n  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\r\n  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\r\n  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\r\n  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\r\n  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\r\n  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\r\n  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\r\n  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\r\n  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\r\n  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\r\n  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\r\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\r\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\r\n  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\r\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\r\n  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the determinant of a mat4\r\n *\r\n * @param {mat4} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\r\nexport function determinant(a) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2],\r\n      a03 = a[3];\r\n  var a10 = a[4],\r\n      a11 = a[5],\r\n      a12 = a[6],\r\n      a13 = a[7];\r\n  var a20 = a[8],\r\n      a21 = a[9],\r\n      a22 = a[10],\r\n      a23 = a[11];\r\n  var a30 = a[12],\r\n      a31 = a[13],\r\n      a32 = a[14],\r\n      a33 = a[15];\r\n\r\n  var b00 = a00 * a11 - a01 * a10;\r\n  var b01 = a00 * a12 - a02 * a10;\r\n  var b02 = a00 * a13 - a03 * a10;\r\n  var b03 = a01 * a12 - a02 * a11;\r\n  var b04 = a01 * a13 - a03 * a11;\r\n  var b05 = a02 * a13 - a03 * a12;\r\n  var b06 = a20 * a31 - a21 * a30;\r\n  var b07 = a20 * a32 - a22 * a30;\r\n  var b08 = a20 * a33 - a23 * a30;\r\n  var b09 = a21 * a32 - a22 * a31;\r\n  var b10 = a21 * a33 - a23 * a31;\r\n  var b11 = a22 * a33 - a23 * a32;\r\n\r\n  // Calculate the determinant\r\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\r\n}\r\n\r\n/**\r\n * Multiplies two mat4s\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @returns {mat4} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2],\r\n      a03 = a[3];\r\n  var a10 = a[4],\r\n      a11 = a[5],\r\n      a12 = a[6],\r\n      a13 = a[7];\r\n  var a20 = a[8],\r\n      a21 = a[9],\r\n      a22 = a[10],\r\n      a23 = a[11];\r\n  var a30 = a[12],\r\n      a31 = a[13],\r\n      a32 = a[14],\r\n      a33 = a[15];\r\n\r\n  // Cache only the current line of the second matrix\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2],\r\n      b3 = b[3];\r\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n\r\n  b0 = b[4];b1 = b[5];b2 = b[6];b3 = b[7];\r\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n\r\n  b0 = b[8];b1 = b[9];b2 = b[10];b3 = b[11];\r\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n\r\n  b0 = b[12];b1 = b[13];b2 = b[14];b3 = b[15];\r\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Translate a mat4 by the given vector\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to translate\r\n * @param {vec3} v vector to translate by\r\n * @returns {mat4} out\r\n */\r\nexport function translate(out, a, v) {\r\n  var x = v[0],\r\n      y = v[1],\r\n      z = v[2];\r\n  var a00 = void 0,\r\n      a01 = void 0,\r\n      a02 = void 0,\r\n      a03 = void 0;\r\n  var a10 = void 0,\r\n      a11 = void 0,\r\n      a12 = void 0,\r\n      a13 = void 0;\r\n  var a20 = void 0,\r\n      a21 = void 0,\r\n      a22 = void 0,\r\n      a23 = void 0;\r\n\r\n  if (a === out) {\r\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\r\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\r\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\r\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\r\n  } else {\r\n    a00 = a[0];a01 = a[1];a02 = a[2];a03 = a[3];\r\n    a10 = a[4];a11 = a[5];a12 = a[6];a13 = a[7];\r\n    a20 = a[8];a21 = a[9];a22 = a[10];a23 = a[11];\r\n\r\n    out[0] = a00;out[1] = a01;out[2] = a02;out[3] = a03;\r\n    out[4] = a10;out[5] = a11;out[6] = a12;out[7] = a13;\r\n    out[8] = a20;out[9] = a21;out[10] = a22;out[11] = a23;\r\n\r\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\r\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\r\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\r\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\r\n  }\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to scale\r\n * @param {vec3} v the vec3 to scale the matrix by\r\n * @returns {mat4} out\r\n **/\r\nexport function scale(out, a, v) {\r\n  var x = v[0],\r\n      y = v[1],\r\n      z = v[2];\r\n\r\n  out[0] = a[0] * x;\r\n  out[1] = a[1] * x;\r\n  out[2] = a[2] * x;\r\n  out[3] = a[3] * x;\r\n  out[4] = a[4] * y;\r\n  out[5] = a[5] * y;\r\n  out[6] = a[6] * y;\r\n  out[7] = a[7] * y;\r\n  out[8] = a[8] * z;\r\n  out[9] = a[9] * z;\r\n  out[10] = a[10] * z;\r\n  out[11] = a[11] * z;\r\n  out[12] = a[12];\r\n  out[13] = a[13];\r\n  out[14] = a[14];\r\n  out[15] = a[15];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a mat4 by the given angle around the given axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {vec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\r\nexport function rotate(out, a, rad, axis) {\r\n  var x = axis[0],\r\n      y = axis[1],\r\n      z = axis[2];\r\n  var len = Math.sqrt(x * x + y * y + z * z);\r\n  var s = void 0,\r\n      c = void 0,\r\n      t = void 0;\r\n  var a00 = void 0,\r\n      a01 = void 0,\r\n      a02 = void 0,\r\n      a03 = void 0;\r\n  var a10 = void 0,\r\n      a11 = void 0,\r\n      a12 = void 0,\r\n      a13 = void 0;\r\n  var a20 = void 0,\r\n      a21 = void 0,\r\n      a22 = void 0,\r\n      a23 = void 0;\r\n  var b00 = void 0,\r\n      b01 = void 0,\r\n      b02 = void 0;\r\n  var b10 = void 0,\r\n      b11 = void 0,\r\n      b12 = void 0;\r\n  var b20 = void 0,\r\n      b21 = void 0,\r\n      b22 = void 0;\r\n\r\n  if (len < glMatrix.EPSILON) {\r\n    return null;\r\n  }\r\n\r\n  len = 1 / len;\r\n  x *= len;\r\n  y *= len;\r\n  z *= len;\r\n\r\n  s = Math.sin(rad);\r\n  c = Math.cos(rad);\r\n  t = 1 - c;\r\n\r\n  a00 = a[0];a01 = a[1];a02 = a[2];a03 = a[3];\r\n  a10 = a[4];a11 = a[5];a12 = a[6];a13 = a[7];\r\n  a20 = a[8];a21 = a[9];a22 = a[10];a23 = a[11];\r\n\r\n  // Construct the elements of the rotation matrix\r\n  b00 = x * x * t + c;b01 = y * x * t + z * s;b02 = z * x * t - y * s;\r\n  b10 = x * y * t - z * s;b11 = y * y * t + c;b12 = z * y * t + x * s;\r\n  b20 = x * z * t + y * s;b21 = y * z * t - x * s;b22 = z * z * t + c;\r\n\r\n  // Perform rotation-specific matrix multiplication\r\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\r\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\r\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\r\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\r\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\r\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\r\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\r\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\r\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\r\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\r\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\r\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\r\n\r\n  if (a !== out) {\r\n    // If the source and destination differ, copy the unchanged last row\r\n    out[12] = a[12];\r\n    out[13] = a[13];\r\n    out[14] = a[14];\r\n    out[15] = a[15];\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a matrix by the given angle around the X axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\r\nexport function rotateX(out, a, rad) {\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n  var a10 = a[4];\r\n  var a11 = a[5];\r\n  var a12 = a[6];\r\n  var a13 = a[7];\r\n  var a20 = a[8];\r\n  var a21 = a[9];\r\n  var a22 = a[10];\r\n  var a23 = a[11];\r\n\r\n  if (a !== out) {\r\n    // If the source and destination differ, copy the unchanged rows\r\n    out[0] = a[0];\r\n    out[1] = a[1];\r\n    out[2] = a[2];\r\n    out[3] = a[3];\r\n    out[12] = a[12];\r\n    out[13] = a[13];\r\n    out[14] = a[14];\r\n    out[15] = a[15];\r\n  }\r\n\r\n  // Perform axis-specific matrix multiplication\r\n  out[4] = a10 * c + a20 * s;\r\n  out[5] = a11 * c + a21 * s;\r\n  out[6] = a12 * c + a22 * s;\r\n  out[7] = a13 * c + a23 * s;\r\n  out[8] = a20 * c - a10 * s;\r\n  out[9] = a21 * c - a11 * s;\r\n  out[10] = a22 * c - a12 * s;\r\n  out[11] = a23 * c - a13 * s;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a matrix by the given angle around the Y axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\r\nexport function rotateY(out, a, rad) {\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n  var a00 = a[0];\r\n  var a01 = a[1];\r\n  var a02 = a[2];\r\n  var a03 = a[3];\r\n  var a20 = a[8];\r\n  var a21 = a[9];\r\n  var a22 = a[10];\r\n  var a23 = a[11];\r\n\r\n  if (a !== out) {\r\n    // If the source and destination differ, copy the unchanged rows\r\n    out[4] = a[4];\r\n    out[5] = a[5];\r\n    out[6] = a[6];\r\n    out[7] = a[7];\r\n    out[12] = a[12];\r\n    out[13] = a[13];\r\n    out[14] = a[14];\r\n    out[15] = a[15];\r\n  }\r\n\r\n  // Perform axis-specific matrix multiplication\r\n  out[0] = a00 * c - a20 * s;\r\n  out[1] = a01 * c - a21 * s;\r\n  out[2] = a02 * c - a22 * s;\r\n  out[3] = a03 * c - a23 * s;\r\n  out[8] = a00 * s + a20 * c;\r\n  out[9] = a01 * s + a21 * c;\r\n  out[10] = a02 * s + a22 * c;\r\n  out[11] = a03 * s + a23 * c;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a matrix by the given angle around the Z axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\r\nexport function rotateZ(out, a, rad) {\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n  var a00 = a[0];\r\n  var a01 = a[1];\r\n  var a02 = a[2];\r\n  var a03 = a[3];\r\n  var a10 = a[4];\r\n  var a11 = a[5];\r\n  var a12 = a[6];\r\n  var a13 = a[7];\r\n\r\n  if (a !== out) {\r\n    // If the source and destination differ, copy the unchanged last row\r\n    out[8] = a[8];\r\n    out[9] = a[9];\r\n    out[10] = a[10];\r\n    out[11] = a[11];\r\n    out[12] = a[12];\r\n    out[13] = a[13];\r\n    out[14] = a[14];\r\n    out[15] = a[15];\r\n  }\r\n\r\n  // Perform axis-specific matrix multiplication\r\n  out[0] = a00 * c + a10 * s;\r\n  out[1] = a01 * c + a11 * s;\r\n  out[2] = a02 * c + a12 * s;\r\n  out[3] = a03 * c + a13 * s;\r\n  out[4] = a10 * c - a00 * s;\r\n  out[5] = a11 * c - a01 * s;\r\n  out[6] = a12 * c - a02 * s;\r\n  out[7] = a13 * c - a03 * s;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {vec3} v Translation vector\r\n * @returns {mat4} out\r\n */\r\nexport function fromTranslation(out, v) {\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = 1;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = 0;\r\n  out[10] = 1;\r\n  out[11] = 0;\r\n  out[12] = v[0];\r\n  out[13] = v[1];\r\n  out[14] = v[2];\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.scale(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {vec3} v Scaling vector\r\n * @returns {mat4} out\r\n */\r\nexport function fromScaling(out, v) {\r\n  out[0] = v[0];\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = v[1];\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = 0;\r\n  out[10] = v[2];\r\n  out[11] = 0;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a given angle around a given axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotate(dest, dest, rad, axis);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {vec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\r\nexport function fromRotation(out, rad, axis) {\r\n  var x = axis[0],\r\n      y = axis[1],\r\n      z = axis[2];\r\n  var len = Math.sqrt(x * x + y * y + z * z);\r\n  var s = void 0,\r\n      c = void 0,\r\n      t = void 0;\r\n\r\n  if (len < glMatrix.EPSILON) {\r\n    return null;\r\n  }\r\n\r\n  len = 1 / len;\r\n  x *= len;\r\n  y *= len;\r\n  z *= len;\r\n\r\n  s = Math.sin(rad);\r\n  c = Math.cos(rad);\r\n  t = 1 - c;\r\n\r\n  // Perform rotation-specific matrix multiplication\r\n  out[0] = x * x * t + c;\r\n  out[1] = y * x * t + z * s;\r\n  out[2] = z * x * t - y * s;\r\n  out[3] = 0;\r\n  out[4] = x * y * t - z * s;\r\n  out[5] = y * y * t + c;\r\n  out[6] = z * y * t + x * s;\r\n  out[7] = 0;\r\n  out[8] = x * z * t + y * s;\r\n  out[9] = y * z * t - x * s;\r\n  out[10] = z * z * t + c;\r\n  out[11] = 0;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from the given angle around the X axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateX(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\r\nexport function fromXRotation(out, rad) {\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n\r\n  // Perform axis-specific matrix multiplication\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = c;\r\n  out[6] = s;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = -s;\r\n  out[10] = c;\r\n  out[11] = 0;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from the given angle around the Y axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateY(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\r\nexport function fromYRotation(out, rad) {\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n\r\n  // Perform axis-specific matrix multiplication\r\n  out[0] = c;\r\n  out[1] = 0;\r\n  out[2] = -s;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = 1;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = s;\r\n  out[9] = 0;\r\n  out[10] = c;\r\n  out[11] = 0;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from the given angle around the Z axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateZ(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\r\nexport function fromZRotation(out, rad) {\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n\r\n  // Perform axis-specific matrix multiplication\r\n  out[0] = c;\r\n  out[1] = s;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = -s;\r\n  out[5] = c;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = 0;\r\n  out[10] = 1;\r\n  out[11] = 0;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a quaternion rotation and vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {vec3} v Translation vector\r\n * @returns {mat4} out\r\n */\r\nexport function fromRotationTranslation(out, q, v) {\r\n  // Quaternion math\r\n  var x = q[0],\r\n      y = q[1],\r\n      z = q[2],\r\n      w = q[3];\r\n  var x2 = x + x;\r\n  var y2 = y + y;\r\n  var z2 = z + z;\r\n\r\n  var xx = x * x2;\r\n  var xy = x * y2;\r\n  var xz = x * z2;\r\n  var yy = y * y2;\r\n  var yz = y * z2;\r\n  var zz = z * z2;\r\n  var wx = w * x2;\r\n  var wy = w * y2;\r\n  var wz = w * z2;\r\n\r\n  out[0] = 1 - (yy + zz);\r\n  out[1] = xy + wz;\r\n  out[2] = xz - wy;\r\n  out[3] = 0;\r\n  out[4] = xy - wz;\r\n  out[5] = 1 - (xx + zz);\r\n  out[6] = yz + wx;\r\n  out[7] = 0;\r\n  out[8] = xz + wy;\r\n  out[9] = yz - wx;\r\n  out[10] = 1 - (xx + yy);\r\n  out[11] = 0;\r\n  out[12] = v[0];\r\n  out[13] = v[1];\r\n  out[14] = v[2];\r\n  out[15] = 1;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new mat4 from a dual quat.\r\n *\r\n * @param {mat4} out Matrix\r\n * @param {quat2} a Dual Quaternion\r\n * @returns {mat4} mat4 receiving operation result\r\n */\r\nexport function fromQuat2(out, a) {\r\n  var translation = new glMatrix.ARRAY_TYPE(3);\r\n  var bx = -a[0],\r\n      by = -a[1],\r\n      bz = -a[2],\r\n      bw = a[3],\r\n      ax = a[4],\r\n      ay = a[5],\r\n      az = a[6],\r\n      aw = a[7];\r\n\r\n  var magnitude = bx * bx + by * by + bz * bz + bw * bw;\r\n  //Only scale if it makes sense\r\n  if (magnitude > 0) {\r\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\r\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\r\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\r\n  } else {\r\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\r\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\r\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\r\n  }\r\n  fromRotationTranslation(out, a, translation);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the translation vector component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslation,\r\n *  the returned vector will be the same as the translation vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive translation component\r\n * @param  {mat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\r\nexport function getTranslation(out, mat) {\r\n  out[0] = mat[12];\r\n  out[1] = mat[13];\r\n  out[2] = mat[14];\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the scaling factor component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslationScale\r\n *  with a normalized Quaternion paramter, the returned vector will be\r\n *  the same as the scaling vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive scaling factor component\r\n * @param  {mat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\r\nexport function getScaling(out, mat) {\r\n  var m11 = mat[0];\r\n  var m12 = mat[1];\r\n  var m13 = mat[2];\r\n  var m21 = mat[4];\r\n  var m22 = mat[5];\r\n  var m23 = mat[6];\r\n  var m31 = mat[8];\r\n  var m32 = mat[9];\r\n  var m33 = mat[10];\r\n\r\n  out[0] = Math.sqrt(m11 * m11 + m12 * m12 + m13 * m13);\r\n  out[1] = Math.sqrt(m21 * m21 + m22 * m22 + m23 * m23);\r\n  out[2] = Math.sqrt(m31 * m31 + m32 * m32 + m33 * m33);\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns a quaternion representing the rotational component\r\n *  of a transformation matrix. If a matrix is built with\r\n *  fromRotationTranslation, the returned quaternion will be the\r\n *  same as the quaternion originally supplied.\r\n * @param {quat} out Quaternion to receive the rotation component\r\n * @param {mat4} mat Matrix to be decomposed (input)\r\n * @return {quat} out\r\n */\r\nexport function getRotation(out, mat) {\r\n  // Algorithm taken from http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\r\n  var trace = mat[0] + mat[5] + mat[10];\r\n  var S = 0;\r\n\r\n  if (trace > 0) {\r\n    S = Math.sqrt(trace + 1.0) * 2;\r\n    out[3] = 0.25 * S;\r\n    out[0] = (mat[6] - mat[9]) / S;\r\n    out[1] = (mat[8] - mat[2]) / S;\r\n    out[2] = (mat[1] - mat[4]) / S;\r\n  } else if (mat[0] > mat[5] && mat[0] > mat[10]) {\r\n    S = Math.sqrt(1.0 + mat[0] - mat[5] - mat[10]) * 2;\r\n    out[3] = (mat[6] - mat[9]) / S;\r\n    out[0] = 0.25 * S;\r\n    out[1] = (mat[1] + mat[4]) / S;\r\n    out[2] = (mat[8] + mat[2]) / S;\r\n  } else if (mat[5] > mat[10]) {\r\n    S = Math.sqrt(1.0 + mat[5] - mat[0] - mat[10]) * 2;\r\n    out[3] = (mat[8] - mat[2]) / S;\r\n    out[0] = (mat[1] + mat[4]) / S;\r\n    out[1] = 0.25 * S;\r\n    out[2] = (mat[6] + mat[9]) / S;\r\n  } else {\r\n    S = Math.sqrt(1.0 + mat[10] - mat[0] - mat[5]) * 2;\r\n    out[3] = (mat[1] - mat[4]) / S;\r\n    out[0] = (mat[8] + mat[2]) / S;\r\n    out[1] = (mat[6] + mat[9]) / S;\r\n    out[2] = 0.25 * S;\r\n  }\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {vec3} v Translation vector\r\n * @param {vec3} s Scaling vector\r\n * @returns {mat4} out\r\n */\r\nexport function fromRotationTranslationScale(out, q, v, s) {\r\n  // Quaternion math\r\n  var x = q[0],\r\n      y = q[1],\r\n      z = q[2],\r\n      w = q[3];\r\n  var x2 = x + x;\r\n  var y2 = y + y;\r\n  var z2 = z + z;\r\n\r\n  var xx = x * x2;\r\n  var xy = x * y2;\r\n  var xz = x * z2;\r\n  var yy = y * y2;\r\n  var yz = y * z2;\r\n  var zz = z * z2;\r\n  var wx = w * x2;\r\n  var wy = w * y2;\r\n  var wz = w * z2;\r\n  var sx = s[0];\r\n  var sy = s[1];\r\n  var sz = s[2];\r\n\r\n  out[0] = (1 - (yy + zz)) * sx;\r\n  out[1] = (xy + wz) * sx;\r\n  out[2] = (xz - wy) * sx;\r\n  out[3] = 0;\r\n  out[4] = (xy - wz) * sy;\r\n  out[5] = (1 - (xx + zz)) * sy;\r\n  out[6] = (yz + wx) * sy;\r\n  out[7] = 0;\r\n  out[8] = (xz + wy) * sz;\r\n  out[9] = (yz - wx) * sz;\r\n  out[10] = (1 - (xx + yy)) * sz;\r\n  out[11] = 0;\r\n  out[12] = v[0];\r\n  out[13] = v[1];\r\n  out[14] = v[2];\r\n  out[15] = 1;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     mat4.translate(dest, origin);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *     mat4.translate(dest, negativeOrigin);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {vec3} v Translation vector\r\n * @param {vec3} s Scaling vector\r\n * @param {vec3} o The origin vector around which to scale and rotate\r\n * @returns {mat4} out\r\n */\r\nexport function fromRotationTranslationScaleOrigin(out, q, v, s, o) {\r\n  // Quaternion math\r\n  var x = q[0],\r\n      y = q[1],\r\n      z = q[2],\r\n      w = q[3];\r\n  var x2 = x + x;\r\n  var y2 = y + y;\r\n  var z2 = z + z;\r\n\r\n  var xx = x * x2;\r\n  var xy = x * y2;\r\n  var xz = x * z2;\r\n  var yy = y * y2;\r\n  var yz = y * z2;\r\n  var zz = z * z2;\r\n  var wx = w * x2;\r\n  var wy = w * y2;\r\n  var wz = w * z2;\r\n\r\n  var sx = s[0];\r\n  var sy = s[1];\r\n  var sz = s[2];\r\n\r\n  var ox = o[0];\r\n  var oy = o[1];\r\n  var oz = o[2];\r\n\r\n  var out0 = (1 - (yy + zz)) * sx;\r\n  var out1 = (xy + wz) * sx;\r\n  var out2 = (xz - wy) * sx;\r\n  var out4 = (xy - wz) * sy;\r\n  var out5 = (1 - (xx + zz)) * sy;\r\n  var out6 = (yz + wx) * sy;\r\n  var out8 = (xz + wy) * sz;\r\n  var out9 = (yz - wx) * sz;\r\n  var out10 = (1 - (xx + yy)) * sz;\r\n\r\n  out[0] = out0;\r\n  out[1] = out1;\r\n  out[2] = out2;\r\n  out[3] = 0;\r\n  out[4] = out4;\r\n  out[5] = out5;\r\n  out[6] = out6;\r\n  out[7] = 0;\r\n  out[8] = out8;\r\n  out[9] = out9;\r\n  out[10] = out10;\r\n  out[11] = 0;\r\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\r\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\r\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\r\n  out[15] = 1;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates a 4x4 matrix from the given quaternion\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat} q Quaternion to create matrix from\r\n *\r\n * @returns {mat4} out\r\n */\r\nexport function fromQuat(out, q) {\r\n  var x = q[0],\r\n      y = q[1],\r\n      z = q[2],\r\n      w = q[3];\r\n  var x2 = x + x;\r\n  var y2 = y + y;\r\n  var z2 = z + z;\r\n\r\n  var xx = x * x2;\r\n  var yx = y * x2;\r\n  var yy = y * y2;\r\n  var zx = z * x2;\r\n  var zy = z * y2;\r\n  var zz = z * z2;\r\n  var wx = w * x2;\r\n  var wy = w * y2;\r\n  var wz = w * z2;\r\n\r\n  out[0] = 1 - yy - zz;\r\n  out[1] = yx + wz;\r\n  out[2] = zx - wy;\r\n  out[3] = 0;\r\n\r\n  out[4] = yx - wz;\r\n  out[5] = 1 - xx - zz;\r\n  out[6] = zy + wx;\r\n  out[7] = 0;\r\n\r\n  out[8] = zx + wy;\r\n  out[9] = zy - wx;\r\n  out[10] = 1 - xx - yy;\r\n  out[11] = 0;\r\n\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a frustum matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Number} left Left bound of the frustum\r\n * @param {Number} right Right bound of the frustum\r\n * @param {Number} bottom Bottom bound of the frustum\r\n * @param {Number} top Top bound of the frustum\r\n * @param {Number} near Near bound of the frustum\r\n * @param {Number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\r\nexport function frustum(out, left, right, bottom, top, near, far) {\r\n  var rl = 1 / (right - left);\r\n  var tb = 1 / (top - bottom);\r\n  var nf = 1 / (near - far);\r\n  out[0] = near * 2 * rl;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = near * 2 * tb;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = (right + left) * rl;\r\n  out[9] = (top + bottom) * tb;\r\n  out[10] = (far + near) * nf;\r\n  out[11] = -1;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = far * near * 2 * nf;\r\n  out[15] = 0;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a perspective projection matrix with the given bounds.\r\n * Passing null/undefined/no value for far will generate infinite projection matrix.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} fovy Vertical field of view in radians\r\n * @param {number} aspect Aspect ratio. typically viewport width/height\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum, can be null or Infinity\r\n * @returns {mat4} out\r\n */\r\nexport function perspective(out, fovy, aspect, near, far) {\r\n  var f = 1.0 / Math.tan(fovy / 2),\r\n      nf = void 0;\r\n  out[0] = f / aspect;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = f;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = 0;\r\n  out[11] = -1;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[15] = 0;\r\n  if (far != null && far !== Infinity) {\r\n    nf = 1 / (near - far);\r\n    out[10] = (far + near) * nf;\r\n    out[14] = 2 * far * near * nf;\r\n  } else {\r\n    out[10] = -1;\r\n    out[14] = -2 * near;\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a perspective projection matrix with the given field of view.\r\n * This is primarily useful for generating projection matrices to be used\r\n * with the still experiemental WebVR API.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\r\nexport function perspectiveFromFieldOfView(out, fov, near, far) {\r\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\r\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\r\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\r\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\r\n  var xScale = 2.0 / (leftTan + rightTan);\r\n  var yScale = 2.0 / (upTan + downTan);\r\n\r\n  out[0] = xScale;\r\n  out[1] = 0.0;\r\n  out[2] = 0.0;\r\n  out[3] = 0.0;\r\n  out[4] = 0.0;\r\n  out[5] = yScale;\r\n  out[6] = 0.0;\r\n  out[7] = 0.0;\r\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\r\n  out[9] = (upTan - downTan) * yScale * 0.5;\r\n  out[10] = far / (near - far);\r\n  out[11] = -1.0;\r\n  out[12] = 0.0;\r\n  out[13] = 0.0;\r\n  out[14] = far * near / (near - far);\r\n  out[15] = 0.0;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a orthogonal projection matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} left Left bound of the frustum\r\n * @param {number} right Right bound of the frustum\r\n * @param {number} bottom Bottom bound of the frustum\r\n * @param {number} top Top bound of the frustum\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\r\nexport function ortho(out, left, right, bottom, top, near, far) {\r\n  var lr = 1 / (left - right);\r\n  var bt = 1 / (bottom - top);\r\n  var nf = 1 / (near - far);\r\n  out[0] = -2 * lr;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = -2 * bt;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = 0;\r\n  out[10] = 2 * nf;\r\n  out[11] = 0;\r\n  out[12] = (left + right) * lr;\r\n  out[13] = (top + bottom) * bt;\r\n  out[14] = (far + near) * nf;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\r\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {vec3} eye Position of the viewer\r\n * @param {vec3} center Point the viewer is looking at\r\n * @param {vec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\r\nexport function lookAt(out, eye, center, up) {\r\n  var x0 = void 0,\r\n      x1 = void 0,\r\n      x2 = void 0,\r\n      y0 = void 0,\r\n      y1 = void 0,\r\n      y2 = void 0,\r\n      z0 = void 0,\r\n      z1 = void 0,\r\n      z2 = void 0,\r\n      len = void 0;\r\n  var eyex = eye[0];\r\n  var eyey = eye[1];\r\n  var eyez = eye[2];\r\n  var upx = up[0];\r\n  var upy = up[1];\r\n  var upz = up[2];\r\n  var centerx = center[0];\r\n  var centery = center[1];\r\n  var centerz = center[2];\r\n\r\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON && Math.abs(eyey - centery) < glMatrix.EPSILON && Math.abs(eyez - centerz) < glMatrix.EPSILON) {\r\n    return identity(out);\r\n  }\r\n\r\n  z0 = eyex - centerx;\r\n  z1 = eyey - centery;\r\n  z2 = eyez - centerz;\r\n\r\n  len = 1 / Math.sqrt(z0 * z0 + z1 * z1 + z2 * z2);\r\n  z0 *= len;\r\n  z1 *= len;\r\n  z2 *= len;\r\n\r\n  x0 = upy * z2 - upz * z1;\r\n  x1 = upz * z0 - upx * z2;\r\n  x2 = upx * z1 - upy * z0;\r\n  len = Math.sqrt(x0 * x0 + x1 * x1 + x2 * x2);\r\n  if (!len) {\r\n    x0 = 0;\r\n    x1 = 0;\r\n    x2 = 0;\r\n  } else {\r\n    len = 1 / len;\r\n    x0 *= len;\r\n    x1 *= len;\r\n    x2 *= len;\r\n  }\r\n\r\n  y0 = z1 * x2 - z2 * x1;\r\n  y1 = z2 * x0 - z0 * x2;\r\n  y2 = z0 * x1 - z1 * x0;\r\n\r\n  len = Math.sqrt(y0 * y0 + y1 * y1 + y2 * y2);\r\n  if (!len) {\r\n    y0 = 0;\r\n    y1 = 0;\r\n    y2 = 0;\r\n  } else {\r\n    len = 1 / len;\r\n    y0 *= len;\r\n    y1 *= len;\r\n    y2 *= len;\r\n  }\r\n\r\n  out[0] = x0;\r\n  out[1] = y0;\r\n  out[2] = z0;\r\n  out[3] = 0;\r\n  out[4] = x1;\r\n  out[5] = y1;\r\n  out[6] = z1;\r\n  out[7] = 0;\r\n  out[8] = x2;\r\n  out[9] = y2;\r\n  out[10] = z2;\r\n  out[11] = 0;\r\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\r\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\r\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\r\n  out[15] = 1;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a matrix that makes something look at something else.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {vec3} eye Position of the viewer\r\n * @param {vec3} center Point the viewer is looking at\r\n * @param {vec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\r\nexport function targetTo(out, eye, target, up) {\r\n  var eyex = eye[0],\r\n      eyey = eye[1],\r\n      eyez = eye[2],\r\n      upx = up[0],\r\n      upy = up[1],\r\n      upz = up[2];\r\n\r\n  var z0 = eyex - target[0],\r\n      z1 = eyey - target[1],\r\n      z2 = eyez - target[2];\r\n\r\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\r\n  if (len > 0) {\r\n    len = 1 / Math.sqrt(len);\r\n    z0 *= len;\r\n    z1 *= len;\r\n    z2 *= len;\r\n  }\r\n\r\n  var x0 = upy * z2 - upz * z1,\r\n      x1 = upz * z0 - upx * z2,\r\n      x2 = upx * z1 - upy * z0;\r\n\r\n  len = x0 * x0 + x1 * x1 + x2 * x2;\r\n  if (len > 0) {\r\n    len = 1 / Math.sqrt(len);\r\n    x0 *= len;\r\n    x1 *= len;\r\n    x2 *= len;\r\n  }\r\n\r\n  out[0] = x0;\r\n  out[1] = x1;\r\n  out[2] = x2;\r\n  out[3] = 0;\r\n  out[4] = z1 * x2 - z2 * x1;\r\n  out[5] = z2 * x0 - z0 * x2;\r\n  out[6] = z0 * x1 - z1 * x0;\r\n  out[7] = 0;\r\n  out[8] = z0;\r\n  out[9] = z1;\r\n  out[10] = z2;\r\n  out[11] = 0;\r\n  out[12] = eyex;\r\n  out[13] = eyey;\r\n  out[14] = eyez;\r\n  out[15] = 1;\r\n  return out;\r\n};\r\n\r\n/**\r\n * Returns a string representation of a mat4\r\n *\r\n * @param {mat4} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\r\nexport function str(a) {\r\n  return 'mat4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ', ' + a[8] + ', ' + a[9] + ', ' + a[10] + ', ' + a[11] + ', ' + a[12] + ', ' + a[13] + ', ' + a[14] + ', ' + a[15] + ')';\r\n}\r\n\r\n/**\r\n * Returns Frobenius norm of a mat4\r\n *\r\n * @param {mat4} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\r\nexport function frob(a) {\r\n  return Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + Math.pow(a[6], 2) + Math.pow(a[7], 2) + Math.pow(a[8], 2) + Math.pow(a[9], 2) + Math.pow(a[10], 2) + Math.pow(a[11], 2) + Math.pow(a[12], 2) + Math.pow(a[13], 2) + Math.pow(a[14], 2) + Math.pow(a[15], 2));\r\n}\r\n\r\n/**\r\n * Adds two mat4's\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @returns {mat4} out\r\n */\r\nexport function add(out, a, b) {\r\n  out[0] = a[0] + b[0];\r\n  out[1] = a[1] + b[1];\r\n  out[2] = a[2] + b[2];\r\n  out[3] = a[3] + b[3];\r\n  out[4] = a[4] + b[4];\r\n  out[5] = a[5] + b[5];\r\n  out[6] = a[6] + b[6];\r\n  out[7] = a[7] + b[7];\r\n  out[8] = a[8] + b[8];\r\n  out[9] = a[9] + b[9];\r\n  out[10] = a[10] + b[10];\r\n  out[11] = a[11] + b[11];\r\n  out[12] = a[12] + b[12];\r\n  out[13] = a[13] + b[13];\r\n  out[14] = a[14] + b[14];\r\n  out[15] = a[15] + b[15];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @returns {mat4} out\r\n */\r\nexport function subtract(out, a, b) {\r\n  out[0] = a[0] - b[0];\r\n  out[1] = a[1] - b[1];\r\n  out[2] = a[2] - b[2];\r\n  out[3] = a[3] - b[3];\r\n  out[4] = a[4] - b[4];\r\n  out[5] = a[5] - b[5];\r\n  out[6] = a[6] - b[6];\r\n  out[7] = a[7] - b[7];\r\n  out[8] = a[8] - b[8];\r\n  out[9] = a[9] - b[9];\r\n  out[10] = a[10] - b[10];\r\n  out[11] = a[11] - b[11];\r\n  out[12] = a[12] - b[12];\r\n  out[13] = a[13] - b[13];\r\n  out[14] = a[14] - b[14];\r\n  out[15] = a[15] - b[15];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat4} out\r\n */\r\nexport function multiplyScalar(out, a, b) {\r\n  out[0] = a[0] * b;\r\n  out[1] = a[1] * b;\r\n  out[2] = a[2] * b;\r\n  out[3] = a[3] * b;\r\n  out[4] = a[4] * b;\r\n  out[5] = a[5] * b;\r\n  out[6] = a[6] * b;\r\n  out[7] = a[7] * b;\r\n  out[8] = a[8] * b;\r\n  out[9] = a[9] * b;\r\n  out[10] = a[10] * b;\r\n  out[11] = a[11] * b;\r\n  out[12] = a[12] * b;\r\n  out[13] = a[13] * b;\r\n  out[14] = a[14] * b;\r\n  out[15] = a[15] * b;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat4} out the receiving vector\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat4} out\r\n */\r\nexport function multiplyScalarAndAdd(out, a, b, scale) {\r\n  out[0] = a[0] + b[0] * scale;\r\n  out[1] = a[1] + b[1] * scale;\r\n  out[2] = a[2] + b[2] * scale;\r\n  out[3] = a[3] + b[3] * scale;\r\n  out[4] = a[4] + b[4] * scale;\r\n  out[5] = a[5] + b[5] * scale;\r\n  out[6] = a[6] + b[6] * scale;\r\n  out[7] = a[7] + b[7] * scale;\r\n  out[8] = a[8] + b[8] * scale;\r\n  out[9] = a[9] + b[9] * scale;\r\n  out[10] = a[10] + b[10] * scale;\r\n  out[11] = a[11] + b[11] * scale;\r\n  out[12] = a[12] + b[12] * scale;\r\n  out[13] = a[13] + b[13] * scale;\r\n  out[14] = a[14] + b[14] * scale;\r\n  out[15] = a[15] + b[15] * scale;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {mat4} a The first matrix.\r\n * @param {mat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\r\nexport function exactEquals(a, b) {\r\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\r\n}\r\n\r\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {mat4} a The first matrix.\r\n * @param {mat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3];\r\n  var a4 = a[4],\r\n      a5 = a[5],\r\n      a6 = a[6],\r\n      a7 = a[7];\r\n  var a8 = a[8],\r\n      a9 = a[9],\r\n      a10 = a[10],\r\n      a11 = a[11];\r\n  var a12 = a[12],\r\n      a13 = a[13],\r\n      a14 = a[14],\r\n      a15 = a[15];\r\n\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2],\r\n      b3 = b[3];\r\n  var b4 = b[4],\r\n      b5 = b[5],\r\n      b6 = b[6],\r\n      b7 = b[7];\r\n  var b8 = b[8],\r\n      b9 = b[9],\r\n      b10 = b[10],\r\n      b11 = b[11];\r\n  var b12 = b[12],\r\n      b13 = b[13],\r\n      b14 = b[14],\r\n      b15 = b[15];\r\n\r\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\r\n}\r\n\r\n/**\r\n * Alias for {@link mat4.multiply}\r\n * @function\r\n */\r\nexport var mul = multiply;\r\n\r\n/**\r\n * Alias for {@link mat4.subtract}\r\n * @function\r\n */\r\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\r\n\r\n/**\r\n * 3 Dimensional Vector\r\n * @module vec3\r\n */\r\n\r\n/**\r\n * Creates a new, empty vec3\r\n *\r\n * @returns {vec3} a new 3D vector\r\n */\r\nexport function create() {\r\n  var out = new glMatrix.ARRAY_TYPE(3);\r\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\r\n    out[0] = 0;\r\n    out[1] = 0;\r\n    out[2] = 0;\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new vec3 initialized with values from an existing vector\r\n *\r\n * @param {vec3} a vector to clone\r\n * @returns {vec3} a new 3D vector\r\n */\r\nexport function clone(a) {\r\n  var out = new glMatrix.ARRAY_TYPE(3);\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the length of a vec3\r\n *\r\n * @param {vec3} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\r\nexport function length(a) {\r\n  var x = a[0];\r\n  var y = a[1];\r\n  var z = a[2];\r\n  return Math.sqrt(x * x + y * y + z * z);\r\n}\r\n\r\n/**\r\n * Creates a new vec3 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} a new 3D vector\r\n */\r\nexport function fromValues(x, y, z) {\r\n  var out = new glMatrix.ARRAY_TYPE(3);\r\n  out[0] = x;\r\n  out[1] = y;\r\n  out[2] = z;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copy the values from one vec3 to another\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the source vector\r\n * @returns {vec3} out\r\n */\r\nexport function copy(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the components of a vec3 to the given values\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} out\r\n */\r\nexport function set(out, x, y, z) {\r\n  out[0] = x;\r\n  out[1] = y;\r\n  out[2] = z;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function add(out, a, b) {\r\n  out[0] = a[0] + b[0];\r\n  out[1] = a[1] + b[1];\r\n  out[2] = a[2] + b[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function subtract(out, a, b) {\r\n  out[0] = a[0] - b[0];\r\n  out[1] = a[1] - b[1];\r\n  out[2] = a[2] - b[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Multiplies two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  out[0] = a[0] * b[0];\r\n  out[1] = a[1] * b[1];\r\n  out[2] = a[2] * b[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Divides two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function divide(out, a, b) {\r\n  out[0] = a[0] / b[0];\r\n  out[1] = a[1] / b[1];\r\n  out[2] = a[2] / b[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.ceil the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to ceil\r\n * @returns {vec3} out\r\n */\r\nexport function ceil(out, a) {\r\n  out[0] = Math.ceil(a[0]);\r\n  out[1] = Math.ceil(a[1]);\r\n  out[2] = Math.ceil(a[2]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.floor the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to floor\r\n * @returns {vec3} out\r\n */\r\nexport function floor(out, a) {\r\n  out[0] = Math.floor(a[0]);\r\n  out[1] = Math.floor(a[1]);\r\n  out[2] = Math.floor(a[2]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the minimum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function min(out, a, b) {\r\n  out[0] = Math.min(a[0], b[0]);\r\n  out[1] = Math.min(a[1], b[1]);\r\n  out[2] = Math.min(a[2], b[2]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the maximum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function max(out, a, b) {\r\n  out[0] = Math.max(a[0], b[0]);\r\n  out[1] = Math.max(a[1], b[1]);\r\n  out[2] = Math.max(a[2], b[2]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.round the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to round\r\n * @returns {vec3} out\r\n */\r\nexport function round(out, a) {\r\n  out[0] = Math.round(a[0]);\r\n  out[1] = Math.round(a[1]);\r\n  out[2] = Math.round(a[2]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Scales a vec3 by a scalar number\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec3} out\r\n */\r\nexport function scale(out, a, b) {\r\n  out[0] = a[0] * b;\r\n  out[1] = a[1] * b;\r\n  out[2] = a[2] * b;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two vec3's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec3} out\r\n */\r\nexport function scaleAndAdd(out, a, b, scale) {\r\n  out[0] = a[0] + b[0] * scale;\r\n  out[1] = a[1] + b[1] * scale;\r\n  out[2] = a[2] + b[2] * scale;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the euclidian distance between two vec3's\r\n *\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\r\nexport function distance(a, b) {\r\n  var x = b[0] - a[0];\r\n  var y = b[1] - a[1];\r\n  var z = b[2] - a[2];\r\n  return Math.sqrt(x * x + y * y + z * z);\r\n}\r\n\r\n/**\r\n * Calculates the squared euclidian distance between two vec3's\r\n *\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\r\nexport function squaredDistance(a, b) {\r\n  var x = b[0] - a[0];\r\n  var y = b[1] - a[1];\r\n  var z = b[2] - a[2];\r\n  return x * x + y * y + z * z;\r\n}\r\n\r\n/**\r\n * Calculates the squared length of a vec3\r\n *\r\n * @param {vec3} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\r\nexport function squaredLength(a) {\r\n  var x = a[0];\r\n  var y = a[1];\r\n  var z = a[2];\r\n  return x * x + y * y + z * z;\r\n}\r\n\r\n/**\r\n * Negates the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to negate\r\n * @returns {vec3} out\r\n */\r\nexport function negate(out, a) {\r\n  out[0] = -a[0];\r\n  out[1] = -a[1];\r\n  out[2] = -a[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the inverse of the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to invert\r\n * @returns {vec3} out\r\n */\r\nexport function inverse(out, a) {\r\n  out[0] = 1.0 / a[0];\r\n  out[1] = 1.0 / a[1];\r\n  out[2] = 1.0 / a[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Normalize a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to normalize\r\n * @returns {vec3} out\r\n */\r\nexport function normalize(out, a) {\r\n  var x = a[0];\r\n  var y = a[1];\r\n  var z = a[2];\r\n  var len = x * x + y * y + z * z;\r\n  if (len > 0) {\r\n    //TODO: evaluate use of glm_invsqrt here?\r\n    len = 1 / Math.sqrt(len);\r\n    out[0] = a[0] * len;\r\n    out[1] = a[1] * len;\r\n    out[2] = a[2] * len;\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the dot product of two vec3's\r\n *\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\r\nexport function dot(a, b) {\r\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\r\n}\r\n\r\n/**\r\n * Computes the cross product of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function cross(out, a, b) {\r\n  var ax = a[0],\r\n      ay = a[1],\r\n      az = a[2];\r\n  var bx = b[0],\r\n      by = b[1],\r\n      bz = b[2];\r\n\r\n  out[0] = ay * bz - az * by;\r\n  out[1] = az * bx - ax * bz;\r\n  out[2] = ax * by - ay * bx;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Performs a linear interpolation between two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\r\nexport function lerp(out, a, b, t) {\r\n  var ax = a[0];\r\n  var ay = a[1];\r\n  var az = a[2];\r\n  out[0] = ax + t * (b[0] - ax);\r\n  out[1] = ay + t * (b[1] - ay);\r\n  out[2] = az + t * (b[2] - az);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Performs a hermite interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {vec3} c the third operand\r\n * @param {vec3} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\r\nexport function hermite(out, a, b, c, d, t) {\r\n  var factorTimes2 = t * t;\r\n  var factor1 = factorTimes2 * (2 * t - 3) + 1;\r\n  var factor2 = factorTimes2 * (t - 2) + t;\r\n  var factor3 = factorTimes2 * (t - 1);\r\n  var factor4 = factorTimes2 * (3 - 2 * t);\r\n\r\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\r\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\r\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Performs a bezier interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {vec3} c the third operand\r\n * @param {vec3} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\r\nexport function bezier(out, a, b, c, d, t) {\r\n  var inverseFactor = 1 - t;\r\n  var inverseFactorTimesTwo = inverseFactor * inverseFactor;\r\n  var factorTimes2 = t * t;\r\n  var factor1 = inverseFactorTimesTwo * inverseFactor;\r\n  var factor2 = 3 * t * inverseFactorTimesTwo;\r\n  var factor3 = 3 * factorTimes2 * inverseFactor;\r\n  var factor4 = factorTimes2 * t;\r\n\r\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\r\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\r\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec3} out\r\n */\r\nexport function random(out, scale) {\r\n  scale = scale || 1.0;\r\n\r\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\r\n  var z = glMatrix.RANDOM() * 2.0 - 1.0;\r\n  var zScale = Math.sqrt(1.0 - z * z) * scale;\r\n\r\n  out[0] = Math.cos(r) * zScale;\r\n  out[1] = Math.sin(r) * zScale;\r\n  out[2] = z * scale;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec3 with a mat4.\r\n * 4th vector component is implicitly '1'\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to transform\r\n * @param {mat4} m matrix to transform with\r\n * @returns {vec3} out\r\n */\r\nexport function transformMat4(out, a, m) {\r\n  var x = a[0],\r\n      y = a[1],\r\n      z = a[2];\r\n  var w = m[3] * x + m[7] * y + m[11] * z + m[15];\r\n  w = w || 1.0;\r\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\r\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\r\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec3 with a mat3.\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to transform\r\n * @param {mat3} m the 3x3 matrix to transform with\r\n * @returns {vec3} out\r\n */\r\nexport function transformMat3(out, a, m) {\r\n  var x = a[0],\r\n      y = a[1],\r\n      z = a[2];\r\n  out[0] = x * m[0] + y * m[3] + z * m[6];\r\n  out[1] = x * m[1] + y * m[4] + z * m[7];\r\n  out[2] = x * m[2] + y * m[5] + z * m[8];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec3 with a quat\r\n * Can also be used for dual quaternions. (Multiply it with the real part)\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to transform\r\n * @param {quat} q quaternion to transform with\r\n * @returns {vec3} out\r\n */\r\nexport function transformQuat(out, a, q) {\r\n  // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\r\n  var qx = q[0],\r\n      qy = q[1],\r\n      qz = q[2],\r\n      qw = q[3];\r\n  var x = a[0],\r\n      y = a[1],\r\n      z = a[2];\r\n  // var qvec = [qx, qy, qz];\r\n  // var uv = vec3.cross([], qvec, a);\r\n  var uvx = qy * z - qz * y,\r\n      uvy = qz * x - qx * z,\r\n      uvz = qx * y - qy * x;\r\n  // var uuv = vec3.cross([], qvec, uv);\r\n  var uuvx = qy * uvz - qz * uvy,\r\n      uuvy = qz * uvx - qx * uvz,\r\n      uuvz = qx * uvy - qy * uvx;\r\n  // vec3.scale(uv, uv, 2 * w);\r\n  var w2 = qw * 2;\r\n  uvx *= w2;\r\n  uvy *= w2;\r\n  uvz *= w2;\r\n  // vec3.scale(uuv, uuv, 2);\r\n  uuvx *= 2;\r\n  uuvy *= 2;\r\n  uuvz *= 2;\r\n  // return vec3.add(out, a, vec3.add(out, uv, uuv));\r\n  out[0] = x + uvx + uuvx;\r\n  out[1] = y + uvy + uuvy;\r\n  out[2] = z + uvz + uuvz;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotate a 3D vector around the x-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {vec3} a The vec3 point to rotate\r\n * @param {vec3} b The origin of the rotation\r\n * @param {Number} c The angle of rotation\r\n * @returns {vec3} out\r\n */\r\nexport function rotateX(out, a, b, c) {\r\n  var p = [],\r\n      r = [];\r\n  //Translate point to the origin\r\n  p[0] = a[0] - b[0];\r\n  p[1] = a[1] - b[1];\r\n  p[2] = a[2] - b[2];\r\n\r\n  //perform rotation\r\n  r[0] = p[0];\r\n  r[1] = p[1] * Math.cos(c) - p[2] * Math.sin(c);\r\n  r[2] = p[1] * Math.sin(c) + p[2] * Math.cos(c);\r\n\r\n  //translate to correct position\r\n  out[0] = r[0] + b[0];\r\n  out[1] = r[1] + b[1];\r\n  out[2] = r[2] + b[2];\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotate a 3D vector around the y-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {vec3} a The vec3 point to rotate\r\n * @param {vec3} b The origin of the rotation\r\n * @param {Number} c The angle of rotation\r\n * @returns {vec3} out\r\n */\r\nexport function rotateY(out, a, b, c) {\r\n  var p = [],\r\n      r = [];\r\n  //Translate point to the origin\r\n  p[0] = a[0] - b[0];\r\n  p[1] = a[1] - b[1];\r\n  p[2] = a[2] - b[2];\r\n\r\n  //perform rotation\r\n  r[0] = p[2] * Math.sin(c) + p[0] * Math.cos(c);\r\n  r[1] = p[1];\r\n  r[2] = p[2] * Math.cos(c) - p[0] * Math.sin(c);\r\n\r\n  //translate to correct position\r\n  out[0] = r[0] + b[0];\r\n  out[1] = r[1] + b[1];\r\n  out[2] = r[2] + b[2];\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotate a 3D vector around the z-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {vec3} a The vec3 point to rotate\r\n * @param {vec3} b The origin of the rotation\r\n * @param {Number} c The angle of rotation\r\n * @returns {vec3} out\r\n */\r\nexport function rotateZ(out, a, b, c) {\r\n  var p = [],\r\n      r = [];\r\n  //Translate point to the origin\r\n  p[0] = a[0] - b[0];\r\n  p[1] = a[1] - b[1];\r\n  p[2] = a[2] - b[2];\r\n\r\n  //perform rotation\r\n  r[0] = p[0] * Math.cos(c) - p[1] * Math.sin(c);\r\n  r[1] = p[0] * Math.sin(c) + p[1] * Math.cos(c);\r\n  r[2] = p[2];\r\n\r\n  //translate to correct position\r\n  out[0] = r[0] + b[0];\r\n  out[1] = r[1] + b[1];\r\n  out[2] = r[2] + b[2];\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Get the angle between two 3D vectors\r\n * @param {vec3} a The first operand\r\n * @param {vec3} b The second operand\r\n * @returns {Number} The angle in radians\r\n */\r\nexport function angle(a, b) {\r\n  var tempA = fromValues(a[0], a[1], a[2]);\r\n  var tempB = fromValues(b[0], b[1], b[2]);\r\n\r\n  normalize(tempA, tempA);\r\n  normalize(tempB, tempB);\r\n\r\n  var cosine = dot(tempA, tempB);\r\n\r\n  if (cosine > 1.0) {\r\n    return 0;\r\n  } else if (cosine < -1.0) {\r\n    return Math.PI;\r\n  } else {\r\n    return Math.acos(cosine);\r\n  }\r\n}\r\n\r\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {vec3} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\r\nexport function str(a) {\r\n  return 'vec3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ')';\r\n}\r\n\r\n/**\r\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {vec3} a The first vector.\r\n * @param {vec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\nexport function exactEquals(a, b) {\r\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\r\n}\r\n\r\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {vec3} a The first vector.\r\n * @param {vec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2];\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2];\r\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));\r\n}\r\n\r\n/**\r\n * Alias for {@link vec3.subtract}\r\n * @function\r\n */\r\nexport var sub = subtract;\r\n\r\n/**\r\n * Alias for {@link vec3.multiply}\r\n * @function\r\n */\r\nexport var mul = multiply;\r\n\r\n/**\r\n * Alias for {@link vec3.divide}\r\n * @function\r\n */\r\nexport var div = divide;\r\n\r\n/**\r\n * Alias for {@link vec3.distance}\r\n * @function\r\n */\r\nexport var dist = distance;\r\n\r\n/**\r\n * Alias for {@link vec3.squaredDistance}\r\n * @function\r\n */\r\nexport var sqrDist = squaredDistance;\r\n\r\n/**\r\n * Alias for {@link vec3.length}\r\n * @function\r\n */\r\nexport var len = length;\r\n\r\n/**\r\n * Alias for {@link vec3.squaredLength}\r\n * @function\r\n */\r\nexport var sqrLen = squaredLength;\r\n\r\n/**\r\n * Perform some operation over an array of vec3s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\r\nexport var forEach = function () {\r\n  var vec = create();\r\n\r\n  return function (a, stride, offset, count, fn, arg) {\r\n    var i = void 0,\r\n        l = void 0;\r\n    if (!stride) {\r\n      stride = 3;\r\n    }\r\n\r\n    if (!offset) {\r\n      offset = 0;\r\n    }\r\n\r\n    if (count) {\r\n      l = Math.min(count * stride + offset, a.length);\r\n    } else {\r\n      l = a.length;\r\n    }\r\n\r\n    for (i = offset; i < l; i += stride) {\r\n      vec[0] = a[i];vec[1] = a[i + 1];vec[2] = a[i + 2];\r\n      fn(vec, vec, arg);\r\n      a[i] = vec[0];a[i + 1] = vec[1];a[i + 2] = vec[2];\r\n    }\r\n\r\n    return a;\r\n  };\r\n}();","import * as glMatrix from \"./common.js\";\r\n\r\n/**\r\n * 4 Dimensional Vector\r\n * @module vec4\r\n */\r\n\r\n/**\r\n * Creates a new, empty vec4\r\n *\r\n * @returns {vec4} a new 4D vector\r\n */\r\nexport function create() {\r\n  var out = new glMatrix.ARRAY_TYPE(4);\r\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\r\n    out[0] = 0;\r\n    out[1] = 0;\r\n    out[2] = 0;\r\n    out[3] = 0;\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new vec4 initialized with values from an existing vector\r\n *\r\n * @param {vec4} a vector to clone\r\n * @returns {vec4} a new 4D vector\r\n */\r\nexport function clone(a) {\r\n  var out = new glMatrix.ARRAY_TYPE(4);\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new vec4 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {vec4} a new 4D vector\r\n */\r\nexport function fromValues(x, y, z, w) {\r\n  var out = new glMatrix.ARRAY_TYPE(4);\r\n  out[0] = x;\r\n  out[1] = y;\r\n  out[2] = z;\r\n  out[3] = w;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copy the values from one vec4 to another\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the source vector\r\n * @returns {vec4} out\r\n */\r\nexport function copy(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the components of a vec4 to the given values\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {vec4} out\r\n */\r\nexport function set(out, x, y, z, w) {\r\n  out[0] = x;\r\n  out[1] = y;\r\n  out[2] = z;\r\n  out[3] = w;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\r\nexport function add(out, a, b) {\r\n  out[0] = a[0] + b[0];\r\n  out[1] = a[1] + b[1];\r\n  out[2] = a[2] + b[2];\r\n  out[3] = a[3] + b[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\r\nexport function subtract(out, a, b) {\r\n  out[0] = a[0] - b[0];\r\n  out[1] = a[1] - b[1];\r\n  out[2] = a[2] - b[2];\r\n  out[3] = a[3] - b[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Multiplies two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  out[0] = a[0] * b[0];\r\n  out[1] = a[1] * b[1];\r\n  out[2] = a[2] * b[2];\r\n  out[3] = a[3] * b[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Divides two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\r\nexport function divide(out, a, b) {\r\n  out[0] = a[0] / b[0];\r\n  out[1] = a[1] / b[1];\r\n  out[2] = a[2] / b[2];\r\n  out[3] = a[3] / b[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.ceil the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to ceil\r\n * @returns {vec4} out\r\n */\r\nexport function ceil(out, a) {\r\n  out[0] = Math.ceil(a[0]);\r\n  out[1] = Math.ceil(a[1]);\r\n  out[2] = Math.ceil(a[2]);\r\n  out[3] = Math.ceil(a[3]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.floor the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to floor\r\n * @returns {vec4} out\r\n */\r\nexport function floor(out, a) {\r\n  out[0] = Math.floor(a[0]);\r\n  out[1] = Math.floor(a[1]);\r\n  out[2] = Math.floor(a[2]);\r\n  out[3] = Math.floor(a[3]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the minimum of two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\r\nexport function min(out, a, b) {\r\n  out[0] = Math.min(a[0], b[0]);\r\n  out[1] = Math.min(a[1], b[1]);\r\n  out[2] = Math.min(a[2], b[2]);\r\n  out[3] = Math.min(a[3], b[3]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the maximum of two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\r\nexport function max(out, a, b) {\r\n  out[0] = Math.max(a[0], b[0]);\r\n  out[1] = Math.max(a[1], b[1]);\r\n  out[2] = Math.max(a[2], b[2]);\r\n  out[3] = Math.max(a[3], b[3]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.round the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to round\r\n * @returns {vec4} out\r\n */\r\nexport function round(out, a) {\r\n  out[0] = Math.round(a[0]);\r\n  out[1] = Math.round(a[1]);\r\n  out[2] = Math.round(a[2]);\r\n  out[3] = Math.round(a[3]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Scales a vec4 by a scalar number\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec4} out\r\n */\r\nexport function scale(out, a, b) {\r\n  out[0] = a[0] * b;\r\n  out[1] = a[1] * b;\r\n  out[2] = a[2] * b;\r\n  out[3] = a[3] * b;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two vec4's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec4} out\r\n */\r\nexport function scaleAndAdd(out, a, b, scale) {\r\n  out[0] = a[0] + b[0] * scale;\r\n  out[1] = a[1] + b[1] * scale;\r\n  out[2] = a[2] + b[2] * scale;\r\n  out[3] = a[3] + b[3] * scale;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the euclidian distance between two vec4's\r\n *\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\r\nexport function distance(a, b) {\r\n  var x = b[0] - a[0];\r\n  var y = b[1] - a[1];\r\n  var z = b[2] - a[2];\r\n  var w = b[3] - a[3];\r\n  return Math.sqrt(x * x + y * y + z * z + w * w);\r\n}\r\n\r\n/**\r\n * Calculates the squared euclidian distance between two vec4's\r\n *\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\r\nexport function squaredDistance(a, b) {\r\n  var x = b[0] - a[0];\r\n  var y = b[1] - a[1];\r\n  var z = b[2] - a[2];\r\n  var w = b[3] - a[3];\r\n  return x * x + y * y + z * z + w * w;\r\n}\r\n\r\n/**\r\n * Calculates the length of a vec4\r\n *\r\n * @param {vec4} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\r\nexport function length(a) {\r\n  var x = a[0];\r\n  var y = a[1];\r\n  var z = a[2];\r\n  var w = a[3];\r\n  return Math.sqrt(x * x + y * y + z * z + w * w);\r\n}\r\n\r\n/**\r\n * Calculates the squared length of a vec4\r\n *\r\n * @param {vec4} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\r\nexport function squaredLength(a) {\r\n  var x = a[0];\r\n  var y = a[1];\r\n  var z = a[2];\r\n  var w = a[3];\r\n  return x * x + y * y + z * z + w * w;\r\n}\r\n\r\n/**\r\n * Negates the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to negate\r\n * @returns {vec4} out\r\n */\r\nexport function negate(out, a) {\r\n  out[0] = -a[0];\r\n  out[1] = -a[1];\r\n  out[2] = -a[2];\r\n  out[3] = -a[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the inverse of the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to invert\r\n * @returns {vec4} out\r\n */\r\nexport function inverse(out, a) {\r\n  out[0] = 1.0 / a[0];\r\n  out[1] = 1.0 / a[1];\r\n  out[2] = 1.0 / a[2];\r\n  out[3] = 1.0 / a[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Normalize a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to normalize\r\n * @returns {vec4} out\r\n */\r\nexport function normalize(out, a) {\r\n  var x = a[0];\r\n  var y = a[1];\r\n  var z = a[2];\r\n  var w = a[3];\r\n  var len = x * x + y * y + z * z + w * w;\r\n  if (len > 0) {\r\n    len = 1 / Math.sqrt(len);\r\n    out[0] = x * len;\r\n    out[1] = y * len;\r\n    out[2] = z * len;\r\n    out[3] = w * len;\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the dot product of two vec4's\r\n *\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\r\nexport function dot(a, b) {\r\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\r\n}\r\n\r\n/**\r\n * Performs a linear interpolation between two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec4} out\r\n */\r\nexport function lerp(out, a, b, t) {\r\n  var ax = a[0];\r\n  var ay = a[1];\r\n  var az = a[2];\r\n  var aw = a[3];\r\n  out[0] = ax + t * (b[0] - ax);\r\n  out[1] = ay + t * (b[1] - ay);\r\n  out[2] = az + t * (b[2] - az);\r\n  out[3] = aw + t * (b[3] - aw);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec4} out\r\n */\r\nexport function random(out, scale) {\r\n  scale = scale || 1.0;\r\n\r\n  // Marsaglia, George. Choosing a Point from the Surface of a\r\n  // Sphere. Ann. Math. Statist. 43 (1972), no. 2, 645--646.\r\n  // http://projecteuclid.org/euclid.aoms/1177692644;\r\n  var v1, v2, v3, v4;\r\n  var s1, s2;\r\n  do {\r\n    v1 = glMatrix.RANDOM() * 2 - 1;\r\n    v2 = glMatrix.RANDOM() * 2 - 1;\r\n    s1 = v1 * v1 + v2 * v2;\r\n  } while (s1 >= 1);\r\n  do {\r\n    v3 = glMatrix.RANDOM() * 2 - 1;\r\n    v4 = glMatrix.RANDOM() * 2 - 1;\r\n    s2 = v3 * v3 + v4 * v4;\r\n  } while (s2 >= 1);\r\n\r\n  var d = Math.sqrt((1 - s1) / s2);\r\n  out[0] = scale * v1;\r\n  out[1] = scale * v2;\r\n  out[2] = scale * v3 * d;\r\n  out[3] = scale * v4 * d;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec4 with a mat4.\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the vector to transform\r\n * @param {mat4} m matrix to transform with\r\n * @returns {vec4} out\r\n */\r\nexport function transformMat4(out, a, m) {\r\n  var x = a[0],\r\n      y = a[1],\r\n      z = a[2],\r\n      w = a[3];\r\n  out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\r\n  out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\r\n  out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\r\n  out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec4 with a quat\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the vector to transform\r\n * @param {quat} q quaternion to transform with\r\n * @returns {vec4} out\r\n */\r\nexport function transformQuat(out, a, q) {\r\n  var x = a[0],\r\n      y = a[1],\r\n      z = a[2];\r\n  var qx = q[0],\r\n      qy = q[1],\r\n      qz = q[2],\r\n      qw = q[3];\r\n\r\n  // calculate quat * vec\r\n  var ix = qw * x + qy * z - qz * y;\r\n  var iy = qw * y + qz * x - qx * z;\r\n  var iz = qw * z + qx * y - qy * x;\r\n  var iw = -qx * x - qy * y - qz * z;\r\n\r\n  // calculate result * inverse quat\r\n  out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\r\n  out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\r\n  out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\r\n  out[3] = a[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {vec4} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\r\nexport function str(a) {\r\n  return 'vec4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\r\n}\r\n\r\n/**\r\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {vec4} a The first vector.\r\n * @param {vec4} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\nexport function exactEquals(a, b) {\r\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\r\n}\r\n\r\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {vec4} a The first vector.\r\n * @param {vec4} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3];\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2],\r\n      b3 = b[3];\r\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\r\n}\r\n\r\n/**\r\n * Alias for {@link vec4.subtract}\r\n * @function\r\n */\r\nexport var sub = subtract;\r\n\r\n/**\r\n * Alias for {@link vec4.multiply}\r\n * @function\r\n */\r\nexport var mul = multiply;\r\n\r\n/**\r\n * Alias for {@link vec4.divide}\r\n * @function\r\n */\r\nexport var div = divide;\r\n\r\n/**\r\n * Alias for {@link vec4.distance}\r\n * @function\r\n */\r\nexport var dist = distance;\r\n\r\n/**\r\n * Alias for {@link vec4.squaredDistance}\r\n * @function\r\n */\r\nexport var sqrDist = squaredDistance;\r\n\r\n/**\r\n * Alias for {@link vec4.length}\r\n * @function\r\n */\r\nexport var len = length;\r\n\r\n/**\r\n * Alias for {@link vec4.squaredLength}\r\n * @function\r\n */\r\nexport var sqrLen = squaredLength;\r\n\r\n/**\r\n * Perform some operation over an array of vec4s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\r\nexport var forEach = function () {\r\n  var vec = create();\r\n\r\n  return function (a, stride, offset, count, fn, arg) {\r\n    var i = void 0,\r\n        l = void 0;\r\n    if (!stride) {\r\n      stride = 4;\r\n    }\r\n\r\n    if (!offset) {\r\n      offset = 0;\r\n    }\r\n\r\n    if (count) {\r\n      l = Math.min(count * stride + offset, a.length);\r\n    } else {\r\n      l = a.length;\r\n    }\r\n\r\n    for (i = offset; i < l; i += stride) {\r\n      vec[0] = a[i];vec[1] = a[i + 1];vec[2] = a[i + 2];vec[3] = a[i + 3];\r\n      fn(vec, vec, arg);\r\n      a[i] = vec[0];a[i + 1] = vec[1];a[i + 2] = vec[2];a[i + 3] = vec[3];\r\n    }\r\n\r\n    return a;\r\n  };\r\n}();","import * as glMatrix from \"./common.js\";\r\nimport * as mat3 from \"./mat3.js\";\r\nimport * as vec3 from \"./vec3.js\";\r\nimport * as vec4 from \"./vec4.js\";\r\n\r\n/**\r\n * Quaternion\r\n * @module quat\r\n */\r\n\r\n/**\r\n * Creates a new identity quat\r\n *\r\n * @returns {quat} a new quaternion\r\n */\r\nexport function create() {\r\n  var out = new glMatrix.ARRAY_TYPE(4);\r\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\r\n    out[0] = 0;\r\n    out[1] = 0;\r\n    out[2] = 0;\r\n  }\r\n  out[3] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set a quat to the identity quaternion\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @returns {quat} out\r\n */\r\nexport function identity(out) {\r\n  out[0] = 0;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Sets a quat from the given angle and rotation axis,\r\n * then returns it.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {vec3} axis the axis around which to rotate\r\n * @param {Number} rad the angle in radians\r\n * @returns {quat} out\r\n **/\r\nexport function setAxisAngle(out, axis, rad) {\r\n  rad = rad * 0.5;\r\n  var s = Math.sin(rad);\r\n  out[0] = s * axis[0];\r\n  out[1] = s * axis[1];\r\n  out[2] = s * axis[2];\r\n  out[3] = Math.cos(rad);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Gets the rotation axis and angle for a given\r\n *  quaternion. If a quaternion is created with\r\n *  setAxisAngle, this method will return the same\r\n *  values as providied in the original parameter list\r\n *  OR functionally equivalent values.\r\n * Example: The quaternion formed by axis [0, 0, 1] and\r\n *  angle -90 is the same as the quaternion formed by\r\n *  [0, 0, 1] and 270. This method favors the latter.\r\n * @param  {vec3} out_axis  Vector receiving the axis of rotation\r\n * @param  {quat} q     Quaternion to be decomposed\r\n * @return {Number}     Angle, in radians, of the rotation\r\n */\r\nexport function getAxisAngle(out_axis, q) {\r\n  var rad = Math.acos(q[3]) * 2.0;\r\n  var s = Math.sin(rad / 2.0);\r\n  if (s > glMatrix.EPSILON) {\r\n    out_axis[0] = q[0] / s;\r\n    out_axis[1] = q[1] / s;\r\n    out_axis[2] = q[2] / s;\r\n  } else {\r\n    // If s is zero, return any axis (no rotation - axis does not matter)\r\n    out_axis[0] = 1;\r\n    out_axis[1] = 0;\r\n    out_axis[2] = 0;\r\n  }\r\n  return rad;\r\n}\r\n\r\n/**\r\n * Multiplies two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @returns {quat} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  var ax = a[0],\r\n      ay = a[1],\r\n      az = a[2],\r\n      aw = a[3];\r\n  var bx = b[0],\r\n      by = b[1],\r\n      bz = b[2],\r\n      bw = b[3];\r\n\r\n  out[0] = ax * bw + aw * bx + ay * bz - az * by;\r\n  out[1] = ay * bw + aw * by + az * bx - ax * bz;\r\n  out[2] = az * bw + aw * bz + ax * by - ay * bx;\r\n  out[3] = aw * bw - ax * bx - ay * by - az * bz;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a quaternion by the given angle about the X axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {quat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\r\nexport function rotateX(out, a, rad) {\r\n  rad *= 0.5;\r\n\r\n  var ax = a[0],\r\n      ay = a[1],\r\n      az = a[2],\r\n      aw = a[3];\r\n  var bx = Math.sin(rad),\r\n      bw = Math.cos(rad);\r\n\r\n  out[0] = ax * bw + aw * bx;\r\n  out[1] = ay * bw + az * bx;\r\n  out[2] = az * bw - ay * bx;\r\n  out[3] = aw * bw - ax * bx;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a quaternion by the given angle about the Y axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {quat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\r\nexport function rotateY(out, a, rad) {\r\n  rad *= 0.5;\r\n\r\n  var ax = a[0],\r\n      ay = a[1],\r\n      az = a[2],\r\n      aw = a[3];\r\n  var by = Math.sin(rad),\r\n      bw = Math.cos(rad);\r\n\r\n  out[0] = ax * bw - az * by;\r\n  out[1] = ay * bw + aw * by;\r\n  out[2] = az * bw + ax * by;\r\n  out[3] = aw * bw - ay * by;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a quaternion by the given angle about the Z axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {quat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\r\nexport function rotateZ(out, a, rad) {\r\n  rad *= 0.5;\r\n\r\n  var ax = a[0],\r\n      ay = a[1],\r\n      az = a[2],\r\n      aw = a[3];\r\n  var bz = Math.sin(rad),\r\n      bw = Math.cos(rad);\r\n\r\n  out[0] = ax * bw + ay * bz;\r\n  out[1] = ay * bw - ax * bz;\r\n  out[2] = az * bw + aw * bz;\r\n  out[3] = aw * bw - az * bz;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the W component of a quat from the X, Y, and Z components.\r\n * Assumes that quaternion is 1 unit in length.\r\n * Any existing W component will be ignored.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quat to calculate W component of\r\n * @returns {quat} out\r\n */\r\nexport function calculateW(out, a) {\r\n  var x = a[0],\r\n      y = a[1],\r\n      z = a[2];\r\n\r\n  out[0] = x;\r\n  out[1] = y;\r\n  out[2] = z;\r\n  out[3] = Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z));\r\n  return out;\r\n}\r\n\r\n/**\r\n * Performs a spherical linear interpolation between two quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n */\r\nexport function slerp(out, a, b, t) {\r\n  // benchmarks:\r\n  //    http://jsperf.com/quaternion-slerp-implementations\r\n  var ax = a[0],\r\n      ay = a[1],\r\n      az = a[2],\r\n      aw = a[3];\r\n  var bx = b[0],\r\n      by = b[1],\r\n      bz = b[2],\r\n      bw = b[3];\r\n\r\n  var omega = void 0,\r\n      cosom = void 0,\r\n      sinom = void 0,\r\n      scale0 = void 0,\r\n      scale1 = void 0;\r\n\r\n  // calc cosine\r\n  cosom = ax * bx + ay * by + az * bz + aw * bw;\r\n  // adjust signs (if necessary)\r\n  if (cosom < 0.0) {\r\n    cosom = -cosom;\r\n    bx = -bx;\r\n    by = -by;\r\n    bz = -bz;\r\n    bw = -bw;\r\n  }\r\n  // calculate coefficients\r\n  if (1.0 - cosom > glMatrix.EPSILON) {\r\n    // standard case (slerp)\r\n    omega = Math.acos(cosom);\r\n    sinom = Math.sin(omega);\r\n    scale0 = Math.sin((1.0 - t) * omega) / sinom;\r\n    scale1 = Math.sin(t * omega) / sinom;\r\n  } else {\r\n    // \"from\" and \"to\" quaternions are very close\r\n    //  ... so we can do a linear interpolation\r\n    scale0 = 1.0 - t;\r\n    scale1 = t;\r\n  }\r\n  // calculate final values\r\n  out[0] = scale0 * ax + scale1 * bx;\r\n  out[1] = scale0 * ay + scale1 * by;\r\n  out[2] = scale0 * az + scale1 * bz;\r\n  out[3] = scale0 * aw + scale1 * bw;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a random quaternion\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @returns {quat} out\r\n */\r\nexport function random(out) {\r\n  // Implementation of http://planning.cs.uiuc.edu/node198.html\r\n  // TODO: Calling random 3 times is probably not the fastest solution\r\n  var u1 = glMatrix.RANDOM();\r\n  var u2 = glMatrix.RANDOM();\r\n  var u3 = glMatrix.RANDOM();\r\n\r\n  var sqrt1MinusU1 = Math.sqrt(1 - u1);\r\n  var sqrtU1 = Math.sqrt(u1);\r\n\r\n  out[0] = sqrt1MinusU1 * Math.sin(2.0 * Math.PI * u2);\r\n  out[1] = sqrt1MinusU1 * Math.cos(2.0 * Math.PI * u2);\r\n  out[2] = sqrtU1 * Math.sin(2.0 * Math.PI * u3);\r\n  out[3] = sqrtU1 * Math.cos(2.0 * Math.PI * u3);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the inverse of a quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quat to calculate inverse of\r\n * @returns {quat} out\r\n */\r\nexport function invert(out, a) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3];\r\n  var dot = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;\r\n  var invDot = dot ? 1.0 / dot : 0;\r\n\r\n  // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\r\n\r\n  out[0] = -a0 * invDot;\r\n  out[1] = -a1 * invDot;\r\n  out[2] = -a2 * invDot;\r\n  out[3] = a3 * invDot;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the conjugate of a quat\r\n * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quat to calculate conjugate of\r\n * @returns {quat} out\r\n */\r\nexport function conjugate(out, a) {\r\n  out[0] = -a[0];\r\n  out[1] = -a[1];\r\n  out[2] = -a[2];\r\n  out[3] = a[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a quaternion from the given 3x3 rotation matrix.\r\n *\r\n * NOTE: The resultant quaternion is not normalized, so you should be sure\r\n * to renormalize the quaternion yourself where necessary.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {mat3} m rotation matrix\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport function fromMat3(out, m) {\r\n  // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\r\n  // article \"Quaternion Calculus and Fast Animation\".\r\n  var fTrace = m[0] + m[4] + m[8];\r\n  var fRoot = void 0;\r\n\r\n  if (fTrace > 0.0) {\r\n    // |w| > 1/2, may as well choose w > 1/2\r\n    fRoot = Math.sqrt(fTrace + 1.0); // 2w\r\n    out[3] = 0.5 * fRoot;\r\n    fRoot = 0.5 / fRoot; // 1/(4w)\r\n    out[0] = (m[5] - m[7]) * fRoot;\r\n    out[1] = (m[6] - m[2]) * fRoot;\r\n    out[2] = (m[1] - m[3]) * fRoot;\r\n  } else {\r\n    // |w| <= 1/2\r\n    var i = 0;\r\n    if (m[4] > m[0]) i = 1;\r\n    if (m[8] > m[i * 3 + i]) i = 2;\r\n    var j = (i + 1) % 3;\r\n    var k = (i + 2) % 3;\r\n\r\n    fRoot = Math.sqrt(m[i * 3 + i] - m[j * 3 + j] - m[k * 3 + k] + 1.0);\r\n    out[i] = 0.5 * fRoot;\r\n    fRoot = 0.5 / fRoot;\r\n    out[3] = (m[j * 3 + k] - m[k * 3 + j]) * fRoot;\r\n    out[j] = (m[j * 3 + i] + m[i * 3 + j]) * fRoot;\r\n    out[k] = (m[k * 3 + i] + m[i * 3 + k]) * fRoot;\r\n  }\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a quaternion from the given euler angle x, y, z.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {x} Angle to rotate around X axis in degrees.\r\n * @param {y} Angle to rotate around Y axis in degrees.\r\n * @param {z} Angle to rotate around Z axis in degrees.\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport function fromEuler(out, x, y, z) {\r\n  var halfToRad = 0.5 * Math.PI / 180.0;\r\n  x *= halfToRad;\r\n  y *= halfToRad;\r\n  z *= halfToRad;\r\n\r\n  var sx = Math.sin(x);\r\n  var cx = Math.cos(x);\r\n  var sy = Math.sin(y);\r\n  var cy = Math.cos(y);\r\n  var sz = Math.sin(z);\r\n  var cz = Math.cos(z);\r\n\r\n  out[0] = sx * cy * cz - cx * sy * sz;\r\n  out[1] = cx * sy * cz + sx * cy * sz;\r\n  out[2] = cx * cy * sz - sx * sy * cz;\r\n  out[3] = cx * cy * cz + sx * sy * sz;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns a string representation of a quatenion\r\n *\r\n * @param {quat} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\r\nexport function str(a) {\r\n  return 'quat(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\r\n}\r\n\r\n/**\r\n * Creates a new quat initialized with values from an existing quaternion\r\n *\r\n * @param {quat} a quaternion to clone\r\n * @returns {quat} a new quaternion\r\n * @function\r\n */\r\nexport var clone = vec4.clone;\r\n\r\n/**\r\n * Creates a new quat initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {quat} a new quaternion\r\n * @function\r\n */\r\nexport var fromValues = vec4.fromValues;\r\n\r\n/**\r\n * Copy the values from one quat to another\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the source quaternion\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport var copy = vec4.copy;\r\n\r\n/**\r\n * Set the components of a quat to the given values\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport var set = vec4.set;\r\n\r\n/**\r\n * Adds two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport var add = vec4.add;\r\n\r\n/**\r\n * Alias for {@link quat.multiply}\r\n * @function\r\n */\r\nexport var mul = multiply;\r\n\r\n/**\r\n * Scales a quat by a scalar number\r\n *\r\n * @param {quat} out the receiving vector\r\n * @param {quat} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport var scale = vec4.scale;\r\n\r\n/**\r\n * Calculates the dot product of two quat's\r\n *\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @returns {Number} dot product of a and b\r\n * @function\r\n */\r\nexport var dot = vec4.dot;\r\n\r\n/**\r\n * Performs a linear interpolation between two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport var lerp = vec4.lerp;\r\n\r\n/**\r\n * Calculates the length of a quat\r\n *\r\n * @param {quat} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\r\nexport var length = vec4.length;\r\n\r\n/**\r\n * Alias for {@link quat.length}\r\n * @function\r\n */\r\nexport var len = length;\r\n\r\n/**\r\n * Calculates the squared length of a quat\r\n *\r\n * @param {quat} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n * @function\r\n */\r\nexport var squaredLength = vec4.squaredLength;\r\n\r\n/**\r\n * Alias for {@link quat.squaredLength}\r\n * @function\r\n */\r\nexport var sqrLen = squaredLength;\r\n\r\n/**\r\n * Normalize a quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quaternion to normalize\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport var normalize = vec4.normalize;\r\n\r\n/**\r\n * Returns whether or not the quaternions have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {quat} a The first quaternion.\r\n * @param {quat} b The second quaternion.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\nexport var exactEquals = vec4.exactEquals;\r\n\r\n/**\r\n * Returns whether or not the quaternions have approximately the same elements in the same position.\r\n *\r\n * @param {quat} a The first vector.\r\n * @param {quat} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\nexport var equals = vec4.equals;\r\n\r\n/**\r\n * Sets a quaternion to represent the shortest rotation from one\r\n * vector to another.\r\n *\r\n * Both vectors are assumed to be unit length.\r\n *\r\n * @param {quat} out the receiving quaternion.\r\n * @param {vec3} a the initial vector\r\n * @param {vec3} b the destination vector\r\n * @returns {quat} out\r\n */\r\nexport var rotationTo = function () {\r\n  var tmpvec3 = vec3.create();\r\n  var xUnitVec3 = vec3.fromValues(1, 0, 0);\r\n  var yUnitVec3 = vec3.fromValues(0, 1, 0);\r\n\r\n  return function (out, a, b) {\r\n    var dot = vec3.dot(a, b);\r\n    if (dot < -0.999999) {\r\n      vec3.cross(tmpvec3, xUnitVec3, a);\r\n      if (vec3.len(tmpvec3) < 0.000001) vec3.cross(tmpvec3, yUnitVec3, a);\r\n      vec3.normalize(tmpvec3, tmpvec3);\r\n      setAxisAngle(out, tmpvec3, Math.PI);\r\n      return out;\r\n    } else if (dot > 0.999999) {\r\n      out[0] = 0;\r\n      out[1] = 0;\r\n      out[2] = 0;\r\n      out[3] = 1;\r\n      return out;\r\n    } else {\r\n      vec3.cross(tmpvec3, a, b);\r\n      out[0] = tmpvec3[0];\r\n      out[1] = tmpvec3[1];\r\n      out[2] = tmpvec3[2];\r\n      out[3] = 1 + dot;\r\n      return normalize(out, out);\r\n    }\r\n  };\r\n}();\r\n\r\n/**\r\n * Performs a spherical linear interpolation with two control points\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @param {quat} c the third operand\r\n * @param {quat} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n */\r\nexport var sqlerp = function () {\r\n  var temp1 = create();\r\n  var temp2 = create();\r\n\r\n  return function (out, a, b, c, d, t) {\r\n    slerp(temp1, a, d, t);\r\n    slerp(temp2, b, c, t);\r\n    slerp(out, temp1, temp2, 2 * t * (1 - t));\r\n\r\n    return out;\r\n  };\r\n}();\r\n\r\n/**\r\n * Sets the specified quaternion with values corresponding to the given\r\n * axes. Each axis is a vec3 and is expected to be unit length and\r\n * perpendicular to all other specified axes.\r\n *\r\n * @param {vec3} view  the vector representing the viewing direction\r\n * @param {vec3} right the vector representing the local \"right\" direction\r\n * @param {vec3} up    the vector representing the local \"up\" direction\r\n * @returns {quat} out\r\n */\r\nexport var setAxes = function () {\r\n  var matr = mat3.create();\r\n\r\n  return function (out, view, right, up) {\r\n    matr[0] = right[0];\r\n    matr[3] = right[1];\r\n    matr[6] = right[2];\r\n\r\n    matr[1] = up[0];\r\n    matr[4] = up[1];\r\n    matr[7] = up[2];\r\n\r\n    matr[2] = -view[0];\r\n    matr[5] = -view[1];\r\n    matr[8] = -view[2];\r\n\r\n    return normalize(out, fromMat3(out, matr));\r\n  };\r\n}();","import * as glMatrix from \"./common.js\";\r\nimport * as quat from \"./quat.js\";\r\nimport * as mat4 from \"./mat4.js\";\r\n\r\n/**\r\n * Dual Quaternion<br>\r\n * Format: [real, dual]<br>\r\n * Quaternion format: XYZW<br>\r\n * Make sure to have normalized dual quaternions, otherwise the functions may not work as intended.<br>\r\n * @module quat2\r\n */\r\n\r\n/**\r\n * Creates a new identity dual quat\r\n *\r\n * @returns {quat2} a new dual quaternion [real -> rotation, dual -> translation]\r\n */\r\nexport function create() {\r\n  var dq = new glMatrix.ARRAY_TYPE(8);\r\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\r\n    dq[0] = 0;\r\n    dq[1] = 0;\r\n    dq[2] = 0;\r\n    dq[4] = 0;\r\n    dq[5] = 0;\r\n    dq[6] = 0;\r\n    dq[7] = 0;\r\n  }\r\n  dq[3] = 1;\r\n  return dq;\r\n}\r\n\r\n/**\r\n * Creates a new quat initialized with values from an existing quaternion\r\n *\r\n * @param {quat2} a dual quaternion to clone\r\n * @returns {quat2} new dual quaternion\r\n * @function\r\n */\r\nexport function clone(a) {\r\n  var dq = new glMatrix.ARRAY_TYPE(8);\r\n  dq[0] = a[0];\r\n  dq[1] = a[1];\r\n  dq[2] = a[2];\r\n  dq[3] = a[3];\r\n  dq[4] = a[4];\r\n  dq[5] = a[5];\r\n  dq[6] = a[6];\r\n  dq[7] = a[7];\r\n  return dq;\r\n}\r\n\r\n/**\r\n * Creates a new dual quat initialized with the given values\r\n *\r\n * @param {Number} x1 X component\r\n * @param {Number} y1 Y component\r\n * @param {Number} z1 Z component\r\n * @param {Number} w1 W component\r\n * @param {Number} x2 X component\r\n * @param {Number} y2 Y component\r\n * @param {Number} z2 Z component\r\n * @param {Number} w2 W component\r\n * @returns {quat2} new dual quaternion\r\n * @function\r\n */\r\nexport function fromValues(x1, y1, z1, w1, x2, y2, z2, w2) {\r\n  var dq = new glMatrix.ARRAY_TYPE(8);\r\n  dq[0] = x1;\r\n  dq[1] = y1;\r\n  dq[2] = z1;\r\n  dq[3] = w1;\r\n  dq[4] = x2;\r\n  dq[5] = y2;\r\n  dq[6] = z2;\r\n  dq[7] = w2;\r\n  return dq;\r\n}\r\n\r\n/**\r\n * Creates a new dual quat from the given values (quat and translation)\r\n *\r\n * @param {Number} x1 X component\r\n * @param {Number} y1 Y component\r\n * @param {Number} z1 Z component\r\n * @param {Number} w1 W component\r\n * @param {Number} x2 X component (translation)\r\n * @param {Number} y2 Y component (translation)\r\n * @param {Number} z2 Z component (translation)\r\n * @returns {quat2} new dual quaternion\r\n * @function\r\n */\r\nexport function fromRotationTranslationValues(x1, y1, z1, w1, x2, y2, z2) {\r\n  var dq = new glMatrix.ARRAY_TYPE(8);\r\n  dq[0] = x1;\r\n  dq[1] = y1;\r\n  dq[2] = z1;\r\n  dq[3] = w1;\r\n  var ax = x2 * 0.5,\r\n      ay = y2 * 0.5,\r\n      az = z2 * 0.5;\r\n  dq[4] = ax * w1 + ay * z1 - az * y1;\r\n  dq[5] = ay * w1 + az * x1 - ax * z1;\r\n  dq[6] = az * w1 + ax * y1 - ay * x1;\r\n  dq[7] = -ax * x1 - ay * y1 - az * z1;\r\n  return dq;\r\n}\r\n\r\n/**\r\n * Creates a dual quat from a quaternion and a translation\r\n *\r\n * @param {quat2} dual quaternion receiving operation result\r\n * @param {quat} q quaternion\r\n * @param {vec3} t tranlation vector\r\n * @returns {quat2} dual quaternion receiving operation result\r\n * @function\r\n */\r\nexport function fromRotationTranslation(out, q, t) {\r\n  var ax = t[0] * 0.5,\r\n      ay = t[1] * 0.5,\r\n      az = t[2] * 0.5,\r\n      bx = q[0],\r\n      by = q[1],\r\n      bz = q[2],\r\n      bw = q[3];\r\n  out[0] = bx;\r\n  out[1] = by;\r\n  out[2] = bz;\r\n  out[3] = bw;\r\n  out[4] = ax * bw + ay * bz - az * by;\r\n  out[5] = ay * bw + az * bx - ax * bz;\r\n  out[6] = az * bw + ax * by - ay * bx;\r\n  out[7] = -ax * bx - ay * by - az * bz;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a dual quat from a translation\r\n *\r\n * @param {quat2} dual quaternion receiving operation result\r\n * @param {vec3} t translation vector\r\n * @returns {quat2} dual quaternion receiving operation result\r\n * @function\r\n */\r\nexport function fromTranslation(out, t) {\r\n  out[0] = 0;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 1;\r\n  out[4] = t[0] * 0.5;\r\n  out[5] = t[1] * 0.5;\r\n  out[6] = t[2] * 0.5;\r\n  out[7] = 0;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a dual quat from a quaternion\r\n *\r\n * @param {quat2} dual quaternion receiving operation result\r\n * @param {quat} q the quaternion\r\n * @returns {quat2} dual quaternion receiving operation result\r\n * @function\r\n */\r\nexport function fromRotation(out, q) {\r\n  out[0] = q[0];\r\n  out[1] = q[1];\r\n  out[2] = q[2];\r\n  out[3] = q[3];\r\n  out[4] = 0;\r\n  out[5] = 0;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new dual quat from a matrix (4x4)\r\n *\r\n * @param {quat2} out the dual quaternion\r\n * @param {mat4} a the matrix\r\n * @returns {quat2} dual quat receiving operation result\r\n * @function\r\n */\r\nexport function fromMat4(out, a) {\r\n  //TODO Optimize this\r\n  var outer = quat.create();\r\n  mat4.getRotation(outer, a);\r\n  var t = new glMatrix.ARRAY_TYPE(3);\r\n  mat4.getTranslation(t, a);\r\n  fromRotationTranslation(out, outer, t);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copy the values from one dual quat to another\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the source dual quaternion\r\n * @returns {quat2} out\r\n * @function\r\n */\r\nexport function copy(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  out[4] = a[4];\r\n  out[5] = a[5];\r\n  out[6] = a[6];\r\n  out[7] = a[7];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set a dual quat to the identity dual quaternion\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @returns {quat2} out\r\n */\r\nexport function identity(out) {\r\n  out[0] = 0;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 1;\r\n  out[4] = 0;\r\n  out[5] = 0;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the components of a dual quat to the given values\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @param {Number} x1 X component\r\n * @param {Number} y1 Y component\r\n * @param {Number} z1 Z component\r\n * @param {Number} w1 W component\r\n * @param {Number} x2 X component\r\n * @param {Number} y2 Y component\r\n * @param {Number} z2 Z component\r\n * @param {Number} w2 W component\r\n * @returns {quat2} out\r\n * @function\r\n */\r\nexport function set(out, x1, y1, z1, w1, x2, y2, z2, w2) {\r\n  out[0] = x1;\r\n  out[1] = y1;\r\n  out[2] = z1;\r\n  out[3] = w1;\r\n\r\n  out[4] = x2;\r\n  out[5] = y2;\r\n  out[6] = z2;\r\n  out[7] = w2;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Gets the real part of a dual quat\r\n * @param  {quat} out real part\r\n * @param  {quat2} a Dual Quaternion\r\n * @return {quat} real part\r\n */\r\nexport var getReal = quat.copy;\r\n\r\n/**\r\n * Gets the dual part of a dual quat\r\n * @param  {quat} out dual part\r\n * @param  {quat2} a Dual Quaternion\r\n * @return {quat} dual part\r\n */\r\nexport function getDual(out, a) {\r\n  out[0] = a[4];\r\n  out[1] = a[5];\r\n  out[2] = a[6];\r\n  out[3] = a[7];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the real component of a dual quat to the given quaternion\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @param {quat} q a quaternion representing the real part\r\n * @returns {quat2} out\r\n * @function\r\n */\r\nexport var setReal = quat.copy;\r\n\r\n/**\r\n * Set the dual component of a dual quat to the given quaternion\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @param {quat} q a quaternion representing the dual part\r\n * @returns {quat2} out\r\n * @function\r\n */\r\nexport function setDual(out, q) {\r\n  out[4] = q[0];\r\n  out[5] = q[1];\r\n  out[6] = q[2];\r\n  out[7] = q[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Gets the translation of a normalized dual quat\r\n * @param  {vec3} out translation\r\n * @param  {quat2} a Dual Quaternion to be decomposed\r\n * @return {vec3} translation\r\n */\r\nexport function getTranslation(out, a) {\r\n  var ax = a[4],\r\n      ay = a[5],\r\n      az = a[6],\r\n      aw = a[7],\r\n      bx = -a[0],\r\n      by = -a[1],\r\n      bz = -a[2],\r\n      bw = a[3];\r\n  out[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\r\n  out[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\r\n  out[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Translates a dual quat by the given vector\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to translate\r\n * @param {vec3} v vector to translate by\r\n * @returns {quat2} out\r\n */\r\nexport function translate(out, a, v) {\r\n  var ax1 = a[0],\r\n      ay1 = a[1],\r\n      az1 = a[2],\r\n      aw1 = a[3],\r\n      bx1 = v[0] * 0.5,\r\n      by1 = v[1] * 0.5,\r\n      bz1 = v[2] * 0.5,\r\n      ax2 = a[4],\r\n      ay2 = a[5],\r\n      az2 = a[6],\r\n      aw2 = a[7];\r\n  out[0] = ax1;\r\n  out[1] = ay1;\r\n  out[2] = az1;\r\n  out[3] = aw1;\r\n  out[4] = aw1 * bx1 + ay1 * bz1 - az1 * by1 + ax2;\r\n  out[5] = aw1 * by1 + az1 * bx1 - ax1 * bz1 + ay2;\r\n  out[6] = aw1 * bz1 + ax1 * by1 - ay1 * bx1 + az2;\r\n  out[7] = -ax1 * bx1 - ay1 * by1 - az1 * bz1 + aw2;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a dual quat around the X axis\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @param {number} rad how far should the rotation be\r\n * @returns {quat2} out\r\n */\r\nexport function rotateX(out, a, rad) {\r\n  var bx = -a[0],\r\n      by = -a[1],\r\n      bz = -a[2],\r\n      bw = a[3],\r\n      ax = a[4],\r\n      ay = a[5],\r\n      az = a[6],\r\n      aw = a[7],\r\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\r\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\r\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\r\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\r\n  quat.rotateX(out, a, rad);\r\n  bx = out[0];\r\n  by = out[1];\r\n  bz = out[2];\r\n  bw = out[3];\r\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\r\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\r\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\r\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a dual quat around the Y axis\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @param {number} rad how far should the rotation be\r\n * @returns {quat2} out\r\n */\r\nexport function rotateY(out, a, rad) {\r\n  var bx = -a[0],\r\n      by = -a[1],\r\n      bz = -a[2],\r\n      bw = a[3],\r\n      ax = a[4],\r\n      ay = a[5],\r\n      az = a[6],\r\n      aw = a[7],\r\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\r\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\r\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\r\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\r\n  quat.rotateY(out, a, rad);\r\n  bx = out[0];\r\n  by = out[1];\r\n  bz = out[2];\r\n  bw = out[3];\r\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\r\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\r\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\r\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a dual quat around the Z axis\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @param {number} rad how far should the rotation be\r\n * @returns {quat2} out\r\n */\r\nexport function rotateZ(out, a, rad) {\r\n  var bx = -a[0],\r\n      by = -a[1],\r\n      bz = -a[2],\r\n      bw = a[3],\r\n      ax = a[4],\r\n      ay = a[5],\r\n      az = a[6],\r\n      aw = a[7],\r\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\r\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\r\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\r\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\r\n  quat.rotateZ(out, a, rad);\r\n  bx = out[0];\r\n  by = out[1];\r\n  bz = out[2];\r\n  bw = out[3];\r\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\r\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\r\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\r\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a dual quat by a given quaternion (a * q)\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @param {quat} q quaternion to rotate by\r\n * @returns {quat2} out\r\n */\r\nexport function rotateByQuatAppend(out, a, q) {\r\n  var qx = q[0],\r\n      qy = q[1],\r\n      qz = q[2],\r\n      qw = q[3],\r\n      ax = a[0],\r\n      ay = a[1],\r\n      az = a[2],\r\n      aw = a[3];\r\n\r\n  out[0] = ax * qw + aw * qx + ay * qz - az * qy;\r\n  out[1] = ay * qw + aw * qy + az * qx - ax * qz;\r\n  out[2] = az * qw + aw * qz + ax * qy - ay * qx;\r\n  out[3] = aw * qw - ax * qx - ay * qy - az * qz;\r\n  ax = a[4];\r\n  ay = a[5];\r\n  az = a[6];\r\n  aw = a[7];\r\n  out[4] = ax * qw + aw * qx + ay * qz - az * qy;\r\n  out[5] = ay * qw + aw * qy + az * qx - ax * qz;\r\n  out[6] = az * qw + aw * qz + ax * qy - ay * qx;\r\n  out[7] = aw * qw - ax * qx - ay * qy - az * qz;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a dual quat by a given quaternion (q * a)\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat} q quaternion to rotate by\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @returns {quat2} out\r\n */\r\nexport function rotateByQuatPrepend(out, q, a) {\r\n  var qx = q[0],\r\n      qy = q[1],\r\n      qz = q[2],\r\n      qw = q[3],\r\n      bx = a[0],\r\n      by = a[1],\r\n      bz = a[2],\r\n      bw = a[3];\r\n\r\n  out[0] = qx * bw + qw * bx + qy * bz - qz * by;\r\n  out[1] = qy * bw + qw * by + qz * bx - qx * bz;\r\n  out[2] = qz * bw + qw * bz + qx * by - qy * bx;\r\n  out[3] = qw * bw - qx * bx - qy * by - qz * bz;\r\n  bx = a[4];\r\n  by = a[5];\r\n  bz = a[6];\r\n  bw = a[7];\r\n  out[4] = qx * bw + qw * bx + qy * bz - qz * by;\r\n  out[5] = qy * bw + qw * by + qz * bx - qx * bz;\r\n  out[6] = qz * bw + qw * bz + qx * by - qy * bx;\r\n  out[7] = qw * bw - qx * bx - qy * by - qz * bz;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a dual quat around a given axis. Does the normalisation automatically\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @param {vec3} axis the axis to rotate around\r\n * @param {Number} rad how far the rotation should be\r\n * @returns {quat2} out\r\n */\r\nexport function rotateAroundAxis(out, a, axis, rad) {\r\n  //Special case for rad = 0\r\n  if (Math.abs(rad) < glMatrix.EPSILON) {\r\n    return copy(out, a);\r\n  }\r\n  var axisLength = Math.sqrt(axis[0] * axis[0] + axis[1] * axis[1] + axis[2] * axis[2]);\r\n\r\n  rad = rad * 0.5;\r\n  var s = Math.sin(rad);\r\n  var bx = s * axis[0] / axisLength;\r\n  var by = s * axis[1] / axisLength;\r\n  var bz = s * axis[2] / axisLength;\r\n  var bw = Math.cos(rad);\r\n\r\n  var ax1 = a[0],\r\n      ay1 = a[1],\r\n      az1 = a[2],\r\n      aw1 = a[3];\r\n  out[0] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\r\n  out[1] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\r\n  out[2] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\r\n  out[3] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\r\n\r\n  var ax = a[4],\r\n      ay = a[5],\r\n      az = a[6],\r\n      aw = a[7];\r\n  out[4] = ax * bw + aw * bx + ay * bz - az * by;\r\n  out[5] = ay * bw + aw * by + az * bx - ax * bz;\r\n  out[6] = az * bw + aw * bz + ax * by - ay * bx;\r\n  out[7] = aw * bw - ax * bx - ay * by - az * bz;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two dual quat's\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the first operand\r\n * @param {quat2} b the second operand\r\n * @returns {quat2} out\r\n * @function\r\n */\r\nexport function add(out, a, b) {\r\n  out[0] = a[0] + b[0];\r\n  out[1] = a[1] + b[1];\r\n  out[2] = a[2] + b[2];\r\n  out[3] = a[3] + b[3];\r\n  out[4] = a[4] + b[4];\r\n  out[5] = a[5] + b[5];\r\n  out[6] = a[6] + b[6];\r\n  out[7] = a[7] + b[7];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Multiplies two dual quat's\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the first operand\r\n * @param {quat2} b the second operand\r\n * @returns {quat2} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  var ax0 = a[0],\r\n      ay0 = a[1],\r\n      az0 = a[2],\r\n      aw0 = a[3],\r\n      bx1 = b[4],\r\n      by1 = b[5],\r\n      bz1 = b[6],\r\n      bw1 = b[7],\r\n      ax1 = a[4],\r\n      ay1 = a[5],\r\n      az1 = a[6],\r\n      aw1 = a[7],\r\n      bx0 = b[0],\r\n      by0 = b[1],\r\n      bz0 = b[2],\r\n      bw0 = b[3];\r\n  out[0] = ax0 * bw0 + aw0 * bx0 + ay0 * bz0 - az0 * by0;\r\n  out[1] = ay0 * bw0 + aw0 * by0 + az0 * bx0 - ax0 * bz0;\r\n  out[2] = az0 * bw0 + aw0 * bz0 + ax0 * by0 - ay0 * bx0;\r\n  out[3] = aw0 * bw0 - ax0 * bx0 - ay0 * by0 - az0 * bz0;\r\n  out[4] = ax0 * bw1 + aw0 * bx1 + ay0 * bz1 - az0 * by1 + ax1 * bw0 + aw1 * bx0 + ay1 * bz0 - az1 * by0;\r\n  out[5] = ay0 * bw1 + aw0 * by1 + az0 * bx1 - ax0 * bz1 + ay1 * bw0 + aw1 * by0 + az1 * bx0 - ax1 * bz0;\r\n  out[6] = az0 * bw1 + aw0 * bz1 + ax0 * by1 - ay0 * bx1 + az1 * bw0 + aw1 * bz0 + ax1 * by0 - ay1 * bx0;\r\n  out[7] = aw0 * bw1 - ax0 * bx1 - ay0 * by1 - az0 * bz1 + aw1 * bw0 - ax1 * bx0 - ay1 * by0 - az1 * bz0;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Alias for {@link quat2.multiply}\r\n * @function\r\n */\r\nexport var mul = multiply;\r\n\r\n/**\r\n * Scales a dual quat by a scalar number\r\n *\r\n * @param {quat2} out the receiving dual quat\r\n * @param {quat2} a the dual quat to scale\r\n * @param {Number} b amount to scale the dual quat by\r\n * @returns {quat2} out\r\n * @function\r\n */\r\nexport function scale(out, a, b) {\r\n  out[0] = a[0] * b;\r\n  out[1] = a[1] * b;\r\n  out[2] = a[2] * b;\r\n  out[3] = a[3] * b;\r\n  out[4] = a[4] * b;\r\n  out[5] = a[5] * b;\r\n  out[6] = a[6] * b;\r\n  out[7] = a[7] * b;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the dot product of two dual quat's (The dot product of the real parts)\r\n *\r\n * @param {quat2} a the first operand\r\n * @param {quat2} b the second operand\r\n * @returns {Number} dot product of a and b\r\n * @function\r\n */\r\nexport var dot = quat.dot;\r\n\r\n/**\r\n * Performs a linear interpolation between two dual quats's\r\n * NOTE: The resulting dual quaternions won't always be normalized (The error is most noticeable when t = 0.5)\r\n *\r\n * @param {quat2} out the receiving dual quat\r\n * @param {quat2} a the first operand\r\n * @param {quat2} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat2} out\r\n */\r\nexport function lerp(out, a, b, t) {\r\n  var mt = 1 - t;\r\n  if (dot(a, b) < 0) t = -t;\r\n\r\n  out[0] = a[0] * mt + b[0] * t;\r\n  out[1] = a[1] * mt + b[1] * t;\r\n  out[2] = a[2] * mt + b[2] * t;\r\n  out[3] = a[3] * mt + b[3] * t;\r\n  out[4] = a[4] * mt + b[4] * t;\r\n  out[5] = a[5] * mt + b[5] * t;\r\n  out[6] = a[6] * mt + b[6] * t;\r\n  out[7] = a[7] * mt + b[7] * t;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the inverse of a dual quat. If they are normalized, conjugate is cheaper\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a dual quat to calculate inverse of\r\n * @returns {quat2} out\r\n */\r\nexport function invert(out, a) {\r\n  var sqlen = squaredLength(a);\r\n  out[0] = -a[0] / sqlen;\r\n  out[1] = -a[1] / sqlen;\r\n  out[2] = -a[2] / sqlen;\r\n  out[3] = a[3] / sqlen;\r\n  out[4] = -a[4] / sqlen;\r\n  out[5] = -a[5] / sqlen;\r\n  out[6] = -a[6] / sqlen;\r\n  out[7] = a[7] / sqlen;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the conjugate of a dual quat\r\n * If the dual quaternion is normalized, this function is faster than quat2.inverse and produces the same result.\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @param {quat2} a quat to calculate conjugate of\r\n * @returns {quat2} out\r\n */\r\nexport function conjugate(out, a) {\r\n  out[0] = -a[0];\r\n  out[1] = -a[1];\r\n  out[2] = -a[2];\r\n  out[3] = a[3];\r\n  out[4] = -a[4];\r\n  out[5] = -a[5];\r\n  out[6] = -a[6];\r\n  out[7] = a[7];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the length of a dual quat\r\n *\r\n * @param {quat2} a dual quat to calculate length of\r\n * @returns {Number} length of a\r\n * @function\r\n */\r\nexport var length = quat.length;\r\n\r\n/**\r\n * Alias for {@link quat2.length}\r\n * @function\r\n */\r\nexport var len = length;\r\n\r\n/**\r\n * Calculates the squared length of a dual quat\r\n *\r\n * @param {quat2} a dual quat to calculate squared length of\r\n * @returns {Number} squared length of a\r\n * @function\r\n */\r\nexport var squaredLength = quat.squaredLength;\r\n\r\n/**\r\n * Alias for {@link quat2.squaredLength}\r\n * @function\r\n */\r\nexport var sqrLen = squaredLength;\r\n\r\n/**\r\n * Normalize a dual quat\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a dual quaternion to normalize\r\n * @returns {quat2} out\r\n * @function\r\n */\r\nexport function normalize(out, a) {\r\n  var magnitude = squaredLength(a);\r\n  if (magnitude > 0) {\r\n    magnitude = Math.sqrt(magnitude);\r\n\r\n    var a0 = a[0] / magnitude;\r\n    var a1 = a[1] / magnitude;\r\n    var a2 = a[2] / magnitude;\r\n    var a3 = a[3] / magnitude;\r\n\r\n    var b0 = a[4];\r\n    var b1 = a[5];\r\n    var b2 = a[6];\r\n    var b3 = a[7];\r\n\r\n    var a_dot_b = a0 * b0 + a1 * b1 + a2 * b2 + a3 * b3;\r\n\r\n    out[0] = a0;\r\n    out[1] = a1;\r\n    out[2] = a2;\r\n    out[3] = a3;\r\n\r\n    out[4] = (b0 - a0 * a_dot_b) / magnitude;\r\n    out[5] = (b1 - a1 * a_dot_b) / magnitude;\r\n    out[6] = (b2 - a2 * a_dot_b) / magnitude;\r\n    out[7] = (b3 - a3 * a_dot_b) / magnitude;\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns a string representation of a dual quatenion\r\n *\r\n * @param {quat2} a dual quaternion to represent as a string\r\n * @returns {String} string representation of the dual quat\r\n */\r\nexport function str(a) {\r\n  return 'quat2(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ')';\r\n}\r\n\r\n/**\r\n * Returns whether or not the dual quaternions have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {quat2} a the first dual quaternion.\r\n * @param {quat2} b the second dual quaternion.\r\n * @returns {Boolean} true if the dual quaternions are equal, false otherwise.\r\n */\r\nexport function exactEquals(a, b) {\r\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7];\r\n}\r\n\r\n/**\r\n * Returns whether or not the dual quaternions have approximately the same elements in the same position.\r\n *\r\n * @param {quat2} a the first dual quat.\r\n * @param {quat2} b the second dual quat.\r\n * @returns {Boolean} true if the dual quats are equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3],\r\n      a4 = a[4],\r\n      a5 = a[5],\r\n      a6 = a[6],\r\n      a7 = a[7];\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2],\r\n      b3 = b[3],\r\n      b4 = b[4],\r\n      b5 = b[5],\r\n      b6 = b[6],\r\n      b7 = b[7];\r\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7));\r\n}","import * as glMatrix from \"./common.js\";\r\n\r\n/**\r\n * 2 Dimensional Vector\r\n * @module vec2\r\n */\r\n\r\n/**\r\n * Creates a new, empty vec2\r\n *\r\n * @returns {vec2} a new 2D vector\r\n */\r\nexport function create() {\r\n  var out = new glMatrix.ARRAY_TYPE(2);\r\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\r\n    out[0] = 0;\r\n    out[1] = 0;\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new vec2 initialized with values from an existing vector\r\n *\r\n * @param {vec2} a vector to clone\r\n * @returns {vec2} a new 2D vector\r\n */\r\nexport function clone(a) {\r\n  var out = new glMatrix.ARRAY_TYPE(2);\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new vec2 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @returns {vec2} a new 2D vector\r\n */\r\nexport function fromValues(x, y) {\r\n  var out = new glMatrix.ARRAY_TYPE(2);\r\n  out[0] = x;\r\n  out[1] = y;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copy the values from one vec2 to another\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the source vector\r\n * @returns {vec2} out\r\n */\r\nexport function copy(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the components of a vec2 to the given values\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @returns {vec2} out\r\n */\r\nexport function set(out, x, y) {\r\n  out[0] = x;\r\n  out[1] = y;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\r\nexport function add(out, a, b) {\r\n  out[0] = a[0] + b[0];\r\n  out[1] = a[1] + b[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\r\nexport function subtract(out, a, b) {\r\n  out[0] = a[0] - b[0];\r\n  out[1] = a[1] - b[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Multiplies two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  out[0] = a[0] * b[0];\r\n  out[1] = a[1] * b[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Divides two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\r\nexport function divide(out, a, b) {\r\n  out[0] = a[0] / b[0];\r\n  out[1] = a[1] / b[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.ceil the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to ceil\r\n * @returns {vec2} out\r\n */\r\nexport function ceil(out, a) {\r\n  out[0] = Math.ceil(a[0]);\r\n  out[1] = Math.ceil(a[1]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.floor the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to floor\r\n * @returns {vec2} out\r\n */\r\nexport function floor(out, a) {\r\n  out[0] = Math.floor(a[0]);\r\n  out[1] = Math.floor(a[1]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the minimum of two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\r\nexport function min(out, a, b) {\r\n  out[0] = Math.min(a[0], b[0]);\r\n  out[1] = Math.min(a[1], b[1]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the maximum of two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\r\nexport function max(out, a, b) {\r\n  out[0] = Math.max(a[0], b[0]);\r\n  out[1] = Math.max(a[1], b[1]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.round the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to round\r\n * @returns {vec2} out\r\n */\r\nexport function round(out, a) {\r\n  out[0] = Math.round(a[0]);\r\n  out[1] = Math.round(a[1]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Scales a vec2 by a scalar number\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec2} out\r\n */\r\nexport function scale(out, a, b) {\r\n  out[0] = a[0] * b;\r\n  out[1] = a[1] * b;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two vec2's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec2} out\r\n */\r\nexport function scaleAndAdd(out, a, b, scale) {\r\n  out[0] = a[0] + b[0] * scale;\r\n  out[1] = a[1] + b[1] * scale;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the euclidian distance between two vec2's\r\n *\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\r\nexport function distance(a, b) {\r\n  var x = b[0] - a[0],\r\n      y = b[1] - a[1];\r\n  return Math.sqrt(x * x + y * y);\r\n}\r\n\r\n/**\r\n * Calculates the squared euclidian distance between two vec2's\r\n *\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\r\nexport function squaredDistance(a, b) {\r\n  var x = b[0] - a[0],\r\n      y = b[1] - a[1];\r\n  return x * x + y * y;\r\n}\r\n\r\n/**\r\n * Calculates the length of a vec2\r\n *\r\n * @param {vec2} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\r\nexport function length(a) {\r\n  var x = a[0],\r\n      y = a[1];\r\n  return Math.sqrt(x * x + y * y);\r\n}\r\n\r\n/**\r\n * Calculates the squared length of a vec2\r\n *\r\n * @param {vec2} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\r\nexport function squaredLength(a) {\r\n  var x = a[0],\r\n      y = a[1];\r\n  return x * x + y * y;\r\n}\r\n\r\n/**\r\n * Negates the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to negate\r\n * @returns {vec2} out\r\n */\r\nexport function negate(out, a) {\r\n  out[0] = -a[0];\r\n  out[1] = -a[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the inverse of the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to invert\r\n * @returns {vec2} out\r\n */\r\nexport function inverse(out, a) {\r\n  out[0] = 1.0 / a[0];\r\n  out[1] = 1.0 / a[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Normalize a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to normalize\r\n * @returns {vec2} out\r\n */\r\nexport function normalize(out, a) {\r\n  var x = a[0],\r\n      y = a[1];\r\n  var len = x * x + y * y;\r\n  if (len > 0) {\r\n    //TODO: evaluate use of glm_invsqrt here?\r\n    len = 1 / Math.sqrt(len);\r\n    out[0] = a[0] * len;\r\n    out[1] = a[1] * len;\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the dot product of two vec2's\r\n *\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\r\nexport function dot(a, b) {\r\n  return a[0] * b[0] + a[1] * b[1];\r\n}\r\n\r\n/**\r\n * Computes the cross product of two vec2's\r\n * Note that the cross product must by definition produce a 3D vector\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function cross(out, a, b) {\r\n  var z = a[0] * b[1] - a[1] * b[0];\r\n  out[0] = out[1] = 0;\r\n  out[2] = z;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Performs a linear interpolation between two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec2} out\r\n */\r\nexport function lerp(out, a, b, t) {\r\n  var ax = a[0],\r\n      ay = a[1];\r\n  out[0] = ax + t * (b[0] - ax);\r\n  out[1] = ay + t * (b[1] - ay);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec2} out\r\n */\r\nexport function random(out, scale) {\r\n  scale = scale || 1.0;\r\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\r\n  out[0] = Math.cos(r) * scale;\r\n  out[1] = Math.sin(r) * scale;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec2 with a mat2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to transform\r\n * @param {mat2} m matrix to transform with\r\n * @returns {vec2} out\r\n */\r\nexport function transformMat2(out, a, m) {\r\n  var x = a[0],\r\n      y = a[1];\r\n  out[0] = m[0] * x + m[2] * y;\r\n  out[1] = m[1] * x + m[3] * y;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec2 with a mat2d\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to transform\r\n * @param {mat2d} m matrix to transform with\r\n * @returns {vec2} out\r\n */\r\nexport function transformMat2d(out, a, m) {\r\n  var x = a[0],\r\n      y = a[1];\r\n  out[0] = m[0] * x + m[2] * y + m[4];\r\n  out[1] = m[1] * x + m[3] * y + m[5];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec2 with a mat3\r\n * 3rd vector component is implicitly '1'\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to transform\r\n * @param {mat3} m matrix to transform with\r\n * @returns {vec2} out\r\n */\r\nexport function transformMat3(out, a, m) {\r\n  var x = a[0],\r\n      y = a[1];\r\n  out[0] = m[0] * x + m[3] * y + m[6];\r\n  out[1] = m[1] * x + m[4] * y + m[7];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec2 with a mat4\r\n * 3rd vector component is implicitly '0'\r\n * 4th vector component is implicitly '1'\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to transform\r\n * @param {mat4} m matrix to transform with\r\n * @returns {vec2} out\r\n */\r\nexport function transformMat4(out, a, m) {\r\n  var x = a[0];\r\n  var y = a[1];\r\n  out[0] = m[0] * x + m[4] * y + m[12];\r\n  out[1] = m[1] * x + m[5] * y + m[13];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotate a 2D vector\r\n * @param {vec2} out The receiving vec2\r\n * @param {vec2} a The vec2 point to rotate\r\n * @param {vec2} b The origin of the rotation\r\n * @param {Number} c The angle of rotation\r\n * @returns {vec2} out\r\n */\r\nexport function rotate(out, a, b, c) {\r\n  //Translate point to the origin\r\n  var p0 = a[0] - b[0],\r\n      p1 = a[1] - b[1],\r\n      sinC = Math.sin(c),\r\n      cosC = Math.cos(c);\r\n\r\n  //perform rotation and translate to correct position\r\n  out[0] = p0 * cosC - p1 * sinC + b[0];\r\n  out[1] = p0 * sinC + p1 * cosC + b[1];\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Get the angle between two 2D vectors\r\n * @param {vec2} a The first operand\r\n * @param {vec2} b The second operand\r\n * @returns {Number} The angle in radians\r\n */\r\nexport function angle(a, b) {\r\n  var x1 = a[0],\r\n      y1 = a[1],\r\n      x2 = b[0],\r\n      y2 = b[1];\r\n\r\n  var len1 = x1 * x1 + y1 * y1;\r\n  if (len1 > 0) {\r\n    //TODO: evaluate use of glm_invsqrt here?\r\n    len1 = 1 / Math.sqrt(len1);\r\n  }\r\n\r\n  var len2 = x2 * x2 + y2 * y2;\r\n  if (len2 > 0) {\r\n    //TODO: evaluate use of glm_invsqrt here?\r\n    len2 = 1 / Math.sqrt(len2);\r\n  }\r\n\r\n  var cosine = (x1 * x2 + y1 * y2) * len1 * len2;\r\n\r\n  if (cosine > 1.0) {\r\n    return 0;\r\n  } else if (cosine < -1.0) {\r\n    return Math.PI;\r\n  } else {\r\n    return Math.acos(cosine);\r\n  }\r\n}\r\n\r\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {vec2} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\r\nexport function str(a) {\r\n  return 'vec2(' + a[0] + ', ' + a[1] + ')';\r\n}\r\n\r\n/**\r\n * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\r\n *\r\n * @param {vec2} a The first vector.\r\n * @param {vec2} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\nexport function exactEquals(a, b) {\r\n  return a[0] === b[0] && a[1] === b[1];\r\n}\r\n\r\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {vec2} a The first vector.\r\n * @param {vec2} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1];\r\n  var b0 = b[0],\r\n      b1 = b[1];\r\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1));\r\n}\r\n\r\n/**\r\n * Alias for {@link vec2.length}\r\n * @function\r\n */\r\nexport var len = length;\r\n\r\n/**\r\n * Alias for {@link vec2.subtract}\r\n * @function\r\n */\r\nexport var sub = subtract;\r\n\r\n/**\r\n * Alias for {@link vec2.multiply}\r\n * @function\r\n */\r\nexport var mul = multiply;\r\n\r\n/**\r\n * Alias for {@link vec2.divide}\r\n * @function\r\n */\r\nexport var div = divide;\r\n\r\n/**\r\n * Alias for {@link vec2.distance}\r\n * @function\r\n */\r\nexport var dist = distance;\r\n\r\n/**\r\n * Alias for {@link vec2.squaredDistance}\r\n * @function\r\n */\r\nexport var sqrDist = squaredDistance;\r\n\r\n/**\r\n * Alias for {@link vec2.squaredLength}\r\n * @function\r\n */\r\nexport var sqrLen = squaredLength;\r\n\r\n/**\r\n * Perform some operation over an array of vec2s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\r\nexport var forEach = function () {\r\n  var vec = create();\r\n\r\n  return function (a, stride, offset, count, fn, arg) {\r\n    var i = void 0,\r\n        l = void 0;\r\n    if (!stride) {\r\n      stride = 2;\r\n    }\r\n\r\n    if (!offset) {\r\n      offset = 0;\r\n    }\r\n\r\n    if (count) {\r\n      l = Math.min(count * stride + offset, a.length);\r\n    } else {\r\n      l = a.length;\r\n    }\r\n\r\n    for (i = offset; i < l; i += stride) {\r\n      vec[0] = a[i];vec[1] = a[i + 1];\r\n      fn(vec, vec, arg);\r\n      a[i] = vec[0];a[i + 1] = vec[1];\r\n    }\r\n\r\n    return a;\r\n  };\r\n}();","import * as glMatrix from \"./gl-matrix/common.js\";\r\nimport * as mat2 from \"./gl-matrix/mat2.js\";\r\nimport * as mat2d from \"./gl-matrix/mat2d.js\";\r\nimport * as mat3 from \"./gl-matrix/mat3.js\";\r\nimport * as mat4 from \"./gl-matrix/mat4.js\";\r\nimport * as quat from \"./gl-matrix/quat.js\";\r\nimport * as quat2 from \"./gl-matrix/quat2.js\";\r\nimport * as vec2 from \"./gl-matrix/vec2.js\";\r\nimport * as vec3 from \"./gl-matrix/vec3.js\";\r\nimport * as vec4 from \"./gl-matrix/vec4.js\";\r\n\r\nexport { glMatrix, mat2, mat2d, mat3, mat4, quat, quat2, vec2, vec3, vec4 };","exports.positions=[[5.929688,4.125,0],[5.387188,4.125,2.7475],[5.2971,4.494141,2.70917],[5.832031,4.494141,0],[5.401602,4.617188,2.753633],[5.945313,4.617188,0],[5.614209,4.494141,2.844092],[6.175781,4.494141,0],[5.848437,4.125,2.94375],[6.429688,4.125,0],[3.899688,4.125,4.97],[3.830352,4.494141,4.900664],[3.910782,4.617188,4.981094],[4.074414,4.494141,5.144727],[4.254687,4.125,5.325],[1.677188,4.125,6.4575],[1.638858,4.494141,6.367412],[1.68332,4.617188,6.471914],[1.77378,4.494141,6.684522],[1.873438,4.125,6.91875],[-1.070312,4.125,7],[-1.070312,4.494141,6.902344],[-1.070312,4.617188,7.015625],[-1.070312,4.494141,7.246094],[-1.070312,4.125,7.5],[-1.070312,4.125,7],[-4.007656,4.125,6.4575],[-3.859572,4.494141,6.367412],[-1.070312,4.494141,6.902344],[-3.847676,4.617188,6.471914],[-1.070312,4.617188,7.015625],[-3.917371,4.494141,6.684522],[-1.070312,4.494141,7.246094],[-4.014062,4.125,6.91875],[-1.070312,4.125,7.5],[-6.209063,4.125,4.97],[-6.042168,4.494141,4.900664],[-6.0725,4.617188,4.981094],[-6.217675,4.494141,5.144727],[-6.395312,4.125,5.325],[-7.591093,4.125,2.7475],[-7.464421,4.494141,2.70917],[-7.550137,4.617188,2.753633],[-7.755822,4.494141,2.844092],[-7.989062,4.125,2.94375],[-8.070313,4.125,0],[-7.972656,4.494141,0],[-8.085938,4.617188,0],[-8.316406,4.494141,0],[-8.570313,4.125,0],[-8.070313,4.125,0],[-7.527812,4.125,-2.7475],[-7.437724,4.494141,-2.70917],[-7.972656,4.494141,0],[-7.542227,4.617188,-2.753633],[-8.085938,4.617188,0],[-7.754834,4.494141,-2.844092],[-8.316406,4.494141,0],[-7.989062,4.125,-2.94375],[-8.570313,4.125,0],[-6.040312,4.125,-4.97],[-5.970977,4.494141,-4.900664],[-6.051406,4.617188,-4.981094],[-6.215039,4.494141,-5.144727],[-6.395312,4.125,-5.325],[-3.817812,4.125,-6.4575],[-3.779482,4.494141,-6.367412],[-3.823945,4.617188,-6.471914],[-3.914404,4.494141,-6.684522],[-4.014062,4.125,-6.91875],[-1.070312,4.125,-7],[-1.070312,4.494141,-6.902344],[-1.070312,4.617188,-7.015625],[-1.070312,4.494141,-7.246094],[-1.070312,4.125,-7.5],[-1.070312,4.125,-7],[1.677188,4.125,-6.4575],[1.638858,4.494141,-6.367412],[-1.070312,4.494141,-6.902344],[1.68332,4.617188,-6.471914],[-1.070312,4.617188,-7.015625],[1.77378,4.494141,-6.684522],[-1.070312,4.494141,-7.246094],[1.873438,4.125,-6.91875],[-1.070312,4.125,-7.5],[3.899688,4.125,-4.97],[3.830352,4.494141,-4.900664],[3.910782,4.617188,-4.981094],[4.074414,4.494141,-5.144727],[4.254687,4.125,-5.325],[5.387188,4.125,-2.7475],[5.2971,4.494141,-2.70917],[5.401602,4.617188,-2.753633],[5.614209,4.494141,-2.844092],[5.848437,4.125,-2.94375],[5.929688,4.125,0],[5.832031,4.494141,0],[5.945313,4.617188,0],[6.175781,4.494141,0],[6.429688,4.125,0],[6.429688,4.125,0],[5.848437,4.125,2.94375],[6.695264,2.162109,3.304053],[7.347656,2.162109,0],[7.433985,0.234375,3.61836],[8.148438,0.234375,0],[7.956494,-1.623047,3.840674],[8.714844,-1.623047,0],[8.154688,-3.375,3.925],[8.929688,-3.375,0],[4.254687,4.125,5.325],[4.906446,2.162109,5.976758],[5.475,0.234375,6.545312],[5.877149,-1.623047,6.947461],[6.029688,-3.375,7.1],[1.873438,4.125,6.91875],[2.23374,2.162109,7.765576],[2.548047,0.234375,8.504297],[2.770362,-1.623047,9.026807],[2.854688,-3.375,9.225],[-1.070312,4.125,7.5],[-1.070312,2.162109,8.417969],[-1.070312,0.234375,9.21875],[-1.070312,-1.623047,9.785156],[-1.070312,-3.375,10],[-1.070312,4.125,7.5],[-4.014062,4.125,6.91875],[-4.374365,2.162109,7.765576],[-1.070312,2.162109,8.417969],[-4.688672,0.234375,8.504297],[-1.070312,0.234375,9.21875],[-4.910986,-1.623047,9.026807],[-1.070312,-1.623047,9.785156],[-4.995313,-3.375,9.225],[-1.070312,-3.375,10],[-6.395312,4.125,5.325],[-7.047071,2.162109,5.976758],[-7.615624,0.234375,6.545312],[-8.017773,-1.623047,6.947461],[-8.170312,-3.375,7.1],[-7.989062,4.125,2.94375],[-8.835889,2.162109,3.304053],[-9.57461,0.234375,3.61836],[-10.097119,-1.623047,3.840674],[-10.295313,-3.375,3.925],[-8.570313,4.125,0],[-9.488281,2.162109,0],[-10.289063,0.234375,0],[-10.855469,-1.623047,0],[-11.070313,-3.375,0],[-8.570313,4.125,0],[-7.989062,4.125,-2.94375],[-8.835889,2.162109,-3.304053],[-9.488281,2.162109,0],[-9.57461,0.234375,-3.61836],[-10.289063,0.234375,0],[-10.097119,-1.623047,-3.840674],[-10.855469,-1.623047,0],[-10.295313,-3.375,-3.925],[-11.070313,-3.375,0],[-6.395312,4.125,-5.325],[-7.047071,2.162109,-5.976758],[-7.615624,0.234375,-6.545312],[-8.017773,-1.623047,-6.947461],[-8.170312,-3.375,-7.1],[-4.014062,4.125,-6.91875],[-4.374365,2.162109,-7.765576],[-4.688672,0.234375,-8.504297],[-4.910986,-1.623047,-9.026807],[-4.995313,-3.375,-9.225],[-1.070312,4.125,-7.5],[-1.070312,2.162109,-8.417969],[-1.070312,0.234375,-9.21875],[-1.070312,-1.623047,-9.785156],[-1.070312,-3.375,-10],[-1.070312,4.125,-7.5],[1.873438,4.125,-6.91875],[2.23374,2.162109,-7.765576],[-1.070312,2.162109,-8.417969],[2.548047,0.234375,-8.504297],[-1.070312,0.234375,-9.21875],[2.770362,-1.623047,-9.026807],[-1.070312,-1.623047,-9.785156],[2.854688,-3.375,-9.225],[-1.070312,-3.375,-10],[4.254687,4.125,-5.325],[4.906446,2.162109,-5.976758],[5.475,0.234375,-6.545312],[5.877149,-1.623047,-6.947461],[6.029688,-3.375,-7.1],[5.848437,4.125,-2.94375],[6.695264,2.162109,-3.304053],[7.433985,0.234375,-3.61836],[7.956494,-1.623047,-3.840674],[8.154688,-3.375,-3.925],[6.429688,4.125,0],[7.347656,2.162109,0],[8.148438,0.234375,0],[8.714844,-1.623047,0],[8.929688,-3.375,0],[8.929688,-3.375,0],[8.154688,-3.375,3.925],[7.794336,-4.857422,3.77168],[8.539063,-4.857422,0],[7.001562,-5.953125,3.434375],[7.679688,-5.953125,0],[6.208789,-6.697266,3.09707],[6.820313,-6.697266,0],[5.848437,-7.125,2.94375],[6.429688,-7.125,0],[6.029688,-3.375,7.1],[5.752343,-4.857422,6.822656],[5.142187,-5.953125,6.2125],[4.532031,-6.697266,5.602344],[4.254687,-7.125,5.325],[2.854688,-3.375,9.225],[2.701367,-4.857422,8.864649],[2.364063,-5.953125,8.071875],[2.026758,-6.697266,7.279101],[1.873438,-7.125,6.91875],[-1.070312,-3.375,10],[-1.070312,-4.857422,9.609375],[-1.070312,-5.953125,8.75],[-1.070312,-6.697266,7.890625],[-1.070312,-7.125,7.5],[-1.070312,-3.375,10],[-4.995313,-3.375,9.225],[-4.841992,-4.857422,8.864649],[-1.070312,-4.857422,9.609375],[-4.504687,-5.953125,8.071875],[-1.070312,-5.953125,8.75],[-4.167383,-6.697266,7.279101],[-1.070312,-6.697266,7.890625],[-4.014062,-7.125,6.91875],[-1.070312,-7.125,7.5],[-8.170312,-3.375,7.1],[-7.892968,-4.857422,6.822656],[-7.282812,-5.953125,6.2125],[-6.672656,-6.697266,5.602344],[-6.395312,-7.125,5.325],[-10.295313,-3.375,3.925],[-9.934961,-4.857422,3.77168],[-9.142187,-5.953125,3.434375],[-8.349414,-6.697266,3.09707],[-7.989062,-7.125,2.94375],[-11.070313,-3.375,0],[-10.679688,-4.857422,0],[-9.820313,-5.953125,0],[-8.960938,-6.697266,0],[-8.570313,-7.125,0],[-11.070313,-3.375,0],[-10.295313,-3.375,-3.925],[-9.934961,-4.857422,-3.77168],[-10.679688,-4.857422,0],[-9.142187,-5.953125,-3.434375],[-9.820313,-5.953125,0],[-8.349414,-6.697266,-3.09707],[-8.960938,-6.697266,0],[-7.989062,-7.125,-2.94375],[-8.570313,-7.125,0],[-8.170312,-3.375,-7.1],[-7.892968,-4.857422,-6.822656],[-7.282812,-5.953125,-6.2125],[-6.672656,-6.697266,-5.602344],[-6.395312,-7.125,-5.325],[-4.995313,-3.375,-9.225],[-4.841992,-4.857422,-8.864649],[-4.504687,-5.953125,-8.071875],[-4.167383,-6.697266,-7.279101],[-4.014062,-7.125,-6.91875],[-1.070312,-3.375,-10],[-1.070312,-4.857422,-9.609375],[-1.070312,-5.953125,-8.75],[-1.070312,-6.697266,-7.890625],[-1.070312,-7.125,-7.5],[-1.070312,-3.375,-10],[2.854688,-3.375,-9.225],[2.701367,-4.857422,-8.864649],[-1.070312,-4.857422,-9.609375],[2.364063,-5.953125,-8.071875],[-1.070312,-5.953125,-8.75],[2.026758,-6.697266,-7.279101],[-1.070312,-6.697266,-7.890625],[1.873438,-7.125,-6.91875],[-1.070312,-7.125,-7.5],[6.029688,-3.375,-7.1],[5.752343,-4.857422,-6.822656],[5.142187,-5.953125,-6.2125],[4.532031,-6.697266,-5.602344],[4.254687,-7.125,-5.325],[8.154688,-3.375,-3.925],[7.794336,-4.857422,-3.77168],[7.001562,-5.953125,-3.434375],[6.208789,-6.697266,-3.09707],[5.848437,-7.125,-2.94375],[8.929688,-3.375,0],[8.539063,-4.857422,0],[7.679688,-5.953125,0],[6.820313,-6.697266,0],[6.429688,-7.125,0],[6.429688,-7.125,0],[5.848437,-7.125,2.94375],[5.691685,-7.400391,2.877056],[6.259766,-7.400391,0],[4.853868,-7.640625,2.520586],[5.351563,-7.640625,0],[2.783648,-7.810547,1.639761],[3.107422,-7.810547,0],[-1.070312,-7.875,0],[4.254687,-7.125,5.325],[4.134043,-7.400391,5.204355],[3.489219,-7.640625,4.559531],[1.895879,-7.810547,2.966191],[-1.070312,-7.875,0],[1.873438,-7.125,6.91875],[1.806743,-7.400391,6.761997],[1.450274,-7.640625,5.92418],[0.569448,-7.810547,3.85396],[-1.070312,-7.875,0],[-1.070312,-7.125,7.5],[-1.070312,-7.400391,7.330078],[-1.070312,-7.640625,6.421875],[-1.070312,-7.810547,4.177734],[-1.070312,-7.875,0],[-1.070312,-7.125,7.5],[-4.014062,-7.125,6.91875],[-3.947368,-7.400391,6.761997],[-1.070312,-7.400391,7.330078],[-3.590898,-7.640625,5.92418],[-1.070312,-7.640625,6.421875],[-2.710073,-7.810547,3.85396],[-1.070312,-7.810547,4.177734],[-1.070312,-7.875,0],[-6.395312,-7.125,5.325],[-6.274668,-7.400391,5.204355],[-5.629844,-7.640625,4.559531],[-4.036504,-7.810547,2.966191],[-1.070312,-7.875,0],[-7.989062,-7.125,2.94375],[-7.832309,-7.400391,2.877056],[-6.994492,-7.640625,2.520586],[-4.924272,-7.810547,1.639761],[-1.070312,-7.875,0],[-8.570313,-7.125,0],[-8.400391,-7.400391,0],[-7.492188,-7.640625,0],[-5.248047,-7.810547,0],[-1.070312,-7.875,0],[-8.570313,-7.125,0],[-7.989062,-7.125,-2.94375],[-7.832309,-7.400391,-2.877056],[-8.400391,-7.400391,0],[-6.994492,-7.640625,-2.520586],[-7.492188,-7.640625,0],[-4.924272,-7.810547,-1.639761],[-5.248047,-7.810547,0],[-1.070312,-7.875,0],[-6.395312,-7.125,-5.325],[-6.274668,-7.400391,-5.204355],[-5.629844,-7.640625,-4.559531],[-4.036504,-7.810547,-2.966191],[-1.070312,-7.875,0],[-4.014062,-7.125,-6.91875],[-3.947368,-7.400391,-6.761997],[-3.590898,-7.640625,-5.92418],[-2.710073,-7.810547,-3.85396],[-1.070312,-7.875,0],[-1.070312,-7.125,-7.5],[-1.070312,-7.400391,-7.330078],[-1.070312,-7.640625,-6.421875],[-1.070312,-7.810547,-4.177734],[-1.070312,-7.875,0],[-1.070312,-7.125,-7.5],[1.873438,-7.125,-6.91875],[1.806743,-7.400391,-6.761997],[-1.070312,-7.400391,-7.330078],[1.450274,-7.640625,-5.92418],[-1.070312,-7.640625,-6.421875],[0.569448,-7.810547,-3.85396],[-1.070312,-7.810547,-4.177734],[-1.070312,-7.875,0],[4.254687,-7.125,-5.325],[4.134043,-7.400391,-5.204355],[3.489219,-7.640625,-4.559531],[1.895879,-7.810547,-2.966191],[-1.070312,-7.875,0],[5.848437,-7.125,-2.94375],[5.691685,-7.400391,-2.877056],[4.853868,-7.640625,-2.520586],[2.783648,-7.810547,-1.639761],[-1.070312,-7.875,0],[6.429688,-7.125,0],[6.259766,-7.400391,0],[5.351563,-7.640625,0],[3.107422,-7.810547,0],[-1.070312,-7.875,0],[-9.070313,2.25,0],[-8.992188,2.425781,0.84375],[-11.47583,2.405457,0.84375],[-11.40625,2.232422,0],[-13.298828,2.263184,0.84375],[-13.132813,2.109375,0],[-14.421631,1.877014,0.84375],[-14.203125,1.775391,0],[-14.804688,1.125,0.84375],[-14.570313,1.125,0],[-8.820313,2.8125,1.125],[-11.628906,2.786134,1.125],[-13.664063,2.601563,1.125],[-14.902344,2.100586,1.125],[-15.320313,1.125,1.125],[-8.648438,3.199219,0.84375],[-11.781982,3.166809,0.84375],[-14.029297,2.939941,0.84375],[-15.383057,2.324158,0.84375],[-15.835938,1.125,0.84375],[-8.570313,3.375,0],[-11.851563,3.339844,0],[-14.195313,3.09375,0],[-15.601563,2.425781,0],[-16.070313,1.125,0],[-8.570313,3.375,0],[-8.648438,3.199219,-0.84375],[-11.781982,3.166809,-0.84375],[-11.851563,3.339844,0],[-14.029297,2.939941,-0.84375],[-14.195313,3.09375,0],[-15.383057,2.324158,-0.84375],[-15.601563,2.425781,0],[-15.835938,1.125,-0.84375],[-16.070313,1.125,0],[-8.820313,2.8125,-1.125],[-11.628906,2.786134,-1.125],[-13.664063,2.601563,-1.125],[-14.902344,2.100586,-1.125],[-15.320313,1.125,-1.125],[-8.992188,2.425781,-0.84375],[-11.47583,2.405457,-0.84375],[-13.298828,2.263184,-0.84375],[-14.421631,1.877014,-0.84375],[-14.804688,1.125,-0.84375],[-9.070313,2.25,0],[-11.40625,2.232422,0],[-13.132813,2.109375,0],[-14.203125,1.775391,0],[-14.570313,1.125,0],[-14.570313,1.125,0],[-14.804688,1.125,0.84375],[-14.588013,0.00705,0.84375],[-14.375,0.105469,0],[-13.90918,-1.275146,0.84375],[-13.757813,-1.125,0],[-12.724976,-2.540863,0.84375],[-12.671875,-2.355469,0],[-10.992188,-3.609375,0.84375],[-11.070313,-3.375,0],[-15.320313,1.125,1.125],[-15.056641,-0.209473,1.125],[-14.242188,-1.605469,1.125],[-12.841797,-2.94873,1.125],[-10.820313,-4.125,1.125],[-15.835938,1.125,0.84375],[-15.525269,-0.425995,0.84375],[-14.575195,-1.935791,0.84375],[-12.958618,-3.356598,0.84375],[-10.648438,-4.640625,0.84375],[-16.070313,1.125,0],[-15.738281,-0.524414,0],[-14.726563,-2.085938,0],[-13.011719,-3.541992,0],[-10.570313,-4.875,0],[-16.070313,1.125,0],[-15.835938,1.125,-0.84375],[-15.525269,-0.425995,-0.84375],[-15.738281,-0.524414,0],[-14.575195,-1.935791,-0.84375],[-14.726563,-2.085938,0],[-12.958618,-3.356598,-0.84375],[-13.011719,-3.541992,0],[-10.648438,-4.640625,-0.84375],[-10.570313,-4.875,0],[-15.320313,1.125,-1.125],[-15.056641,-0.209473,-1.125],[-14.242188,-1.605469,-1.125],[-12.841797,-2.94873,-1.125],[-10.820313,-4.125,-1.125],[-14.804688,1.125,-0.84375],[-14.588013,0.00705,-0.84375],[-13.90918,-1.275146,-0.84375],[-12.724976,-2.540863,-0.84375],[-10.992188,-3.609375,-0.84375],[-14.570313,1.125,0],[-14.375,0.105469,0],[-13.757813,-1.125,0],[-12.671875,-2.355469,0],[-11.070313,-3.375,0],[7.429688,-0.75,0],[7.429688,-1.394531,1.85625],[10.01123,-0.677124,1.676074],[9.828125,-0.199219,0],[11.101563,0.84668,1.279688],[10.867188,1.125,0],[11.723145,2.629761,0.883301],[11.4375,2.730469,0],[12.898438,4.125,0.703125],[12.429688,4.125,0],[7.429688,-2.8125,2.475],[10.414063,-1.728516,2.234766],[11.617188,0.234375,1.70625],[12.351563,2.408203,1.177734],[13.929688,4.125,0.9375],[7.429688,-4.230469,1.85625],[10.816895,-2.779907,1.676074],[12.132813,-0.37793,1.279688],[12.97998,2.186646,0.883301],[14.960938,4.125,0.703125],[7.429688,-4.875,0],[11,-3.257813,0],[12.367188,-0.65625,0],[13.265625,2.085938,0],[15.429688,4.125,0],[7.429688,-4.875,0],[7.429688,-4.230469,-1.85625],[10.816895,-2.779907,-1.676074],[11,-3.257813,0],[12.132813,-0.37793,-1.279688],[12.367188,-0.65625,0],[12.97998,2.186646,-0.883301],[13.265625,2.085938,0],[14.960938,4.125,-0.703125],[15.429688,4.125,0],[7.429688,-2.8125,-2.475],[10.414063,-1.728516,-2.234766],[11.617188,0.234375,-1.70625],[12.351563,2.408203,-1.177734],[13.929688,4.125,-0.9375],[7.429688,-1.394531,-1.85625],[10.01123,-0.677124,-1.676074],[11.101563,0.84668,-1.279688],[11.723145,2.629761,-0.883301],[12.898438,4.125,-0.703125],[7.429688,-0.75,0],[9.828125,-0.199219,0],[10.867188,1.125,0],[11.4375,2.730469,0],[12.429688,4.125,0],[12.429688,4.125,0],[12.898438,4.125,0.703125],[13.291077,4.346237,0.65918],[12.789063,4.335938,0],[13.525879,4.422729,0.5625],[13.054688,4.40625,0],[13.532898,4.350357,0.46582],[13.132813,4.335938,0],[13.242188,4.125,0.421875],[12.929688,4.125,0],[13.929688,4.125,0.9375],[14.395508,4.368896,0.878906],[14.5625,4.458984,0.75],[14.413086,4.38208,0.621094],[13.929688,4.125,0.5625],[14.960938,4.125,0.703125],[15.499939,4.391556,0.65918],[15.599121,4.495239,0.5625],[15.293274,4.413804,0.46582],[14.617188,4.125,0.421875],[15.429688,4.125,0],[16.001953,4.401855,0],[16.070313,4.511719,0],[15.693359,4.428224,0],[14.929688,4.125,0],[15.429688,4.125,0],[14.960938,4.125,-0.703125],[15.499939,4.391556,-0.65918],[16.001953,4.401855,0],[15.599121,4.495239,-0.5625],[16.070313,4.511719,0],[15.293274,4.413804,-0.46582],[15.693359,4.428224,0],[14.617188,4.125,-0.421875],[14.929688,4.125,0],[13.929688,4.125,-0.9375],[14.395508,4.368896,-0.878906],[14.5625,4.458984,-0.75],[14.413086,4.38208,-0.621094],[13.929688,4.125,-0.5625],[12.898438,4.125,-0.703125],[13.291077,4.346237,-0.65918],[13.525879,4.422729,-0.5625],[13.532898,4.350357,-0.46582],[13.242188,4.125,-0.421875],[12.429688,4.125,0],[12.789063,4.335938,0],[13.054688,4.40625,0],[13.132813,4.335938,0],[12.929688,4.125,0],[0.501414,7.628906,0.670256],[0.632813,7.628906,0],[-1.070312,7.875,0],[0.429278,7.03125,0.639395],[0.554688,7.03125,0],[-0.162029,6.292969,0.38696],[-0.085937,6.292969,0],[-0.147812,5.625,0.3925],[-0.070312,5.625,0],[0.140489,7.628906,1.210801],[-1.070312,7.875,0],[0.084844,7.03125,1.155156],[-0.370879,6.292969,0.699434],[-0.360312,5.625,0.71],[-0.400056,7.628906,1.571726],[-1.070312,7.875,0],[-0.430918,7.03125,1.49959],[-0.683352,6.292969,0.908284],[-0.677812,5.625,0.9225],[-1.070312,7.628906,1.703125],[-1.070312,7.875,0],[-1.070312,7.03125,1.625],[-1.070312,6.292969,0.984375],[-1.070312,5.625,1],[-1.740569,7.628906,1.571726],[-1.070312,7.628906,1.703125],[-1.070312,7.875,0],[-1.709707,7.03125,1.49959],[-1.070312,7.03125,1.625],[-1.457273,6.292969,0.908284],[-1.070312,6.292969,0.984375],[-1.462812,5.625,0.9225],[-1.070312,5.625,1],[-2.281113,7.628906,1.210801],[-1.070312,7.875,0],[-2.225469,7.03125,1.155156],[-1.769746,6.292969,0.699434],[-1.780312,5.625,0.71],[-2.642038,7.628906,0.670256],[-1.070312,7.875,0],[-2.569902,7.03125,0.639395],[-1.978596,6.292969,0.38696],[-1.992812,5.625,0.3925],[-2.773438,7.628906,0],[-1.070312,7.875,0],[-2.695313,7.03125,0],[-2.054687,6.292969,0],[-2.070312,5.625,0],[-2.642038,7.628906,-0.670256],[-2.773438,7.628906,0],[-1.070312,7.875,0],[-2.569902,7.03125,-0.639395],[-2.695313,7.03125,0],[-1.978596,6.292969,-0.38696],[-2.054687,6.292969,0],[-1.992812,5.625,-0.3925],[-2.070312,5.625,0],[-2.281113,7.628906,-1.210801],[-1.070312,7.875,0],[-2.225469,7.03125,-1.155156],[-1.769746,6.292969,-0.699434],[-1.780312,5.625,-0.71],[-1.740569,7.628906,-1.571726],[-1.070312,7.875,0],[-1.709707,7.03125,-1.49959],[-1.457273,6.292969,-0.908284],[-1.462812,5.625,-0.9225],[-1.070312,7.628906,-1.703125],[-1.070312,7.875,0],[-1.070312,7.03125,-1.625],[-1.070312,6.292969,-0.984375],[-1.070312,5.625,-1],[-0.400056,7.628906,-1.571726],[-1.070312,7.628906,-1.703125],[-1.070312,7.875,0],[-0.430918,7.03125,-1.49959],[-1.070312,7.03125,-1.625],[-0.683352,6.292969,-0.908284],[-1.070312,6.292969,-0.984375],[-0.677812,5.625,-0.9225],[-1.070312,5.625,-1],[0.140489,7.628906,-1.210801],[-1.070312,7.875,0],[0.084844,7.03125,-1.155156],[-0.370879,6.292969,-0.699434],[-0.360312,5.625,-0.71],[0.501414,7.628906,-0.670256],[-1.070312,7.875,0],[0.429278,7.03125,-0.639395],[-0.162029,6.292969,-0.38696],[-0.147812,5.625,-0.3925],[0.632813,7.628906,0],[-1.070312,7.875,0],[0.554688,7.03125,0],[-0.085937,6.292969,0],[-0.070312,5.625,0],[-0.070312,5.625,0],[-0.147812,5.625,0.3925],[1.034141,5.179688,0.895391],[1.210938,5.179688,0],[2.735,4.875,1.619062],[3.054688,4.875,0],[4.262891,4.570313,2.26914],[4.710938,4.570313,0],[4.925938,4.125,2.55125],[5.429688,4.125,0],[-0.360312,5.625,0.71],[0.549375,5.179688,1.619688],[1.858438,4.875,2.92875],[3.034375,4.570313,4.104687],[3.544688,4.125,4.615],[-0.677812,5.625,0.9225],[-0.174922,5.179688,2.104453],[0.54875,4.875,3.805313],[1.198828,4.570313,5.333203],[1.480938,4.125,5.99625],[-1.070312,5.625,1],[-1.070312,5.179688,2.28125],[-1.070312,4.875,4.125],[-1.070312,4.570313,5.78125],[-1.070312,4.125,6.5],[-1.070312,5.625,1],[-1.462812,5.625,0.9225],[-1.965703,5.179688,2.104453],[-1.070312,5.179688,2.28125],[-2.689375,4.875,3.805313],[-1.070312,4.875,4.125],[-3.339453,4.570313,5.333203],[-1.070312,4.570313,5.78125],[-3.621562,4.125,5.99625],[-1.070312,4.125,6.5],[-1.780312,5.625,0.71],[-2.69,5.179688,1.619688],[-3.999062,4.875,2.92875],[-5.174999,4.570313,4.104687],[-5.685312,4.125,4.615],[-1.992812,5.625,0.3925],[-3.174765,5.179688,0.895391],[-4.875625,4.875,1.619062],[-6.403516,4.570313,2.26914],[-7.066563,4.125,2.55125],[-2.070312,5.625,0],[-3.351562,5.179688,0],[-5.195313,4.875,0],[-6.851563,4.570313,0],[-7.570313,4.125,0],[-2.070312,5.625,0],[-1.992812,5.625,-0.3925],[-3.174765,5.179688,-0.895391],[-3.351562,5.179688,0],[-4.875625,4.875,-1.619062],[-5.195313,4.875,0],[-6.403516,4.570313,-2.26914],[-6.851563,4.570313,0],[-7.066563,4.125,-2.55125],[-7.570313,4.125,0],[-1.780312,5.625,-0.71],[-2.69,5.179688,-1.619688],[-3.999062,4.875,-2.92875],[-5.174999,4.570313,-4.104687],[-5.685312,4.125,-4.615],[-1.462812,5.625,-0.9225],[-1.965703,5.179688,-2.104453],[-2.689375,4.875,-3.805313],[-3.339453,4.570313,-5.333203],[-3.621562,4.125,-5.99625],[-1.070312,5.625,-1],[-1.070312,5.179688,-2.28125],[-1.070312,4.875,-4.125],[-1.070312,4.570313,-5.78125],[-1.070312,4.125,-6.5],[-1.070312,5.625,-1],[-0.677812,5.625,-0.9225],[-0.174922,5.179688,-2.104453],[-1.070312,5.179688,-2.28125],[0.54875,4.875,-3.805313],[-1.070312,4.875,-4.125],[1.198828,4.570313,-5.333203],[-1.070312,4.570313,-5.78125],[1.480938,4.125,-5.99625],[-1.070312,4.125,-6.5],[-0.360312,5.625,-0.71],[0.549375,5.179688,-1.619688],[1.858438,4.875,-2.92875],[3.034375,4.570313,-4.104687],[3.544688,4.125,-4.615],[-0.147812,5.625,-0.3925],[1.034141,5.179688,-0.895391],[2.735,4.875,-1.619062],[4.262891,4.570313,-2.26914],[4.925938,4.125,-2.55125],[-0.070312,5.625,0],[1.210938,5.179688,0],[3.054688,4.875,0],[4.710938,4.570313,0],[5.429688,4.125,0]];\nexports.cells=[[0,1,2],[2,3,0],[3,2,4],[4,5,3],[5,4,6],[6,7,5],[7,6,8],[8,9,7],[1,10,11],[11,2,1],[2,11,12],[12,4,2],[4,12,13],[13,6,4],[6,13,14],[14,8,6],[10,15,16],[16,11,10],[11,16,17],[17,12,11],[12,17,18],[18,13,12],[13,18,19],[19,14,13],[15,20,21],[21,16,15],[16,21,22],[22,17,16],[17,22,23],[23,18,17],[18,23,24],[24,19,18],[25,26,27],[27,28,25],[28,27,29],[29,30,28],[30,29,31],[31,32,30],[32,31,33],[33,34,32],[26,35,36],[36,27,26],[27,36,37],[37,29,27],[29,37,38],[38,31,29],[31,38,39],[39,33,31],[35,40,41],[41,36,35],[36,41,42],[42,37,36],[37,42,43],[43,38,37],[38,43,44],[44,39,38],[40,45,46],[46,41,40],[41,46,47],[47,42,41],[42,47,48],[48,43,42],[43,48,49],[49,44,43],[50,51,52],[52,53,50],[53,52,54],[54,55,53],[55,54,56],[56,57,55],[57,56,58],[58,59,57],[51,60,61],[61,52,51],[52,61,62],[62,54,52],[54,62,63],[63,56,54],[56,63,64],[64,58,56],[60,65,66],[66,61,60],[61,66,67],[67,62,61],[62,67,68],[68,63,62],[63,68,69],[69,64,63],[65,70,71],[71,66,65],[66,71,72],[72,67,66],[67,72,73],[73,68,67],[68,73,74],[74,69,68],[75,76,77],[77,78,75],[78,77,79],[79,80,78],[80,79,81],[81,82,80],[82,81,83],[83,84,82],[76,85,86],[86,77,76],[77,86,87],[87,79,77],[79,87,88],[88,81,79],[81,88,89],[89,83,81],[85,90,91],[91,86,85],[86,91,92],[92,87,86],[87,92,93],[93,88,87],[88,93,94],[94,89,88],[90,95,96],[96,91,90],[91,96,97],[97,92,91],[92,97,98],[98,93,92],[93,98,99],[99,94,93],[100,101,102],[102,103,100],[103,102,104],[104,105,103],[105,104,106],[106,107,105],[107,106,108],[108,109,107],[101,110,111],[111,102,101],[102,111,112],[112,104,102],[104,112,113],[113,106,104],[106,113,114],[114,108,106],[110,115,116],[116,111,110],[111,116,117],[117,112,111],[112,117,118],[118,113,112],[113,118,119],[119,114,113],[115,120,121],[121,116,115],[116,121,122],[122,117,116],[117,122,123],[123,118,117],[118,123,124],[124,119,118],[125,126,127],[127,128,125],[128,127,129],[129,130,128],[130,129,131],[131,132,130],[132,131,133],[133,134,132],[126,135,136],[136,127,126],[127,136,137],[137,129,127],[129,137,138],[138,131,129],[131,138,139],[139,133,131],[135,140,141],[141,136,135],[136,141,142],[142,137,136],[137,142,143],[143,138,137],[138,143,144],[144,139,138],[140,145,146],[146,141,140],[141,146,147],[147,142,141],[142,147,148],[148,143,142],[143,148,149],[149,144,143],[150,151,152],[152,153,150],[153,152,154],[154,155,153],[155,154,156],[156,157,155],[157,156,158],[158,159,157],[151,160,161],[161,152,151],[152,161,162],[162,154,152],[154,162,163],[163,156,154],[156,163,164],[164,158,156],[160,165,166],[166,161,160],[161,166,167],[167,162,161],[162,167,168],[168,163,162],[163,168,169],[169,164,163],[165,170,171],[171,166,165],[166,171,172],[172,167,166],[167,172,173],[173,168,167],[168,173,174],[174,169,168],[175,176,177],[177,178,175],[178,177,179],[179,180,178],[180,179,181],[181,182,180],[182,181,183],[183,184,182],[176,185,186],[186,177,176],[177,186,187],[187,179,177],[179,187,188],[188,181,179],[181,188,189],[189,183,181],[185,190,191],[191,186,185],[186,191,192],[192,187,186],[187,192,193],[193,188,187],[188,193,194],[194,189,188],[190,195,196],[196,191,190],[191,196,197],[197,192,191],[192,197,198],[198,193,192],[193,198,199],[199,194,193],[200,201,202],[202,203,200],[203,202,204],[204,205,203],[205,204,206],[206,207,205],[207,206,208],[208,209,207],[201,210,211],[211,202,201],[202,211,212],[212,204,202],[204,212,213],[213,206,204],[206,213,214],[214,208,206],[210,215,216],[216,211,210],[211,216,217],[217,212,211],[212,217,218],[218,213,212],[213,218,219],[219,214,213],[215,220,221],[221,216,215],[216,221,222],[222,217,216],[217,222,223],[223,218,217],[218,223,224],[224,219,218],[225,226,227],[227,228,225],[228,227,229],[229,230,228],[230,229,231],[231,232,230],[232,231,233],[233,234,232],[226,235,236],[236,227,226],[227,236,237],[237,229,227],[229,237,238],[238,231,229],[231,238,239],[239,233,231],[235,240,241],[241,236,235],[236,241,242],[242,237,236],[237,242,243],[243,238,237],[238,243,244],[244,239,238],[240,245,246],[246,241,240],[241,246,247],[247,242,241],[242,247,248],[248,243,242],[243,248,249],[249,244,243],[250,251,252],[252,253,250],[253,252,254],[254,255,253],[255,254,256],[256,257,255],[257,256,258],[258,259,257],[251,260,261],[261,252,251],[252,261,262],[262,254,252],[254,262,263],[263,256,254],[256,263,264],[264,258,256],[260,265,266],[266,261,260],[261,266,267],[267,262,261],[262,267,268],[268,263,262],[263,268,269],[269,264,263],[265,270,271],[271,266,265],[266,271,272],[272,267,266],[267,272,273],[273,268,267],[268,273,274],[274,269,268],[275,276,277],[277,278,275],[278,277,279],[279,280,278],[280,279,281],[281,282,280],[282,281,283],[283,284,282],[276,285,286],[286,277,276],[277,286,287],[287,279,277],[279,287,288],[288,281,279],[281,288,289],[289,283,281],[285,290,291],[291,286,285],[286,291,292],[292,287,286],[287,292,293],[293,288,287],[288,293,294],[294,289,288],[290,295,296],[296,291,290],[291,296,297],[297,292,291],[292,297,298],[298,293,292],[293,298,299],[299,294,293],[300,301,302],[302,303,300],[303,302,304],[304,305,303],[305,304,306],[306,307,305],[307,306,308],[301,309,310],[310,302,301],[302,310,311],[311,304,302],[304,311,312],[312,306,304],[306,312,313],[309,314,315],[315,310,309],[310,315,316],[316,311,310],[311,316,317],[317,312,311],[312,317,318],[314,319,320],[320,315,314],[315,320,321],[321,316,315],[316,321,322],[322,317,316],[317,322,323],[324,325,326],[326,327,324],[327,326,328],[328,329,327],[329,328,330],[330,331,329],[331,330,332],[325,333,334],[334,326,325],[326,334,335],[335,328,326],[328,335,336],[336,330,328],[330,336,337],[333,338,339],[339,334,333],[334,339,340],[340,335,334],[335,340,341],[341,336,335],[336,341,342],[338,343,344],[344,339,338],[339,344,345],[345,340,339],[340,345,346],[346,341,340],[341,346,347],[348,349,350],[350,351,348],[351,350,352],[352,353,351],[353,352,354],[354,355,353],[355,354,356],[349,357,358],[358,350,349],[350,358,359],[359,352,350],[352,359,360],[360,354,352],[354,360,361],[357,362,363],[363,358,357],[358,363,364],[364,359,358],[359,364,365],[365,360,359],[360,365,366],[362,367,368],[368,363,362],[363,368,369],[369,364,363],[364,369,370],[370,365,364],[365,370,371],[372,373,374],[374,375,372],[375,374,376],[376,377,375],[377,376,378],[378,379,377],[379,378,380],[373,381,382],[382,374,373],[374,382,383],[383,376,374],[376,383,384],[384,378,376],[378,384,385],[381,386,387],[387,382,381],[382,387,388],[388,383,382],[383,388,389],[389,384,383],[384,389,390],[386,391,392],[392,387,386],[387,392,393],[393,388,387],[388,393,394],[394,389,388],[389,394,395],[396,397,398],[398,399,396],[399,398,400],[400,401,399],[401,400,402],[402,403,401],[403,402,404],[404,405,403],[397,406,407],[407,398,397],[398,407,408],[408,400,398],[400,408,409],[409,402,400],[402,409,410],[410,404,402],[406,411,412],[412,407,406],[407,412,413],[413,408,407],[408,413,414],[414,409,408],[409,414,415],[415,410,409],[411,416,417],[417,412,411],[412,417,418],[418,413,412],[413,418,419],[419,414,413],[414,419,420],[420,415,414],[421,422,423],[423,424,421],[424,423,425],[425,426,424],[426,425,427],[427,428,426],[428,427,429],[429,430,428],[422,431,432],[432,423,422],[423,432,433],[433,425,423],[425,433,434],[434,427,425],[427,434,435],[435,429,427],[431,436,437],[437,432,431],[432,437,438],[438,433,432],[433,438,439],[439,434,433],[434,439,440],[440,435,434],[436,441,442],[442,437,436],[437,442,443],[443,438,437],[438,443,444],[444,439,438],[439,444,445],[445,440,439],[446,447,448],[448,449,446],[449,448,450],[450,451,449],[451,450,452],[452,453,451],[453,452,454],[454,455,453],[447,456,457],[457,448,447],[448,457,458],[458,450,448],[450,458,459],[459,452,450],[452,459,460],[460,454,452],[456,461,462],[462,457,456],[457,462,463],[463,458,457],[458,463,464],[464,459,458],[459,464,465],[465,460,459],[461,466,467],[467,462,461],[462,467,468],[468,463,462],[463,468,469],[469,464,463],[464,469,470],[470,465,464],[471,472,473],[473,474,471],[474,473,475],[475,476,474],[476,475,477],[477,478,476],[478,477,479],[479,480,478],[472,481,482],[482,473,472],[473,482,483],[483,475,473],[475,483,484],[484,477,475],[477,484,485],[485,479,477],[481,486,487],[487,482,481],[482,487,488],[488,483,482],[483,488,489],[489,484,483],[484,489,490],[490,485,484],[486,491,492],[492,487,486],[487,492,493],[493,488,487],[488,493,494],[494,489,488],[489,494,495],[495,490,489],[496,497,498],[498,499,496],[499,498,500],[500,501,499],[501,500,502],[502,503,501],[503,502,504],[504,505,503],[497,506,507],[507,498,497],[498,507,508],[508,500,498],[500,508,509],[509,502,500],[502,509,510],[510,504,502],[506,511,512],[512,507,506],[507,512,513],[513,508,507],[508,513,514],[514,509,508],[509,514,515],[515,510,509],[511,516,517],[517,512,511],[512,517,518],[518,513,512],[513,518,519],[519,514,513],[514,519,520],[520,515,514],[521,522,523],[523,524,521],[524,523,525],[525,526,524],[526,525,527],[527,528,526],[528,527,529],[529,530,528],[522,531,532],[532,523,522],[523,532,533],[533,525,523],[525,533,534],[534,527,525],[527,534,535],[535,529,527],[531,536,537],[537,532,531],[532,537,538],[538,533,532],[533,538,539],[539,534,533],[534,539,540],[540,535,534],[536,541,542],[542,537,536],[537,542,543],[543,538,537],[538,543,544],[544,539,538],[539,544,545],[545,540,539],[546,547,548],[548,549,546],[549,548,550],[550,551,549],[551,550,552],[552,553,551],[553,552,554],[554,555,553],[547,556,557],[557,548,547],[548,557,558],[558,550,548],[550,558,559],[559,552,550],[552,559,560],[560,554,552],[556,561,562],[562,557,556],[557,562,563],[563,558,557],[558,563,564],[564,559,558],[559,564,565],[565,560,559],[561,566,567],[567,562,561],[562,567,568],[568,563,562],[563,568,569],[569,564,563],[564,569,570],[570,565,564],[571,572,573],[573,574,571],[574,573,575],[575,576,574],[576,575,577],[577,578,576],[578,577,579],[579,580,578],[572,581,582],[582,573,572],[573,582,583],[583,575,573],[575,583,584],[584,577,575],[577,584,585],[585,579,577],[581,586,587],[587,582,581],[582,587,588],[588,583,582],[583,588,589],[589,584,583],[584,589,590],[590,585,584],[586,591,592],[592,587,586],[587,592,593],[593,588,587],[588,593,594],[594,589,588],[589,594,595],[595,590,589],[596,597,598],[597,596,599],[599,600,597],[600,599,601],[601,602,600],[602,601,603],[603,604,602],[605,596,606],[596,605,607],[607,599,596],[599,607,608],[608,601,599],[601,608,609],[609,603,601],[610,605,611],[605,610,612],[612,607,605],[607,612,613],[613,608,607],[608,613,614],[614,609,608],[615,610,616],[610,615,617],[617,612,610],[612,617,618],[618,613,612],[613,618,619],[619,614,613],[620,621,622],[621,620,623],[623,624,621],[624,623,625],[625,626,624],[626,625,627],[627,628,626],[629,620,630],[620,629,631],[631,623,620],[623,631,632],[632,625,623],[625,632,633],[633,627,625],[634,629,635],[629,634,636],[636,631,629],[631,636,637],[637,632,631],[632,637,638],[638,633,632],[639,634,640],[634,639,641],[641,636,634],[636,641,642],[642,637,636],[637,642,643],[643,638,637],[644,645,646],[645,644,647],[647,648,645],[648,647,649],[649,650,648],[650,649,651],[651,652,650],[653,644,654],[644,653,655],[655,647,644],[647,655,656],[656,649,647],[649,656,657],[657,651,649],[658,653,659],[653,658,660],[660,655,653],[655,660,661],[661,656,655],[656,661,662],[662,657,656],[663,658,664],[658,663,665],[665,660,658],[660,665,666],[666,661,660],[661,666,667],[667,662,661],[668,669,670],[669,668,671],[671,672,669],[672,671,673],[673,674,672],[674,673,675],[675,676,674],[677,668,678],[668,677,679],[679,671,668],[671,679,680],[680,673,671],[673,680,681],[681,675,673],[682,677,683],[677,682,684],[684,679,677],[679,684,685],[685,680,679],[680,685,686],[686,681,680],[687,682,688],[682,687,689],[689,684,682],[684,689,690],[690,685,684],[685,690,691],[691,686,685],[692,693,694],[694,695,692],[695,694,696],[696,697,695],[697,696,698],[698,699,697],[699,698,700],[700,701,699],[693,702,703],[703,694,693],[694,703,704],[704,696,694],[696,704,705],[705,698,696],[698,705,706],[706,700,698],[702,707,708],[708,703,702],[703,708,709],[709,704,703],[704,709,710],[710,705,704],[705,710,711],[711,706,705],[707,712,713],[713,708,707],[708,713,714],[714,709,708],[709,714,715],[715,710,709],[710,715,716],[716,711,710],[717,718,719],[719,720,717],[720,719,721],[721,722,720],[722,721,723],[723,724,722],[724,723,725],[725,726,724],[718,727,728],[728,719,718],[719,728,729],[729,721,719],[721,729,730],[730,723,721],[723,730,731],[731,725,723],[727,732,733],[733,728,727],[728,733,734],[734,729,728],[729,734,735],[735,730,729],[730,735,736],[736,731,730],[732,737,738],[738,733,732],[733,738,739],[739,734,733],[734,739,740],[740,735,734],[735,740,741],[741,736,735],[742,743,744],[744,745,742],[745,744,746],[746,747,745],[747,746,748],[748,749,747],[749,748,750],[750,751,749],[743,752,753],[753,744,743],[744,753,754],[754,746,744],[746,754,755],[755,748,746],[748,755,756],[756,750,748],[752,757,758],[758,753,752],[753,758,759],[759,754,753],[754,759,760],[760,755,754],[755,760,761],[761,756,755],[757,762,763],[763,758,757],[758,763,764],[764,759,758],[759,764,765],[765,760,759],[760,765,766],[766,761,760],[767,768,769],[769,770,767],[770,769,771],[771,772,770],[772,771,773],[773,774,772],[774,773,775],[775,776,774],[768,777,778],[778,769,768],[769,778,779],[779,771,769],[771,779,780],[780,773,771],[773,780,781],[781,775,773],[777,782,783],[783,778,777],[778,783,784],[784,779,778],[779,784,785],[785,780,779],[780,785,786],[786,781,780],[782,787,788],[788,783,782],[783,788,789],[789,784,783],[784,789,790],[790,785,784],[785,790,791],[791,786,785]];\n","exports.positions=[[1.301895,0.122622,2.550061],[1.045326,0.139058,2.835156],[0.569251,0.155925,2.805125],[0.251886,0.144145,2.82928],[0.063033,0.131726,3.01408],[-0.277753,0.135892,3.10716],[-0.441048,0.277064,2.594331],[-1.010956,0.095285,2.668983],[-1.317639,0.069897,2.325448],[-0.751691,0.264681,2.381496],[0.684137,0.31134,2.364574],[1.347931,0.302882,2.201434],[-1.736903,0.029894,1.724111],[-1.319986,0.11998,0.912925],[1.538077,0.157372,0.481711],[1.951975,0.081742,1.1641],[1.834768,0.095832,1.602682],[2.446122,0.091817,1.37558],[2.617615,0.078644,0.742801],[-1.609748,0.04973,-0.238721],[-1.281973,0.230984,-0.180916],[-1.074501,0.248204,0.034007],[-1.201734,0.058499,0.402234],[-1.444454,0.054783,0.149579],[-4.694605,5.075882,1.043427],[-3.95963,7.767394,0.758447],[-4.753339,5.339817,0.665061],[-1.150325,9.133327,-0.368552],[-4.316107,2.893611,0.44399],[-0.809202,9.312575,-0.466061],[0.085626,5.963693,1.685666],[-1.314853,9.00142,-0.1339],[-4.364182,3.072556,1.436712],[-2.022074,7.323396,0.678657],[1.990887,6.13023,0.479643],[-3.295525,7.878917,1.409353],[0.571308,6.197569,0.670657],[0.89661,6.20018,0.337056],[0.331851,6.162372,1.186371],[-4.840066,5.599874,2.296069],[2.138989,6.031291,0.228335],[0.678923,6.026173,1.894052],[-0.781682,5.601573,1.836738],[1.181315,6.239007,0.393293],[-3.606308,7.376476,2.661452],[-0.579059,4.042511,-1.540883],[-3.064069,8.630253,-2.597539],[-2.157271,6.837012,0.300191],[-2.966013,7.821581,-1.13697],[-2.34426,8.122965,0.409043],[-0.951684,5.874251,1.415119],[-2.834853,7.748319,0.182406],[-3.242493,7.820096,0.373674],[-0.208532,5.992846,1.252084],[-3.048085,8.431527,-2.129795],[1.413245,5.806324,2.243906],[-0.051222,6.064901,0.696093],[-4.204306,2.700062,0.713875],[-4.610997,6.343405,0.344272],[-3.291336,9.30531,-3.340445],[-3.27211,7.559239,-2.324016],[-4.23882,6.498344,3.18452],[-3.945317,6.377804,3.38625],[-4.906378,5.472265,1.315193],[-3.580131,7.846717,0.709666],[-1.995504,6.645459,0.688487],[-2.595651,7.86054,0.793351],[-0.008849,0.305871,0.184484],[-0.029011,0.314116,-0.257312],[-2.522424,7.565392,1.804212],[-1.022993,8.650826,-0.855609],[-3.831265,6.595426,3.266783],[-4.042525,6.855724,3.060663],[-4.17126,7.404742,2.391387],[3.904526,3.767693,0.092179],[0.268076,6.086802,1.469223],[-3.320456,8.753222,-2.08969],[1.203048,6.26925,0.612407],[-4.406479,2.985974,0.853691],[-3.226889,6.615215,-0.404243],[0.346326,1.60211,3.509858],[-3.955476,7.253323,2.722392],[-1.23204,0.068935,1.68794],[0.625436,6.196455,1.333156],[4.469132,2.165298,1.70525],[0.950053,6.262899,0.922441],[-2.980404,5.25474,-0.663155],[-4.859043,6.28741,1.537081],[-3.077453,4.641475,-0.892167],[-0.44002,8.222503,-0.771454],[-4.034112,7.639786,0.389935],[-3.696045,6.242042,3.394679],[-1.221806,7.783617,0.196451],[0.71461,6.149895,1.656636],[-4.713539,6.163154,0.495369],[-1.509869,0.913044,-0.832413],[-1.547249,2.066753,-0.852669],[-3.757734,5.793742,3.455794],[-0.831911,0.199296,1.718536],[-3.062763,7.52718,-1.550559],[0.938688,6.103354,1.820958],[-4.037033,2.412311,0.988026],[-4.130746,2.571806,1.101689],[-0.693664,9.174283,-0.952323],[-1.286742,1.079679,-0.751219],[1.543185,1.408925,3.483132],[1.535973,2.047979,3.655029],[0.93844,5.84101,2.195219],[-0.684401,5.918492,1.20109],[1.28844,2.008676,3.710781],[-3.586722,7.435506,-1.454737],[-0.129975,4.384192,2.930593],[-1.030531,0.281374,3.214273],[-3.058751,8.137238,-3.227714],[3.649524,4.592226,1.340021],[-3.354828,7.322425,-1.412086],[0.936449,6.209237,1.512693],[-1.001832,3.590411,-1.545892],[-3.770486,4.593242,2.477056],[-0.971925,0.067797,0.921384],[-4.639832,6.865407,2.311791],[-0.441014,8.093595,-0.595999],[-2.004852,6.37142,1.635383],[4.759591,1.92818,0.328328],[3.748064,1.224074,2.140484],[-0.703601,5.285476,2.251988],[0.59532,6.21893,0.981004],[0.980799,6.257026,1.24223],[1.574697,6.204981,0.381628],[1.149594,6.173608,1.660763],[-3.501963,5.895989,3.456576],[1.071122,5.424198,2.588717],[-0.774693,8.473335,-0.276957],[3.849959,4.15542,0.396742],[-0.801715,4.973149,-1.068582],[-2.927676,0.625112,2.326393],[2.669682,4.045542,2.971184],[-4.391324,4.74086,0.343463],[1.520129,6.270031,0.775471],[1.837586,6.084731,0.109188],[1.271475,5.975024,2.032355],[-3.487968,4.513249,2.605871],[-1.32234,1.517264,-0.691879],[-1.080301,1.648226,-0.805526],[-3.365703,6.910166,-0.454902],[1.36034,0.432238,3.075004],[-3.305013,5.774685,3.39142],[3.88432,0.654141,0.12574],[3.57254,0.377934,0.302501],[4.196136,0.807999,0.212229],[3.932997,0.543123,0.380579],[4.023704,3.286125,0.537597],[1.864455,4.916544,2.691677],[-4.775427,6.499498,1.440153],[-3.464928,3.68234,2.766356],[3.648972,1.751262,2.157485],[1.179111,3.238846,3.774796],[-0.171164,0.299126,-0.592669],[-4.502912,3.316656,0.875188],[-0.948454,9.214025,-0.679508],[1.237665,6.288593,1.046],[1.523423,6.268963,1.139544],[1.436519,6.140608,1.739316],[3.723607,1.504355,2.136762],[2.009495,4.045514,3.22053],[-1.921944,7.249905,0.213973],[1.254068,1.205518,3.474709],[-0.317087,5.996269,0.525872],[-2.996914,3.934607,2.900178],[-3.316873,4.028154,2.785696],[-3.400267,4.280157,2.689268],[-3.134842,4.564875,2.697192],[1.480563,4.692567,2.834068],[0.873682,1.315452,3.541585],[1.599355,0.91622,3.246769],[-3.292102,7.125914,2.768515],[3.74296,4.511299,0.616539],[4.698935,1.55336,0.26921],[-3.274387,3.299421,2.823946],[-2.88809,3.410699,2.955248],[1.171407,1.76905,3.688472],[1.430276,3.92483,3.473666],[3.916941,2.553308,0.018941],[0.701632,2.442372,3.778639],[1.562657,2.302778,3.660957],[4.476622,1.152407,0.182131],[-0.61136,5.761367,1.598838],[-3.102154,3.691687,2.903738],[1.816012,5.546167,2.380308],[3.853928,4.25066,0.750017],[1.234681,3.581665,3.673723],[1.862271,1.361863,3.355209],[1.346844,4.146995,3.327877],[1.70672,4.080043,3.274307],[0.897242,1.908983,3.6969],[-0.587022,9.191132,-0.565301],[-0.217426,5.674606,2.019968],[0.278925,6.120777,0.485403],[1.463328,3.578742,-2.001464],[-3.072985,4.264581,2.789502],[3.62353,4.673843,0.383452],[-3.053491,8.752377,-2.908434],[-2.628687,4.505072,2.755601],[0.891047,5.113781,2.748272],[-2.923732,3.06515,2.866368],[0.848008,4.754252,2.896972],[-3.319184,8.811641,-2.327412],[0.12864,8.814781,-1.334456],[1.549501,4.549331,-1.28243],[1.647161,3.738973,3.507719],[1.250888,0.945599,3.348739],[3.809662,4.038822,0.053142],[1.483166,0.673327,3.09156],[0.829726,3.635921,3.713103],[1.352914,5.226651,2.668113],[2.237352,4.37414,3.016386],[4.507929,0.889447,0.744249],[4.57304,1.010981,0.496588],[3.931422,1.720989,2.088175],[-0.463177,5.989835,0.834346],[-2.811236,3.745023,2.969587],[-2.805135,4.219721,2.841108],[-2.836842,4.802543,2.60826],[1.776716,2.084611,3.568638],[4.046881,1.463478,2.106273],[0.316265,5.944313,1.892785],[-2.86347,2.776049,2.77242],[-2.673644,3.116508,2.907104],[-2.621149,4.018502,2.903409],[-2.573447,5.198013,2.477481],[1.104039,2.278985,3.722469],[-4.602743,4.306413,0.902296],[-2.684878,1.510731,0.535039],[0.092036,8.473269,-0.99413],[-1.280472,5.602393,1.928105],[-1.0279,4.121582,-1.403103],[-2.461081,3.304477,2.957317],[-2.375929,3.659383,2.953233],[1.417579,2.715389,3.718767],[0.819727,2.948823,3.810639],[1.329962,0.761779,3.203724],[1.73952,5.295229,2.537725],[0.952523,3.945016,3.548229],[-2.569498,0.633669,2.84818],[-2.276676,0.757013,2.780717],[-2.013147,7.354429,-0.003202],[0.93143,1.565913,3.600325],[1.249014,1.550556,3.585842],[2.287252,4.072353,3.124544],[-4.7349,7.006244,1.690653],[-3.500602,8.80386,-2.009196],[-0.582629,5.549138,2.000923],[-1.865297,6.356066,1.313593],[-3.212154,2.376143,-0.565593],[2.092889,3.493536,-1.727931],[-2.528501,2.784531,2.833758],[-2.565697,4.893154,2.559605],[-2.153366,5.04584,2.465215],[1.631311,2.568241,3.681445],[2.150193,4.699227,2.807505],[0.507599,5.01813,2.775892],[4.129862,1.863698,2.015101],[3.578279,4.50766,-0.009598],[3.491023,4.806749,1.549265],[0.619485,1.625336,3.605125],[1.107499,2.932557,3.790061],[-2.082292,6.99321,0.742601],[4.839909,1.379279,0.945274],[3.591328,4.322645,-0.259497],[1.055245,0.710686,3.16553],[-3.026494,7.842227,1.624553],[0.146569,6.119214,0.981673],[-2.043687,2.614509,2.785526],[-2.302242,3.047775,2.936355],[-2.245686,4.100424,2.87794],[2.116148,5.063507,2.572204],[-1.448406,7.64559,0.251692],[2.550717,4.9268,2.517526],[-2.955456,7.80293,-1.782407],[1.882995,4.637167,2.895436],[-2.014924,3.398262,2.954896],[-2.273654,4.771227,2.611418],[-2.162723,7.876761,0.702473],[-0.198659,5.823062,1.739272],[-1.280908,2.133189,-0.921241],[2.039932,4.251568,3.136579],[1.477815,4.354333,3.108325],[0.560504,3.744128,3.6913],[-2.234018,1.054373,2.352782],[-3.189156,7.686661,-2.514955],[-3.744736,7.69963,2.116973],[-2.283366,2.878365,2.87882],[-2.153786,4.457481,2.743529],[4.933978,1.677287,0.713773],[3.502146,0.535336,1.752511],[1.825169,4.419253,3.081198],[3.072331,0.280979,0.106534],[-0.508381,1.220392,2.878049],[-3.138824,8.445394,-1.659711],[-2.056425,2.954815,2.897241],[-2.035343,5.398477,2.215842],[-3.239915,7.126798,-0.712547],[-1.867923,7.989805,0.526518],[1.23405,6.248973,1.387189],[-0.216492,8.320933,-0.862495],[-2.079659,3.755709,2.928563],[-1.78595,4.300374,2.805295],[-1.856589,5.10678,2.386572],[-1.714362,5.544778,2.004623],[1.722403,4.200291,-1.408161],[0.195386,0.086928,-1.318006],[1.393693,3.013404,3.710686],[-0.415307,8.508471,-0.996883],[-1.853777,0.755635,2.757275],[-1.724057,3.64533,2.884251],[-1.884511,4.927802,2.530885],[-1.017174,7.783908,-0.227078],[-1.7798,2.342513,2.741749],[-1.841329,3.943996,2.88436],[1.430388,5.468067,2.503467],[-2.030296,0.940028,2.611088],[-1.677028,1.215666,2.607771],[-1.74092,2.832564,2.827295],[4.144673,0.631374,0.503358],[4.238811,0.653992,0.762436],[-1.847016,2.082815,2.642674],[4.045764,3.194073,0.852117],[-1.563989,8.112739,0.303102],[-1.781627,1.794836,2.602338],[-1.493749,2.533799,2.797251],[-1.934496,4.690689,2.658999],[-1.499174,5.777946,1.747498],[-2.387409,0.851291,1.500524],[-1.872211,8.269987,0.392533],[-4.647726,6.765771,0.833653],[-3.157482,0.341958,-0.20671],[-1.725766,3.24703,2.883579],[-1.458199,4.079031,2.836325],[-1.621548,4.515869,2.719266],[-1.607292,4.918914,2.505881],[-1.494661,5.556239,1.991599],[-1.727269,7.423769,0.012337],[-1.382497,1.161322,2.640222],[-1.52129,4.681714,2.615467],[-4.247127,2.792812,1.250843],[-1.576338,0.742947,2.769799],[-1.499257,2.172763,2.743142],[-1.480392,3.103261,2.862262],[1.049137,2.625836,3.775384],[-1.368063,1.791587,2.695516],[-1.307839,2.344534,2.767575],[-1.336758,5.092221,2.355225],[-1.5617,5.301749,2.21625],[-1.483362,8.537704,0.196752],[-1.517348,8.773614,0.074053],[-1.474302,1.492731,2.641433],[2.48718,0.644247,-0.920226],[0.818091,0.422682,3.171218],[-3.623398,6.930094,3.033045],[1.676333,3.531039,3.591591],[1.199939,5.683873,2.365623],[-1.223851,8.841201,0.025414],[-1.286307,3.847643,2.918044],[-1.25857,4.810831,2.543605],[2.603662,5.572146,1.991854],[0.138984,5.779724,2.077834],[-1.267039,3.175169,2.890889],[-1.293616,3.454612,2.911774],[-2.60112,1.277184,0.07724],[2.552779,3.649877,3.163643],[-1.038983,1.248011,2.605933],[-1.288709,4.390967,2.761214],[-1.034218,5.485963,2.011467],[-1.185576,1.464842,2.624335],[-1.045682,2.54896,2.761102],[4.259176,1.660627,2.018096],[-0.961707,1.717183,2.598342],[-1.044603,3.147464,2.855335],[-0.891998,4.685429,2.669696],[-1.027561,5.081672,2.377939],[4.386506,0.832434,0.510074],[-1.014225,9.064991,-0.175352],[-1.218752,2.895443,2.823785],[-0.972075,4.432669,2.788005],[-2.714986,0.52425,1.509798],[-0.699248,1.517219,2.645738],[-1.161581,2.078852,2.722795],[-0.845249,3.286247,2.996471],[1.068329,4.443444,2.993863],[3.98132,3.715557,1.027775],[1.658097,3.982428,-1.651688],[-4.053701,2.449888,0.734746],[-0.910935,2.214149,2.702393],[0.087824,3.96165,3.439344],[-0.779714,3.724134,2.993429],[-1.051093,3.810797,2.941957],[-0.644941,4.3859,2.870863],[-2.98403,8.666895,-3.691888],[-0.754304,2.508325,2.812999],[-4.635524,3.662891,0.913005],[-0.983299,4.125978,2.915378],[4.916497,1.905209,0.621315],[4.874983,1.728429,0.468521],[2.33127,5.181957,2.441697],[-0.653711,2.253387,2.7949],[-3.623744,8.978795,-2.46192],[-4.555927,6.160279,0.215755],[-4.940628,5.806712,1.18383],[3.308506,2.40326,-0.910776],[0.58835,5.251928,-0.992886],[2.152215,5.449733,2.331679],[-0.712755,0.766765,3.280375],[-0.741771,1.9716,2.657235],[-4.828957,5.566946,2.635623],[-3.474788,8.696771,-1.776121],[1.770417,6.205561,1.331627],[-0.620626,4.064721,2.968972],[-1.499187,2.307735,-0.978901],[4.098793,2.330245,1.667951],[1.940444,6.167057,0.935904],[-2.314436,1.104995,1.681277],[-2.733629,7.742793,1.7705],[-0.452248,4.719868,2.740834],[-0.649143,4.951713,2.541296],[-0.479417,9.43959,-0.676324],[-2.251853,6.559275,0.046819],[0.033531,8.316907,-0.789939],[-0.513125,0.995673,3.125462],[-2.637602,1.039747,0.602434],[1.527513,6.230089,1.430903],[4.036124,2.609846,1.506498],[-3.559828,7.877892,1.228076],[-4.570736,4.960193,0.838201],[-0.432121,5.157731,2.467518],[-1.206735,4.562511,-1.237054],[-0.823768,3.788746,-1.567481],[-3.095544,7.353613,-1.024577],[-4.056088,7.631119,2.062001],[-0.289385,5.382261,2.329421],[1.69752,6.136483,1.667037],[-0.168758,5.061138,2.617453],[2.853576,1.605528,-1.229958],[-4.514319,6.586675,0.352756],[-2.558081,7.741151,1.29295],[1.61116,5.92358,2.071534],[3.936921,3.354857,0.091755],[-0.1633,1.119272,3.147975],[0.067551,1.593475,3.38212],[-1.303239,2.328184,-1.011672],[-0.438093,0.73423,3.398384],[-4.62767,3.898187,0.849573],[0.286853,4.165281,3.284834],[-2.968052,8.492812,-3.493693],[-0.111896,3.696111,3.53791],[-3.808245,8.451731,-1.574742],[0.053416,5.558764,2.31107],[3.956269,3.012071,0.11121],[-0.710956,8.106561,-0.665154],[0.234725,2.717326,3.722379],[-0.031594,2.76411,3.657347],[-0.017371,4.700633,2.81911],[0.215064,5.034859,2.721426],[-0.111151,8.480333,-0.649399],[3.97942,3.575478,0.362219],[0.392962,4.735392,2.874321],[4.17015,2.085087,1.865999],[0.169054,1.244786,3.337709],[0.020049,3.165818,3.721736],[0.248212,3.595518,3.698376],[0.130706,5.295541,2.540034],[-4.541357,4.798332,1.026866],[-1.277485,1.289518,-0.667272],[3.892133,3.54263,-0.078056],[4.057379,3.03669,0.997913],[0.287719,0.884758,3.251787],[0.535771,1.144701,3.400096],[0.585303,1.399362,3.505353],[0.191551,2.076246,3.549355],[0.328656,2.394576,3.649623],[0.413124,3.240728,3.771515],[0.630361,4.501549,2.963623],[0.529441,5.854392,2.120225],[3.805796,3.769958,-0.162079],[3.447279,4.344846,-0.467276],[0.377618,5.551116,2.426017],[0.409355,1.821269,3.606333],[0.719959,2.194726,3.703851],[0.495922,3.501519,3.755661],[0.603408,5.354097,2.603088],[-4.605056,7.531978,1.19579],[0.907972,0.973128,3.356513],[0.750134,3.356137,3.765847],[0.4496,3.993244,3.504544],[-3.030738,7.48947,-1.259169],[0.707505,5.602005,2.43476],[0.668944,0.654891,3.213797],[0.593244,2.700978,3.791427],[1.467759,3.30327,3.71035],[3.316249,2.436388,2.581175],[3.26138,1.724425,2.539028],[-1.231292,7.968263,0.281414],[-0.108773,8.712307,-0.790607],[4.445684,1.819442,1.896988],[1.998959,2.281499,3.49447],[2.162269,2.113817,3.365449],[4.363397,1.406731,1.922714],[4.808,2.225842,0.611127],[2.735919,0.771812,-0.701142],[1.897735,2.878428,3.583482],[-3.31616,5.331985,3.212394],[-3.3314,6.018137,3.313018],[-3.503183,6.480103,3.222216],[-1.904453,5.750392,1.913324],[-1.339735,3.559592,-1.421817],[-1.044242,8.22539,0.037414],[1.643492,3.110676,3.647424],[3.992832,3.686244,0.710946],[1.774207,1.71842,3.475768],[-3.438842,5.5713,3.427818],[4.602447,1.2583,1.619528],[-0.925516,7.930042,0.072336],[-1.252093,3.846565,-1.420761],[-3.426857,5.072419,2.97806],[-3.160408,6.152629,3.061869],[3.739931,3.367082,2.041273],[1.027419,4.235891,3.251253],[4.777703,1.887452,1.560409],[-3.318528,6.733796,2.982968],[2.929265,4.962579,2.271079],[3.449761,2.838629,2.474576],[-3.280159,5.029875,2.787514],[4.068939,2.993629,0.741567],[0.303312,8.70927,-1.121972],[0.229852,8.981322,-1.186075],[-0.011045,9.148156,-1.047057],[-2.942683,5.579613,2.929297],[-3.145409,5.698727,3.205778],[-3.019089,6.30887,2.794323],[-3.217135,6.468191,2.970032],[-3.048298,6.993641,2.623378],[-3.07429,6.660982,2.702434],[3.612011,2.5574,2.25349],[2.54516,4.553967,2.75884],[-1.683759,7.400787,0.250868],[-1.756066,7.463557,0.448031],[-3.023761,5.149697,2.673539],[3.112376,2.677218,2.782378],[2.835327,4.581196,2.567146],[-2.973799,7.225458,2.506988],[-0.591645,8.740662,-0.505845],[3.782861,2.04337,2.03066],[3.331604,3.36343,2.605047],[2.966866,1.205497,2.537432],[0.002669,9.654748,-1.355559],[2.632801,0.58497,2.540311],[-2.819398,5.087372,2.521098],[2.616193,5.332961,2.194288],[-3.193973,4.925634,2.607924],[-3.12618,5.27524,2.944544],[-0.426003,8.516354,-0.501528],[2.802717,1.387643,2.751649],[-3.120597,7.889111,-2.75431],[2.636648,1.71702,2.991302],[-2.853151,6.711792,2.430276],[-2.843836,6.962865,2.400842],[1.9696,3.199023,3.504514],[-2.461751,0.386352,3.008994],[1.64127,0.495758,3.02958],[-4.330472,5.409831,0.025287],[-2.912387,5.980416,2.844261],[-2.490069,0.211078,2.985391],[3.581816,4.809118,0.733728],[2.693199,2.647213,3.126709],[-0.182964,8.184108,-0.638459],[-2.226855,0.444711,2.946552],[-0.720175,8.115055,0.017689],[2.645302,4.316212,2.850139],[-0.232764,9.329503,-0.918639],[4.852365,1.471901,0.65275],[2.76229,2.014994,2.957755],[-2.808374,5.354301,2.644695],[-2.790967,6.406963,2.547985],[-1.342684,0.418488,-1.669183],[2.690675,5.593587,-0.041236],[4.660146,1.6318,1.713314],[2.775667,3.007229,3.111332],[-0.396696,8.963432,-0.706202],[2.446707,2.740617,3.321433],[-4.803209,5.884634,2.603672],[-2.652003,1.6541,1.5078],[3.932327,3.972874,0.831924],[2.135906,0.955587,2.986608],[2.486131,2.053802,3.124115],[-0.386706,8.115753,-0.37565],[-2.720727,7.325044,2.224878],[-1.396946,7.638016,-0.16486],[-0.62083,7.989771,-0.144413],[-2.653272,5.729684,2.667679],[3.038188,4.65835,2.364142],[2.381721,0.739472,2.788992],[-2.345829,5.474929,2.380633],[-2.518983,6.080562,2.479383],[-2.615793,6.839622,2.186116],[-2.286566,0.143752,2.766848],[-4.771219,6.508766,1.070797],[3.717308,2.905019,2.097994],[2.50521,3.016743,3.295898],[2.208448,1.56029,3.216806],[3.346783,1.01254,2.119951],[2.653503,3.26122,3.175738],[-2.359636,5.827519,2.402297],[-1.952693,0.558102,2.853307],[-0.321562,9.414885,-1.187501],[3.138923,1.405072,2.520765],[1.493728,1.780051,3.621969],[3.01817,0.907291,2.336909],[3.183548,1.185297,2.352175],[1.608619,5.006753,2.695131],[-4.723919,6.836107,1.095288],[-1.017586,8.865429,-0.149328],[4.730762,1.214014,0.64008],[-2.135182,6.647907,1.495471],[-2.420382,6.546114,2.108209],[-2.458053,7.186346,1.896623],[3.437124,0.275798,1.138203],[0.095925,8.725832,-0.926481],[2.417376,2.429869,3.287659],[2.279951,1.200317,3.049994],[2.674753,2.326926,3.044059],[-2.328123,6.849164,1.75751],[-3.418616,7.853407,0.126248],[-3.151587,7.77543,-0.110889],[2.349144,5.653242,2.05869],[-2.273236,6.085631,2.242888],[-4.560601,4.525342,1.261241],[2.866334,3.796067,2.934717],[-2.17493,6.505518,1.791367],[3.12059,3.283157,2.818869],[3.037703,3.562356,2.866653],[0.066233,9.488418,-1.248237],[2.749941,0.975018,2.573371],[-2.155749,5.801033,2.204009],[-2.162778,6.261889,2.028596],[1.936874,0.459142,2.956718],[3.176249,4.335541,2.440447],[4.356599,1.029423,1.700589],[3.873502,3.082678,1.80431],[2.895489,4.243034,2.735259],[-0.095774,9.468195,-1.07451],[-1.124982,7.886808,-0.480851],[3.032304,3.065454,2.897927],[3.692687,4.5961,0.957858],[-3.013045,3.807235,-1.098381],[-0.790012,8.92912,-0.367572],[1.905793,0.73179,2.996728],[3.530396,3.426233,2.356583],[2.12299,0.624933,2.929167],[-2.069196,6.039284,2.01251],[-3.565623,7.182525,2.850039],[2.959264,2.376337,2.829242],[2.949071,1.822483,2.793933],[4.036142,0.763803,1.703744],[-1.993527,6.180318,1.804936],[-0.030987,0.766389,3.344766],[-0.549683,8.225193,-0.189341],[-0.765469,8.272246,-0.127174],[-2.947047,7.541648,-0.414113],[-3.050327,9.10114,-3.435619],[3.488566,2.231807,2.399836],[3.352283,4.727851,1.946438],[4.741011,2.162773,1.499574],[-1.815093,6.072079,1.580722],[-3.720969,8.267927,-0.984713],[1.932826,3.714052,3.427488],[3.323617,4.438961,2.20732],[0.254111,9.26364,-1.373244],[-1.493384,7.868585,-0.450051],[-0.841901,0.776135,-1.619467],[0.243537,6.027668,0.091687],[0.303057,0.313022,-0.531105],[-0.435273,0.474098,3.481552],[2.121507,2.622389,3.486293],[1.96194,1.101753,3.159584],[3.937991,3.407551,1.551392],[0.070906,0.295753,1.377185],[-1.93588,7.631764,0.651674],[-2.523531,0.744818,-0.30985],[2.891496,3.319875,2.983079],[4.781765,1.547061,1.523129],[-2.256064,7.571251,0.973716],[3.244861,3.058249,2.724392],[-0.145855,0.437775,3.433662],[1.586296,5.658538,2.358487],[3.658336,3.774921,2.071837],[2.840463,4.817098,2.46376],[-1.219464,8.122542,-0.672808],[-2.520906,2.664486,-1.034346],[-1.315417,8.471365,-0.709557],[3.429165,3.74686,2.446169],[3.074579,3.840758,2.767409],[3.569443,3.166337,2.333647],[2.294337,3.280051,3.359346],[2.21816,3.66578,3.269222],[2.158662,4.151444,-1.357919],[1.13862,4.380986,-1.404565],[3.388382,2.749931,-0.840949],[3.059892,5.084848,2.026066],[3.204739,2.075145,2.640706],[3.387065,1.42617,2.305275],[3.910398,2.670742,1.750179],[3.471512,1.945821,2.395881],[4.08082,1.070654,1.960171],[-1.057861,0.133036,2.146707],[-0.151749,5.53551,-0.624323],[3.233099,4.003778,2.571172],[2.611726,5.319199,-0.499388],[2.682909,1.094499,-1.206247],[-1.22823,7.656887,0.041409],[-2.293247,7.259189,0.013844],[0.081315,0.202174,3.286381],[-1.002038,5.794454,-0.187194],[3.448856,4.08091,2.258325],[0.287883,9.006888,-1.550641],[-3.851019,4.059839,-0.646922],[3.610966,4.205438,1.913129],[2.239042,2.950872,3.449959],[0.216305,0.442843,3.328052],[1.87141,2.470745,3.574559],[3.811378,2.768718,-0.228364],[2.511081,1.362724,2.969349],[-1.59813,7.866506,0.440184],[-3.307975,2.851072,-0.894978],[-0.107011,8.90573,-0.884399],[-3.855315,2.842597,-0.434541],[2.517853,1.090768,2.799687],[3.791709,2.36685,2.002703],[4.06294,2.773922,0.452723],[-2.973289,7.61703,-0.623653],[-2.95509,8.924462,-3.446319],[2.861402,0.562592,2.184397],[-1.109725,8.594206,-0.076812],[-0.725722,7.924485,-0.381133],[-1.485587,1.329994,-0.654405],[-4.342113,3.233735,1.752922],[-2.968049,7.955519,-2.09405],[-3.130948,0.446196,0.85287],[-4.958475,5.757329,1.447055],[-3.086547,7.615193,-1.953168],[-3.751923,5.412821,3.373373],[-4.599645,7.480953,1.677134],[1.133992,0.274871,0.032249],[-2.956512,8.126905,-1.785461],[-0.960645,4.73065,-1.191786],[-2.871064,0.875559,0.424881],[-4.932114,5.99614,1.483845],[-2.981761,8.124612,-1.387276],[0.362298,8.978545,-1.368024],[-4.408375,3.046271,0.602373],[2.865841,2.322263,-1.344625],[-4.7848,5.620895,0.594432],[-2.88322,0.338931,1.67231],[-4.688101,6.772931,1.872318],[-4.903948,6.164698,1.27135],[2.85663,1.005647,-0.906843],[2.691286,0.209811,0.050512],[-4.693636,6.477556,0.665796],[-4.472331,6.861067,0.477318],[0.883065,0.204907,3.073933],[-0.995867,8.048729,-0.653897],[-0.794663,5.670397,-0.390119],[3.313153,1.638006,-0.722289],[-4.856459,5.394758,1.032591],[-3.005448,7.783023,-0.819641],[3.11891,2.036974,-1.08689],[-2.364319,2.408419,2.63419],[-2.927132,8.75435,-3.537159],[-3.296222,7.964629,-3.134625],[-1.642041,4.13417,-1.301665],[2.030759,0.176372,-1.030923],[-4.559069,3.751053,0.548453],[3.438385,4.59454,-0.243215],[-2.561769,7.93935,0.177696],[2.990593,1.335314,-0.943177],[1.2808,0.276396,-0.49072],[-0.318889,0.290684,0.211143],[3.54614,3.342635,-0.767878],[-3.073372,7.780018,-2.357807],[-4.455388,4.387245,0.361038],[-4.659393,6.276064,2.767014],[0.636799,4.482223,-1.426284],[-2.987681,8.072969,-2.45245],[-2.610445,0.763554,1.792054],[3.358241,2.006707,-0.802973],[-0.498347,0.251594,0.962885],[3.1322,0.683312,2.038777],[-4.389801,7.493776,0.690247],[0.431467,4.22119,-1.614215],[-4.376181,3.213141,0.273255],[-4.872319,5.715645,0.829714],[-4.826893,6.195334,0.849912],[3.516562,2.23732,-0.677597],[3.131656,1.698841,-0.975761],[-4.754925,5.411666,1.989303],[-2.987299,7.320765,-0.629479],[-3.757635,3.274862,-0.744022],[3.487044,2.541999,-0.699933],[-4.53274,4.649505,0.77093],[-1.424192,0.099423,2.633327],[3.090867,2.476975,-1.146957],[-2.713256,0.815622,2.17311],[3.348121,3.254167,-0.984896],[-3.031379,0.16453,-0.309937],[-0.949757,4.518137,-1.309172],[-0.889509,0.095256,1.288803],[3.539594,1.966105,-0.553965],[-4.60612,7.127749,0.811958],[-2.332953,1.444713,1.624548],[3.136293,2.95805,-1.138272],[3.540808,3.069058,-0.735285],[3.678852,2.362375,-0.452543],[-4.648898,7.37438,0.954791],[-0.646871,0.19037,3.344746],[2.2825,0.29343,-0.826273],[-4.422291,7.183959,0.557517],[-4.694668,5.246103,2.541768],[-4.583691,4.145486,0.600207],[-2.934854,7.912513,-1.539269],[-3.067861,7.817472,-0.546501],[3.825095,3.229512,-0.237547],[2.532494,0.323059,2.387105],[-2.514583,0.692857,1.23597],[-4.736805,7.214384,1.259421],[-2.98071,8.409903,-2.468199],[2.621468,1.385844,-1.406355],[3.811447,3.560855,1.847828],[3.432925,1.497205,-0.489784],[3.746609,3.631538,-0.39067],[3.594909,2.832257,-0.576012],[-0.404192,5.300188,-0.856561],[-4.762996,6.483774,1.702648],[-4.756612,6.786223,1.43682],[-2.965309,8.437217,-2.785495],[2.863867,0.74087,-0.429684],[4.02503,2.968753,1.392419],[3.669036,1.833858,-0.304971],[-2.888864,0.720537,0.778057],[-2.36982,0.979443,1.054447],[-2.959259,8.222303,-2.659724],[-3.467825,7.545739,-2.333445],[2.153426,0.446256,-1.20523],[-3.229807,9.189699,-3.596609],[-3.72486,8.773707,-2.046671],[3.687218,3.297751,-0.523746],[1.381025,0.08815,-1.185668],[-2.796828,7.205622,-0.208783],[3.647194,4.066232,-0.291507],[-4.578376,3.885556,1.52546],[-2.840262,0.63094,1.89499],[-2.429514,0.922118,1.820781],[-4.675079,6.573925,2.423363],[2.806207,4.320188,-1.027372],[-1.289608,0.097241,1.321661],[-3.010731,8.141334,-2.866148],[3.202291,1.235617,-0.549025],[4.094792,2.477519,0.304581],[2.948403,0.966873,-0.664857],[-4.83297,5.920587,2.095461],[-2.169693,7.257277,0.946184],[-1.335807,3.057597,-1.303166],[-1.037877,0.64151,-1.685271],[2.627919,0.089814,0.439074],[3.815794,3.808102,1.730493],[-2.973455,8.433141,-3.08872],[-2.391558,7.331428,1.658264],[-4.333107,4.529978,1.850516],[-4.640293,3.767107,1.168841],[3.600716,4.46931,1.734024],[3.880803,1.730158,-0.172736],[3.814183,4.262372,1.167042],[4.37325,0.829542,1.413729],[2.490447,5.75111,0.011492],[3.460003,4.962436,1.188971],[3.918419,3.814234,1.358271],[-0.807595,8.840504,-0.953711],[3.752855,4.20577,1.57177],[-2.991085,8.816501,-3.244595],[-2.333196,7.128889,1.551985],[3.977718,3.570941,1.25937],[4.360071,0.755579,1.079916],[4.637579,1.027973,1.032567],[-2.317,7.421066,1.329589],[-1.013404,8.293662,-0.7823],[4.548023,1.020644,1.420462],[4.763258,1.266798,1.296203],[4.896,2.073084,1.255213],[4.015005,3.325226,1.093879],[4.94885,1.860936,0.894463],[-2.189645,6.954634,1.270077],[4.887442,1.720992,1.288526],[-3.184068,7.871802,0.956189],[-1.274318,0.839887,-1.224389],[-2.919521,7.84432,0.541629],[-2.994586,7.766102,1.96867],[-3.417504,9.241714,-3.093201],[-3.174563,7.466456,2.473617],[-3.263067,9.069412,-3.003459],[-2.841592,0.529833,2.693434],[-3.611069,9.158804,-2.829871],[-4.642828,5.927526,0.320549],[-3.809308,9.051035,-2.692749],[-2.837582,7.487987,-0.106206],[4.773025,2.330442,1.213899],[4.897435,2.209906,0.966657],[-3.067637,8.164062,-1.12661],[-3.122129,8.08074,-0.899194],[4.571019,2.358113,1.462054],[4.584884,2.454418,0.709466],[-3.661093,7.146581,-0.475948],[4.735131,2.415859,0.933939],[4.207556,2.540018,1.218293],[-3.607595,7.89161,-0.121172],[-1.527952,0.775564,-1.061903],[4.53874,2.503273,1.099583],[-3.938837,7.587988,0.082449],[-4.853582,6.152409,1.787943],[-4.752214,6.247234,2.296873],[4.602935,2.363955,0.488901],[-1.81638,6.365879,0.868272],[0.595467,4.744074,-1.32483],[1.87635,3.511986,-1.842924],[4.330947,2.534326,0.720503],[4.108736,2.750805,0.904552],[-1.890939,8.492628,-0.290768],[-3.504309,6.173058,-0.422804],[-1.611992,6.196732,0.648736],[-3.899149,7.826123,1.088845],[-3.078303,3.008813,-1.035784],[-2.798999,7.844899,1.340061],[-1.248839,5.959105,0.041761],[0.767779,4.337318,3.090817],[-3.831177,7.515605,2.432261],[-1.667528,6.156208,0.365267],[-1.726078,6.237384,1.100059],[-3.972037,4.520832,-0.370756],[-4.40449,7.636357,1.520425],[-1.34506,6.004054,1.293159],[-1.233556,6.049933,0.500651],[-3.696869,7.79732,0.37979],[-3.307798,8.949964,-2.698113],[-1.997295,6.615056,1.103691],[-3.219222,8.336394,-1.150614],[-3.452623,8.31866,-0.9417],[-3.94641,2.990494,2.212592],[-3.250025,8.030414,-0.596097],[-2.02375,1.571333,2.397939],[-3.190358,7.665013,2.268183],[-2.811918,7.618526,2.145587],[-1.005265,5.892303,0.072158],[-0.93721,5.974148,0.906669],[-4.646072,7.492193,1.45312],[-0.252931,1.797654,3.140638],[-1.076064,5.738433,1.695953],[-3.980534,7.744391,1.735791],[-0.721187,5.939396,0.526032],[-0.42818,5.919755,0.229001],[-1.43429,6.11622,0.93863],[-0.985638,5.939683,0.290636],[-4.433836,7.461372,1.966437],[-3.696398,7.844859,1.547325],[-3.390772,7.820186,1.812204],[-2.916787,7.864019,0.804341],[-3.715952,8.037269,-0.591341],[-4.204634,7.72919,1.119866],[-4.592233,5.592883,0.246264],[3.307299,5.061701,1.622917],[-3.515159,7.601467,2.368914],[-3.435742,8.533457,-1.37916],[-0.269421,4.545635,-1.366445],[-2.542124,3.768736,-1.258512],[-3.034003,7.873773,1.256854],[-2.801399,7.856028,1.080137],[3.29354,5.220894,1.081767],[-2.35109,1.299486,1.01206],[-3.232213,7.768136,2.047563],[3.290415,5.217525,0.68019],[-3.415109,7.731034,2.144326],[3.440357,4.962463,0.373387],[3.147346,5.352121,1.386923],[2.847252,5.469051,1.831981],[3.137682,5.410222,1.050188],[3.102694,5.310456,1.676434],[-3.044601,0.39515,1.994084],[2.903647,5.561338,1.518598],[-3.810148,8.093598,-0.889131],[4.234835,0.803054,1.593271],[3.240165,5.228747,0.325955],[3.037452,5.509825,0.817137],[2.635031,5.795187,1.439724],[3.071607,5.318303,0.080142],[2.909167,5.611751,1.155874],[3.044889,5.465928,0.486566],[2.502256,5.770673,1.740054],[-0.067497,0.086416,-1.190239],[2.33326,5.906051,0.138295],[0.65096,4.205423,3.308767],[-2.671137,7.936535,0.432731],[2.14463,5.879214,1.866047],[-4.776469,5.890689,0.561986],[2.72432,5.655145,0.211951],[2.730488,5.751455,0.695894],[2.572682,5.869295,1.152663],[1.906776,5.739123,2.196551],[2.344414,5.999961,0.772922],[-3.377905,7.448708,-1.863251],[2.285149,5.968156,1.459258],[2.385989,5.928974,0.3689],[2.192111,6.087516,0.959901],[2.36372,6.001101,1.074346],[1.972022,6.079603,1.591175],[1.87615,5.976698,1.91554],[-3.824761,9.05372,-2.928615],[2.044704,6.129704,1.263111],[-2.583046,0.849537,2.497344],[-0.078825,2.342205,3.520322],[-0.704686,0.537165,3.397194],[-0.257449,3.235334,3.647545],[-0.332064,1.448284,3.022583],[-2.200146,0.898284,-0.447212],[-2.497508,1.745446,1.829167],[0.30702,4.416315,2.978956],[-3.205197,3.479307,-1.040582],[0.110069,9.347725,-1.563686],[-0.82754,0.883886,3.065838],[-2.017103,1.244785,2.42512],[-0.421091,2.309929,3.153898],[-0.491604,3.796072,3.16245],[2.786955,3.501241,-1.340214],[-3.229055,4.380713,-0.899241],[3.730768,0.76845,1.90312],[-0.561079,2.652382,3.152463],[-3.461471,3.086496,2.662505],[-0.661405,3.446009,3.179939],[-0.915351,0.636755,3.243708],[-2.992964,8.915628,-3.729833],[-0.439627,3.502104,3.42665],[-1.154217,0.883181,2.800835],[-1.736193,1.465474,2.595489],[-0.423928,3.24435,3.548277],[-0.511153,2.871046,3.379749],[-0.675722,2.991756,3.143262],[-1.092602,0.599103,3.090639],[-0.89821,2.836952,2.840023],[-2.658412,0.781376,0.960575],[-2.271455,1.222857,1.330478],[-0.877861,1.111222,2.72263],[-0.306959,2.876987,3.556044],[-3.839274,7.84138,-0.918404],[-0.172094,4.083799,3.141708],[-1.548332,0.2529,2.864655],[-0.217353,4.873911,-1.223104],[-3.384242,3.181056,-0.95579],[-2.731704,0.382421,2.895502],[-1.285037,0.551267,2.947675],[0.077224,4.246579,3.066738],[-0.479979,1.77955,2.860011],[-0.716375,1.224694,2.666751],[-0.54622,3.138255,3.393457],[-2.33413,1.821222,2.124883],[-0.50653,2.037147,2.897465],[2.451291,1.211389,-1.466589],[-3.160047,2.894081,2.724286],[-4.137258,5.433431,3.21201],[0.462896,0.320456,-0.174837],[-0.37458,2.609447,3.379253],[-3.095244,0.256205,2.196446],[-4.197985,5.732991,3.262924],[-0.729747,0.246036,0.497036],[-2.356189,5.062,-0.965619],[-1.609036,0.25962,-1.487367],[-4.074381,6.074061,3.409459],[-3.619304,4.0022,2.65705],[-0.543393,8.742896,-1.056622],[-4.30356,6.858934,2.879642],[-0.716688,2.901831,-2.11202],[1.547362,0.083189,1.138764],[-0.250916,0.275268,1.201344],[-3.778035,3.13624,2.466177],[-4.594316,5.771342,3.01694],[-3.717706,3.442887,2.603344],[-4.311163,5.224669,3.019373],[-0.610389,2.095161,-1.923515],[-3.040086,6.196918,-0.429149],[-3.802695,3.768247,2.545523],[-0.159541,2.043362,3.328549],[-3.744329,4.31785,2.491889],[-3.047939,0.214155,1.873639],[-4.41685,6.113058,3.166774],[-1.165133,0.460692,-1.742134],[-1.371289,4.249996,-1.317935],[-3.447883,0.3521,0.466205],[-4.495555,6.465548,2.944147],[-3.455335,0.171653,0.390816],[-3.964028,4.017196,2.376009],[-1.323595,1.763126,-0.750772],[-3.971142,5.277524,-0.19496],[-3.222052,0.237723,0.872229],[-4.403784,3.89107,1.872077],[-3.333311,0.342997,0.661016],[-4.495871,4.29606,1.63608],[-3.636081,2.760711,2.361949],[-4.487235,3.559608,1.66737],[-4.719787,7.26888,1.658722],[-1.086143,9.035741,-0.707144],[-2.339693,1.600485,-0.404817],[-4.642011,7.123829,1.990987],[-1.498077,3.854035,-1.369787],[-4.188372,4.729363,2.02983],[-3.116344,5.882284,-0.468884],[-4.305236,4.246417,1.976991],[-3.022509,0.22819,1.065688],[-2.799916,0.52022,1.128319],[-4.262823,3.534409,2.020383],[-4.221533,3.947676,2.11735],[-3.744353,4.391712,-0.6193],[-1.272905,0.156694,-1.741753],[-3.62491,2.669825,-0.549664],[-4.180756,3.096179,1.987215],[-4.059276,4.305313,2.232924],[-2.812753,0.183226,1.370267],[-4.032437,3.512234,2.309985],[-0.03787,0.28188,0.530391],[-4.711562,5.468653,2.822838],[-4.500636,6.953314,2.564445],[-4.479433,7.216991,2.270682],[3.990562,0.50522,0.716309],[-2.512229,6.863447,-0.100658],[-2.968058,6.956639,-0.37061],[2.550375,3.142683,-1.54068],[-2.320059,3.521605,-1.279397],[-4.556319,6.64662,2.745363],[-4.281091,7.108116,2.667598],[-2.050095,8.411689,0.121353],[-2.44854,1.135487,0.851875],[3.121815,0.699943,-0.277167],[-4.69877,6.00376,2.843035],[-1.360599,8.824742,-0.595597],[1.128437,0.171611,0.301691],[-4.360146,6.289423,0.042233],[1.400795,4.088829,-1.620409],[-3.193462,8.460137,-3.559446],[-3.168771,8.878431,-3.635795],[-3.434275,9.304302,-3.460878],[-3.349993,8.808093,-3.38179],[-3.304823,8.323865,-3.325905],[-3.572607,9.308843,-3.207672],[-3.166393,8.201215,-3.43014],[-3.451638,9.05331,-3.351345],[-3.309591,8.549758,-3.375055],[-3.527992,8.793926,-3.100376],[-3.6287,8.981677,-3.076319],[-3.445505,8.001887,-2.8273],[-3.408011,8.221014,-3.039237],[-3.65928,8.740382,-2.808856],[-3.878019,8.797295,-2.462866],[-3.515132,8.232341,-2.747739],[-3.460331,8.51524,-3.06818],[-3.403703,7.658628,-2.648789],[-3.507113,8.00159,-2.582275],[-3.607373,8.174737,-2.401723],[-3.749043,8.378084,-2.226959],[-3.648514,8.502213,-2.6138],[-2.534199,0.904753,2.021148],[1.4083,5.744252,-0.571402],[-3.852536,8.571009,-2.352358],[2.868255,5.373126,-0.163705],[2.224363,4.669891,-1.061586],[-4.528281,4.885838,1.340274],[1.30817,4.609629,-1.28762],[-4.519698,3.422501,1.354826],[-3.549955,7.783228,-2.332859],[1.12313,6.120856,0.045115],[-3.620324,7.57716,-2.033423],[-0.798833,2.624133,-1.992682],[-3.617587,7.783148,-2.051383],[-3.669293,8.103776,-2.10227],[-3.892417,8.667436,-2.167288],[-0.537435,0.285345,-0.176267],[-0.841522,3.299866,-1.887861],[-0.761547,3.647082,-1.798953],[-3.661544,7.85708,-1.867924],[-3.886763,8.551783,-1.889171],[-0.591244,1.549749,-1.714784],[-0.775276,1.908218,-1.597609],[-0.961458,2.573273,-1.695549],[-2.215672,1.335009,2.143031],[-4.622674,4.130242,1.220683],[1.07344,0.290099,1.584734],[-0.976906,2.92171,-1.76667],[-1.13696,3.194401,-1.513455],[-3.743262,7.99949,-1.629286],[-2.876359,4.900986,-0.879556],[0.550835,3.905557,-2.031372],[0.777647,4.992314,-1.215703],[1.445881,4.266201,-1.414663],[1.274222,5.510543,-0.824495],[-0.864685,2.318581,-1.702389],[-0.627458,3.820722,-1.743153],[-3.867699,8.30866,-1.850066],[1.635287,5.45587,-0.83844],[-1.037876,2.538589,-1.513504],[-4.38993,4.73926,1.699639],[0.048709,4.765232,-1.279506],[-0.626548,1.339887,-1.595114],[-3.682827,7.643453,-1.723398],[-3.868783,8.180191,-1.511743],[-0.76988,1.508373,-1.419599],[-1.138374,2.766765,-1.448163],[1.699883,5.780752,-0.475361],[1.214305,0.308517,1.866405],[-1.713642,0.373461,-1.265204],[-1.582388,0.58294,-1.267977],[-0.879549,1.821581,-1.313787],[0.519057,5.858757,-0.381397],[-3.770989,2.449208,-0.132655],[0.087576,0.156713,-1.53616],[-0.942622,2.146534,-1.421494],[-1.026192,1.022164,-1.145423],[-0.964079,1.645473,-1.067631],[-1.109128,2.458789,-1.29106],[-1.037478,0.209489,-1.805424],[-3.724391,7.599686,-1.273458],[-3.787898,7.951792,-1.304794],[3.821677,2.165581,-0.181535],[-2.39467,0.304606,-0.570375],[-2.352928,1.0439,2.079369],[-0.288899,9.640684,-1.006079],[-3.472118,7.263001,-1.080326],[-1.240769,0.972352,-0.976446],[-1.845253,0.356801,-0.995574],[-2.32279,7.915361,-0.057477],[-1.08092,2.179315,-1.168821],[4.598833,2.156768,0.280264],[-4.725417,6.442373,2.056809],[-0.490347,9.46429,-0.981092],[-1.99652,0.09737,-0.765828],[-1.137793,1.888846,-0.894165],[-0.37247,4.29661,-1.465199],[-0.184631,5.692946,-0.421398],[-3.751694,7.742231,-1.086908],[-1.001416,1.298225,-0.904674],[-3.536884,7.190777,-0.788609],[-3.737597,7.511281,-0.940052],[-1.766651,0.669388,-0.873054],[3.112245,3.474345,-1.129672],[-0.175504,3.81298,-2.0479],[-3.766762,7.412514,-0.681569],[-0.63375,9.439424,-0.785128],[-0.518199,4.768982,-1.258625],[0.790619,4.212759,-1.610218],[-3.761951,3.742528,-0.756283],[0.897483,5.679808,-0.612423],[2.221126,4.427468,-1.252155],[-0.728577,5.846457,0.062702],[0.194451,9.503908,-1.482461],[-0.099243,9.385459,-1.39564],[0.643185,3.636855,-2.180247],[0.894522,5.900601,-0.356935],[2.595516,4.75731,-0.893245],[1.108497,3.936893,-1.905098],[1.989894,5.789726,-0.343268],[-3.802345,7.655508,-0.613817],[2.339353,4.96257,-0.90308],[0.12564,4.013324,-1.879236],[-4.078965,3.683254,-0.445439],[2.092899,5.256128,-0.831607],[0.427571,0.291769,1.272964],[2.335549,3.480056,-1.581949],[-0.15687,0.324827,-1.648922],[-0.536522,5.760786,-0.203535],[1.507082,0.078251,-0.923109],[-1.854742,0.134826,2.698774],[-3.939827,3.168498,-0.526144],[-3.98461,3.39869,-0.533212],[-3.961738,4.217132,-0.489147],[4.273789,2.181164,0.153786],[-0.470498,5.645664,-0.439079],[-0.414539,5.488017,-0.673379],[-0.097462,5.062739,-1.114863],[1.198092,5.882232,-0.391699],[2.855834,5.085022,-0.498678],[1.037998,4.129757,-1.701811],[1.728091,5.068444,-1.063761],[-3.832258,2.625141,-0.311384],[-4.078526,3.070256,-0.284362],[-4.080365,3.954243,-0.440471],[-0.152578,5.276267,-0.929815],[-1.489635,8.928082,-0.295891],[0.759294,5.15585,-1.087374],[-4.000338,2.801647,-0.235135],[-4.290801,3.823209,-0.19374],[-4.221493,4.25618,-0.189894],[-4.066195,4.71916,-0.201724],[-0.155386,4.076396,-1.662865],[3.054571,4.414305,-0.825985],[-1.652919,8.726499,-0.388504],[-3.042753,0.560068,-0.126425],[-2.434456,1.118088,-0.213563],[-2.623502,1.845062,-0.283697],[-4.233371,3.43941,-0.202918],[2.726702,3.82071,-1.280097],[0.184199,4.14639,-1.673653],[-1.289203,0.624562,-1.560929],[-3.823676,7.382458,-0.407223],[0.476667,5.064419,-1.143742],[-3.873651,4.955112,-0.269389],[1.349666,5.312227,-1.000274],[-2.043776,8.434488,-0.108891],[-2.763964,0.733395,-0.129294],[-4.380505,3.664409,-0.024546],[-0.71211,5.341811,-0.803281],[-3.960858,7.183112,-0.118407],[-3.822277,7.712853,-0.263221],[-2.346808,8.108588,0.063244],[-1.841731,8.642999,-0.142496],[-2.600055,0.985604,-0.043595],[-3.513057,2.213243,-0.044151],[-3.963492,2.603055,-0.080898],[-4.258066,3.14537,-0.027046],[-4.261572,5.00334,0.13004],[0.795464,3.99873,-1.905688],[-3.300873,0.384761,0.013271],[-2.770244,0.881942,0.077313],[-3.456227,1.993871,0.301054],[-4.441987,3.914144,0.177867],[-4.367075,6.611414,0.165312],[-3.201767,0.576292,0.105769],[-3.174354,0.645009,0.440373],[-2.996576,0.74262,0.161325],[-2.724979,1.656497,0.092983],[-3.261757,2.017742,-0.070763],[-4.280173,4.518235,-0.002999],[-4.471073,5.945358,0.05202],[-3.877137,2.40743,0.274928],[-4.371219,4.252758,0.078039],[-3.400914,0.40983,0.238599],[-4.44293,3.523242,0.146339],[-4.574528,5.279761,0.353923],[-4.226643,7.191282,0.269256],[-4.16361,2.843204,0.097727],[-4.528506,5.011661,0.536625],[0.35514,5.664802,-0.572814],[2.508711,5.580976,-0.266636],[2.556226,3.633779,-1.426362],[1.878456,4.533714,-1.223744],[2.460709,4.440241,-1.1395],[2.218589,5.514603,-0.560066],[2.263712,5.737023,-0.250694],[2.964981,3.814858,-1.139927],[0.991384,5.304131,-0.999867],[2.81187,4.547292,-0.916025],[2.918089,4.768382,-0.702808],[3.262403,4.414286,-0.657935],[0.652136,6.089113,0.069089],[3.361389,3.5052,-0.946123],[2.613042,5.037192,-0.697153],[0.094339,4.36858,-1.451238],[3.290862,4.155716,-0.732318],[2.658063,4.073614,-1.217455],[3.260349,3.753257,-0.946819],[1.124268,4.862463,-1.207855],[3.35158,4.899247,-0.027586],[3.194057,4.691257,-0.524566],[3.090119,5.116085,-0.23255],[2.418965,3.811753,-1.419399],[2.191789,3.877038,-1.47023],[4.043166,2.034188,0.015477],[-1.026966,0.86766,-1.410912],[1.937563,3.860005,-1.617465],[2.98904,4.101806,-0.998132],[-0.142611,5.865305,-0.100872],[3.972673,2.292069,0.089463],[3.23349,3.959925,-0.849829],[0.16304,5.857276,-0.216704],[4.122964,1.770061,-0.114906],[2.099057,4.978374,-0.98449],[3.502411,3.76181,-0.667502],[2.079484,5.939614,-0.036205],[-0.084568,3.525193,-2.253506],[0.423859,4.06095,-1.845327],[1.6013,6.006466,-0.153429],[0.271701,3.844964,-2.078748],[0.273577,5.218904,-0.994711],[-0.410578,3.92165,-1.773635],[1.941954,5.60041,-0.621569],[0.100825,5.462131,-0.774256],[-0.53016,3.619892,-2.027451],[-0.822371,5.517453,-0.605747],[-2.474925,7.670892,-0.020174],[4.01571,0.830194,-0.013793],[-0.400092,5.094112,-1.041992],[-2.887284,5.581246,-0.525324],[-1.559841,6.050972,0.079301],[-0.469317,3.291673,-2.235211],[0.337397,3.467926,-2.295458],[-2.632074,5.573701,-0.582717],[-0.030318,6.011395,0.276616],[-0.934373,0.388987,-1.780523],[-2.661263,5.844838,-0.425966],[0.549353,5.489646,-0.807268],[-2.194355,6.197491,-0.109322],[-2.289618,5.664813,-0.581098],[1.583583,3.796366,-1.844498],[0.855295,0.215979,-1.425557],[-2.627569,5.300236,-0.767174],[4.333347,2.384332,0.399129],[-1.880401,5.583843,-0.696561],[-2.172346,5.324859,-0.846246],[-2.27058,5.906265,-0.388373],[-1.960049,5.889346,-0.397593],[0.965756,3.67547,-2.105671],[-2.014066,6.431125,0.287254],[-1.776173,5.287097,-0.89091],[-2.025852,5.089562,-0.980218],[-1.886418,6.108358,-0.000667],[-1.600803,5.785347,-0.491069],[-1.66188,4.968053,-1.042535],[-1.600621,5.962818,-0.188044],[-1.588831,5.615418,-0.665456],[4.46901,1.880138,0.057248],[-1.978845,0.927399,-0.554856],[-1.408074,5.325266,-0.83967],[1.923123,4.843955,-1.101389],[-2.87378,0.117106,-0.412735],[-1.222193,5.62638,-0.539981],[-2.632537,0.166349,-0.489218],[-1.370865,5.838832,-0.341026],[-1.067742,5.448874,-0.692701],[-1.073798,5.220878,-0.908779],[-1.147562,4.950417,-1.079727],[-2.789115,4.531047,-1.042713],[-3.550826,4.170487,-0.806058],[-3.331694,4.798177,-0.69568],[-3.689404,4.688543,-0.534317],[-3.511509,5.106246,-0.483632],[1.796344,0.076137,0.080455],[-3.306354,5.473605,-0.478764],[-2.692503,3.346604,-1.20959],[-3.963056,5.187462,3.113156],[-3.901231,6.391477,-0.246984],[4.484234,1.518638,-0.001617],[4.308829,1.657716,-0.119275],[4.290045,1.339528,-0.110626],[-3.514938,3.524974,-0.909109],[-2.1943,2.12163,-0.71966],[4.108206,1.091087,-0.11416],[3.785312,1.392435,-0.28588],[4.092886,1.480476,-0.210655],[-2.965937,6.469006,-0.379085],[-3.708581,2.962974,-0.63979],[-3.297971,2.218917,-0.299872],[3.806949,0.804703,-0.11438],[3.747957,1.059258,-0.273069],[-3.101827,4.111444,-1.006255],[-1.536445,4.658913,-1.195049],[-3.549826,2.450555,-0.375694],[-3.676495,2.108366,0.534323],[-3.674738,5.925075,-0.400011],[-2.250115,2.848335,-1.121174],[-3.698062,5.667567,-0.381396],[3.468966,0.734643,-0.190624],[-3.97972,5.670078,-0.26874],[-3.002087,4.337837,-1.033421],[-3.356392,2.608308,-0.713323],[-1.833016,3.359983,-1.28775],[-1.989069,3.632416,-1.305607],[3.591254,0.542371,0.026146],[3.364927,1.082572,-0.342613],[-3.393759,3.866801,-0.937266],[-4.124865,5.549529,-0.161729],[-4.423423,5.687223,0.000103],[-1.496881,2.601785,-1.114328],[-2.642297,6.496932,-0.264175],[-3.684236,6.819423,-0.320233],[-2.286996,3.167067,-1.246651],[-1.624896,8.44848,-0.530014],[-3.666787,2.159266,0.268149],[-2.402625,2.011243,-0.56446],[-2.736166,2.259839,-0.6943],[-2.168611,3.89078,-1.292206],[-2.065956,3.345708,-1.281346],[-2.778147,2.675605,-0.995706],[-3.507431,4.513272,-0.71829],[-2.301184,4.293911,-1.238182],[3.205808,0.211078,0.394349],[-2.129936,4.870577,-1.080781],[-2.287977,2.496593,-0.934069],[-2.701833,2.931814,-1.114509],[3.294795,0.50631,-0.081062],[-2.552829,7.468771,-0.021541],[3.06721,0.944066,-0.43074],[-2.86086,1.973622,-0.303132],[-3.598818,5.419613,-0.401645],[-1.524381,0.080156,-1.61662],[-1.907291,2.646274,-1.039438],[2.950783,0.407562,-0.105407],[-1.663048,1.655038,-0.689787],[-1.728102,1.110064,-0.635963],[-2.085823,7.686296,-0.159745],[2.883518,3.157009,-1.30858],[-2.724116,0.417169,-0.389719],[-1.788636,7.862672,-0.346413],[-2.186418,1.249609,-0.434583],[-3.092434,2.606657,-0.860002],[-1.737314,3.874201,-1.330986],[2.564522,0.422967,-0.390903],[1.670782,3.538432,-1.924753],[-2.338131,4.02578,-1.286673],[-1.916516,4.054121,-1.301788],[2.87159,2.034949,-1.267139],[-1.931518,3.062883,-1.197227],[-0.816602,0.135682,3.104104],[0.469392,0.213916,-1.489608],[2.574055,1.950091,-1.514427],[2.733595,2.682546,-1.461213],[-1.915407,4.693647,-1.151721],[-3.412883,5.867094,-0.450528],[2.28822,0.120432,-0.04102],[2.244477,0.14424,-0.376933],[-1.676198,3.570698,-1.328031],[-1.821193,4.366982,-1.266271],[-1.552208,8.099221,-0.53262],[-1.727419,2.39097,-0.989456],[-2.468226,4.711663,-1.069766],[-2.451669,6.113319,-0.273788],[2.635447,2.295842,-1.518361],[-2.020809,8.150253,-0.246714],[2.292455,0.805596,-1.3042],[2.641556,1.65665,-1.466962],[2.409062,2.842538,-1.635025],[2.456682,1.459484,-1.57543],[-1.691047,3.173582,-1.247082],[-1.865642,1.957608,-0.768683],[-3.401579,0.20407,0.100932],[2.301981,1.7102,-1.650461],[2.342929,2.611944,-1.690713],[-1.676111,2.923894,-1.17835],[-2.992039,3.547631,-1.118945],[-3.571677,6.504634,-0.375455],[2.141764,1.460869,-1.702464],[-3.221958,5.146049,-0.615632],[2.19238,2.949367,-1.747242],[2.320791,2.232971,-1.706842],[2.088678,2.585235,-1.813159],[-2.196404,0.592218,-0.569709],[-2.120811,1.836483,-0.62338],[-1.949935,2.271249,-0.874128],[2.235901,1.110183,-1.510719],[2.020157,3.241128,-1.803917],[2.054336,1.949394,-1.792332],[-3.094117,4.996595,-0.740238],[2.038063,0.635949,-1.402041],[1.980644,1.684408,-1.76778],[1.587432,3.306542,-1.991131],[1.935322,0.976267,-1.602208],[1.922621,1.235522,-1.698813],[1.712495,1.911874,-1.903234],[1.912802,2.259273,-1.888698],[1.884367,0.355453,-1.312633],[1.676427,0.76283,-1.539455],[1.78453,2.83662,-1.943035],[1.697312,0.120281,-1.150324],[1.648318,2.484973,-1.999505],[-4.051804,5.958472,-0.231731],[-1.964823,1.464607,-0.58115],[1.55996,2.183486,-1.971378],[1.628125,1.045912,-1.707832],[1.701684,1.540428,-1.827156],[1.567475,4.869481,-1.184665],[1.432492,0.843779,-1.648083],[1.173837,2.978983,-2.156687],[1.235287,3.37975,-2.09515],[1.252589,1.525293,-1.949205],[1.159334,2.336379,-2.105361],[1.49061,2.695263,-2.083216],[-4.122486,6.782604,-0.02545],[1.173388,0.279193,-1.423418],[1.505684,0.380815,-1.414395],[1.391423,1.343031,-1.843557],[1.263449,2.73225,-2.144961],[1.295858,0.597122,-1.515628],[1.245851,3.729126,-1.993015],[-2.761439,6.23717,-0.365856],[0.978887,1.664888,-2.046633],[1.219542,0.982729,-1.785486],[1.315915,1.91748,-2.02788],[-3.052746,2.127222,-0.369082],[0.977656,1.36223,-1.944119],[0.936122,3.39447,-2.203007],[-2.740036,4.184702,-1.122849],[0.853581,2.864694,-2.260847],[0.719569,0.818762,-1.763618],[0.839115,1.159359,-1.907943],[0.932069,1.94559,-2.117962],[0.579321,3.326747,-2.299369],[0.86324,0.597822,-1.565106],[0.574567,1.158452,-1.943123],[0.525138,2.137252,-2.213867],[0.779941,2.342019,-2.206157],[0.915255,2.618102,-2.209041],[0.526426,3.02241,-2.321826],[0.495431,2.521396,-2.295905],[0.80799,3.156817,-2.286432],[0.273556,1.304936,-2.012509],[0.664326,1.530024,-2.048722],[0.219173,2.32907,-2.323212],[0.405324,0.695359,-1.704884],[0.398827,0.946649,-1.843899],[0.345109,1.608829,-2.100174],[-2.356743,0.062032,-0.4947],[-3.001084,0.27146,2.560034],[-2.064663,0.303055,-0.697324],[0.221271,3.174023,-2.374399],[0.195842,0.437865,-1.621473],[-0.385613,0.297763,1.960096],[1.999609,0.108928,-0.79125],[0.351698,9.227494,-1.57565],[0.021477,2.191913,-2.309353],[0.246381,2.836575,-2.356365],[1.543281,0.237539,1.901906],[0.031881,9.147022,-1.454203],[-0.001881,1.648503,-2.108044],[0.333423,1.907088,-2.204533],[0.044063,2.634032,-2.368412],[-0.028148,3.053684,-2.390082],[0.02413,3.34297,-2.36544],[-0.272645,9.02879,-1.238685],[-0.006348,0.832044,-1.758222],[-0.321105,1.458754,-1.886313],[-0.153948,8.618809,-1.105353],[-0.409303,1.137783,-1.720556],[-0.410054,1.742789,-1.957989],[-0.287905,2.380404,-2.294509],[-0.261375,2.646629,-2.356322],[-0.221986,3.215303,-2.345844],[-0.31608,0.687581,-1.71901],[-0.537705,0.855802,-1.648585],[-0.142834,1.193053,-1.87371],[-0.24371,2.044435,-2.176958],[-0.437999,2.959748,-2.299698],[-0.78895,0.176226,-1.729046],[-0.608509,0.546932,-1.734032],[-0.693698,4.478782,-1.369372],[-0.669153,8.469645,-0.911149],[-0.741857,1.082705,-1.458474],[-0.554059,2.440325,-2.141785],[2.09261,0.153182,2.57581],[1.792547,0.111794,2.563777],[1.855787,0.189541,2.835089],[1.492601,0.232246,2.987681],[-0.284918,0.236687,3.429738],[2.604841,0.11997,1.01506],[0.331271,0.168113,3.124031],[0.280606,0.308368,2.495937],[0.544591,0.325711,2.081274],[0.193145,0.19154,-0.977556],[3.810099,0.42324,1.032202],[3.54622,0.379245,1.392814],[0.61402,0.276328,0.849356],[-1.198628,0.144953,2.911457],[4.17199,0.68037,1.391526],[0.88279,0.321339,2.059129],[1.93035,0.109992,2.054154],[1.620331,0.121986,2.37203],[2.374812,0.10921,1.734876],[-0.031227,0.294412,2.593687],[4.075018,0.561914,1.038065],[-0.570366,0.126583,2.975558],[0.950052,0.318463,1.804012],[1.130034,0.117125,0.98385],[2.123049,0.08946,1.665911],[2.087572,0.068621,0.335013],[2.927337,0.167117,0.289611],[0.528876,0.313434,3.205969],[1.174911,0.162744,1.328262],[-4.88844,5.59535,1.661134],[-4.709607,5.165338,1.324082],[0.871199,0.277021,1.263831],[-3.910877,2.349318,1.272269],[1.56824,0.118605,2.768112],[1.179176,0.152617,-0.858003],[1.634629,0.247872,2.128625],[-4.627425,5.126935,1.617836],[3.845542,0.54907,1.45601],[2.654006,0.165508,1.637169],[-0.678324,0.26488,1.974741],[2.451139,0.100377,0.213768],[0.633199,0.286719,0.403357],[-0.533042,0.2524,1.373267],[0.99317,0.171106,0.624966],[-0.100063,0.306466,2.170225],[1.245943,0.092351,0.661031],[1.390414,0.198996,-0.0864],[-4.457265,5.030531,2.138242],[2.89776,0.146575,1.297468],[1.802703,0.088824,-0.490405],[1.055447,0.309261,2.392437],[2.300436,0.142429,2.104254],[2.33399,0.187756,2.416935],[2.325183,0.134349,0.574063],[2.410924,0.370971,2.637115],[1.132924,0.290511,3.061],[1.764028,0.070212,-0.80535],[2.156994,0.397657,2.844061],[0.920711,0.225527,-0.882456],[-4.552135,5.24096,2.85514],[0.210016,0.309396,2.064296],[0.612067,0.136815,-1.086002],[3.150236,0.426757,1.802703],[-0.24824,0.282258,1.470997],[0.974269,0.301311,-0.640898],[-4.401413,5.03966,2.535553],[0.644319,0.274006,-0.817806],[0.332922,0.309077,0.108474],[3.610001,0.317447,0.689353],[3.335681,0.358195,0.118477],[0.623544,0.318983,-0.4193],[-0.11012,0.307747,1.831331],[-0.407528,0.291044,2.282935],[0.069783,0.285095,0.950289],[0.970135,0.310392,-0.283742],[0.840564,0.306898,0.098854],[-0.541827,0.267753,1.683795],[-3.956082,4.55713,2.297164],[-4.161036,2.834481,1.64183],[-4.093952,4.977551,2.747747],[2.661819,0.261867,1.926145],[-3.749926,2.161875,0.895238],[-2.497776,1.3629,0.791855],[0.691482,0.304968,1.582939],[-4.013193,4.830963,2.4769],[-3.639585,2.091265,1.304415],[-3.9767,2.563053,1.6284],[-3.979915,2.788616,1.977977],[0.388782,0.312656,1.709168],[-3.40873,1.877324,0.851652],[-3.671637,5.136974,3.170734],[-3.12964,1.852012,0.157682],[-3.629687,4.852698,2.686837],[-3.196164,1.793459,0.452804],[-3.746338,2.31357,1.648551],[2.992192,0.125251,0.575976],[-3.254051,0.054431,0.314152],[-3.474644,1.925288,1.134116],[-3.418372,2.022882,1.578901],[-2.920955,1.705403,0.29842],[-3.57229,2.152022,1.607572],[-3.251259,0.09013,-0.106174],[-3.299952,1.877781,1.348623],[-3.666819,2.441459,2.004838],[-2.912646,1.824748,-0.045348],[-3.399511,2.479484,2.340393],[-3.009754,0.015286,0.075567],[-3.381443,2.316937,2.156923],[-3.352801,2.133341,1.857366],[-3.01788,1.687685,0.645867],[-2.931857,1.678712,1.158472],[-3.301008,0.08836,0.591001],[1.358025,0.19795,1.599144],[-2.999565,1.845016,1.618396],[-2.767957,0.028397,-0.196436],[-2.93962,2.078779,2.140593],[-3.346648,2.674056,2.518097],[3.324322,0.20822,0.628605],[3.091677,0.137202,0.9345],[-2.881807,0.009952,0.318439],[-2.764946,1.786619,1.693439],[-2.905542,1.932343,1.900002],[-3.140854,2.271384,2.274946],[-2.88995,2.487856,2.574759],[-2.367194,-0.000943,-0.15576],[-3.050738,0.068703,0.742988],[-2.759525,1.55679,0.877782],[-3.151775,2.48054,2.482749],[-2.578618,-0.002885,0.165716],[-2.651618,1.877246,1.981189],[-2.933973,0.133731,1.631023],[1.047628,0.100284,-1.085248],[-1.585123,0.062083,-1.394896],[-2.287917,-0.002671,0.214434],[-2.524899,0.007481,0.471788],[-2.815492,2.188198,2.343294],[-2.095142,-0.003149,-0.094574],[-2.172686,-0.000133,0.47963],[-2.732704,0.074306,1.742079],[-2.49653,2.145668,2.42691],[-1.343683,0.047721,-1.506391],[-2.581185,0.048703,0.975528],[-2.905101,0.083158,2.010052],[-2.601514,2.007801,2.223089],[-2.339464,0.02634,1.484304],[-2.907873,0.10367,2.378149],[-1.368796,0.062516,-1.049125],[-1.93244,0.02443,-0.427603],[-2.705081,0.060513,2.303802],[3.372155,0.206274,0.892293],[-1.761827,0.093202,-1.037404],[-1.700667,0.0397,-0.614221],[-1.872291,0.011979,-0.135753],[-1.929257,0.074005,0.728999],[-2.520128,0.049665,1.99054],[-2.699411,0.10092,2.603116],[3.211701,0.27302,1.423357],[-1.445362,0.1371,-0.626491],[2.921332,0.259112,1.645525],[-0.993242,0.058686,-1.408916],[-0.944986,0.157541,-1.097665],[-2.154301,0.032749,1.882001],[-2.108789,1.988557,2.442673],[-1.015659,0.25497,-0.416665],[-1.898411,0.015872,0.16715],[-1.585517,0.027121,0.453445],[-2.311105,0.061264,2.327061],[-2.637042,0.152224,2.832201],[-2.087515,2.292972,2.617585],[-0.750611,0.056697,-1.504516],[-0.472029,0.075654,-1.360203],[-0.710798,0.139244,-1.183863],[-0.97755,0.26052,-0.831167],[-0.655814,0.260843,-0.880068],[-0.897513,0.275537,-0.133042],[-2.049194,0.084947,2.455422],[-0.177837,0.076362,-1.449009],[-0.553393,0.279083,-0.59573],[-1.788636,0.06163,2.231198],[-0.34761,0.255578,-0.999614],[-1.398589,0.036482,0.65871],[-1.133918,0.05617,0.69473],[-1.43369,0.058226,1.977865],[-2.505459,1.492266,1.19295]]\nexports.cells=[[2,1661,3],[1676,7,6],[712,1694,9],[3,1674,1662],[11,1672,0],[1705,0,1],[5,6,1674],[4,5,1674],[7,8,712],[2,1662,10],[1,10,1705],[11,1690,1672],[1705,11,0],[5,1676,6],[7,9,6],[7,712,9],[2,3,1662],[3,4,1674],[1,2,10],[12,82,1837],[1808,12,1799],[1808,1799,1796],[12,861,82],[861,1808,13],[1808,861,12],[1799,12,1816],[1680,14,1444],[15,17,16],[14,1678,1700],[16,17,1679],[15,1660,17],[14,1084,1678],[15,1708,18],[15,18,1660],[1680,1084,14],[1680,15,1084],[15,1680,1708],[793,813,119],[1076,793,119],[1076,1836,22],[23,19,20],[21,1076,22],[21,22,23],[23,20,21],[1076,119,1836],[806,634,470],[432,1349,806],[251,42,125],[809,1171,791],[953,631,827],[634,1210,1176],[157,1832,1834],[56,219,53],[126,38,83],[37,85,43],[59,1151,1154],[83,75,41],[77,85,138],[201,948,46],[1362,36,37],[452,775,885],[1237,95,104],[966,963,1262],[85,77,43],[36,85,37],[1018,439,1019],[41,225,481],[85,83,127],[93,83,41],[935,972,962],[116,93,100],[98,82,813],[41,75,225],[298,751,54],[1021,415,1018],[77,138,128],[766,823,1347],[593,121,573],[905,885,667],[786,744,747],[100,41,107],[604,334,765],[779,450,825],[968,962,969],[225,365,481],[365,283,196],[161,160,303],[875,399,158],[328,1817,954],[62,61,1079],[358,81,72],[74,211,133],[160,161,138],[91,62,1079],[167,56,1405],[56,167,219],[913,914,48],[344,57,102],[43,77,128],[1075,97,1079],[389,882,887],[219,108,53],[1242,859,120],[604,840,618],[754,87,762],[197,36,1362],[1439,88,1200],[1652,304,89],[81,44,940],[445,463,151],[717,520,92],[129,116,100],[1666,1811,624],[1079,97,91],[62,91,71],[688,898,526],[463,74,133],[278,826,99],[961,372,42],[799,94,1007],[100,93,41],[1314,943,1301],[184,230,109],[875,1195,231],[133,176,189],[751,755,826],[101,102,57],[1198,513,117],[748,518,97],[1145,1484,1304],[358,658,81],[971,672,993],[445,151,456],[252,621,122],[36,271,126],[85,36,126],[116,83,93],[141,171,1747],[1081,883,103],[1398,1454,149],[457,121,593],[127,116,303],[697,70,891],[457,891,1652],[1058,1668,112],[518,130,97],[214,319,131],[185,1451,1449],[463,133,516],[1428,123,177],[113,862,561],[215,248,136],[186,42,251],[127,83,116],[160,85,127],[162,129,140],[154,169,1080],[169,170,1080],[210,174,166],[1529,1492,1524],[450,875,231],[399,875,450],[171,141,170],[113,1155,452],[131,319,360],[44,175,904],[452,872,113],[746,754,407],[147,149,150],[309,390,1148],[53,186,283],[757,158,797],[303,129,162],[429,303,162],[154,168,169],[673,164,193],[38,271,75],[320,288,1022],[246,476,173],[175,548,904],[182,728,456],[199,170,169],[168,199,169],[199,171,170],[184,238,230],[246,247,180],[1496,1483,1467],[147,150,148],[828,472,445],[53,108,186],[56,53,271],[186,961,42],[1342,391,57],[1664,157,1834],[1070,204,178],[178,204,179],[285,215,295],[692,55,360],[192,193,286],[359,673,209],[586,195,653],[121,89,573],[202,171,199],[238,515,311],[174,210,240],[174,105,166],[717,276,595],[1155,1149,452],[1405,56,197],[53,283,30],[75,53,30],[45,235,1651],[210,166,490],[181,193,192],[185,620,217],[26,798,759],[1070,226,204],[220,187,179],[220,168,187],[202,222,171],[359,209,181],[182,456,736],[964,167,1405],[76,250,414],[807,1280,1833],[70,883,1652],[227,179,204],[221,199,168],[221,202,199],[360,494,131],[214,241,319],[105,247,166],[205,203,260],[388,480,939],[482,855,211],[8,807,1833],[226,255,204],[228,221,168],[166,173,490],[701,369,702],[211,855,262],[631,920,630],[1448,1147,1584],[255,227,204],[237,220,179],[228,168,220],[222,256,555],[215,259,279],[126,271,38],[108,50,186],[227,236,179],[236,237,179],[220,237,228],[228,202,221],[256,222,202],[555,256,229],[259,152,279],[27,1296,31],[186,50,961],[961,234,372],[1651,235,812],[1572,1147,1448],[255,226,1778],[255,236,227],[256,257,229],[106,184,109],[241,410,188],[177,578,620],[209,673,181],[1136,1457,79],[1507,245,718],[255,273,236],[275,410,241],[206,851,250],[1459,253,1595],[1406,677,1650],[228,274,202],[202,281,256],[348,239,496],[205,172,203],[369,248,702],[261,550,218],[261,465,550],[574,243,566],[921,900,1220],[291,273,255],[348,238,265],[109,230,194],[149,380,323],[443,270,421],[272,291,255],[274,228,237],[274,292,202],[281,257,256],[276,543,341],[152,259,275],[1111,831,249],[632,556,364],[299,273,291],[299,236,273],[280,237,236],[202,292,281],[247,246,173],[282,49,66],[1620,1233,1553],[299,280,236],[280,305,237],[237,305,274],[306,292,274],[330,257,281],[246,194,264],[166,247,173],[912,894,896],[611,320,244],[1154,1020,907],[969,962,290],[272,299,291],[305,318,274],[145,212,240],[164,248,285],[259,277,275],[193,164,295],[269,240,210],[1033,288,320],[46,948,206],[336,280,299],[330,281,292],[257,307,300],[369,136,248],[145,240,269],[502,84,465],[193,295,286],[164,285,295],[282,302,49],[161,303,429],[318,306,274],[306,330,292],[315,257,330],[315,307,257],[307,352,300],[300,352,308],[275,277,403],[353,1141,333],[1420,425,47],[611,313,320],[85,126,83],[128,1180,43],[303,116,129],[280,314,305],[314,318,305],[190,181,242],[203,214,131],[820,795,815],[322,299,272],[322,336,299],[315,339,307],[172,152,617],[172,214,203],[321,1033,320],[1401,941,946],[85,160,138],[976,454,951],[747,60,786],[317,322,272],[339,352,307],[266,33,867],[163,224,218],[247,614,180],[648,639,553],[388,172,205],[611,345,313],[313,345,320],[160,127,303],[454,672,951],[317,329,322],[314,280,336],[306,338,330],[330,339,315],[1236,115,436],[342,321,320],[1046,355,328],[328,346,325],[325,346,317],[367,314,336],[314,337,318],[337,306,318],[338,343,330],[342,320,345],[355,349,328],[346,329,317],[347,336,322],[314,362,337],[330,343,339],[340,308,352],[135,906,1022],[239,156,491],[194,230,486],[40,1015,1003],[321,355,1046],[329,382,322],[382,347,322],[347,367,336],[337,371,306],[306,371,338],[1681,296,1493],[286,172,388],[230,348,486],[348,183,486],[384,332,830],[328,349,346],[367,362,314],[371,343,338],[339,351,352],[57,344,78],[342,355,321],[386,346,349],[386,350,346],[346,350,329],[347,366,367],[343,363,339],[323,380,324],[152,275,241],[345,1045,342],[350,374,329],[339,363,351],[234,340,352],[353,361,354],[40,34,1015],[373,355,342],[373,349,355],[374,382,329],[366,347,382],[371,363,343],[351,379,352],[379,372,352],[372,234,352],[156,190,491],[319,241,692],[354,361,31],[366,377,367],[363,379,351],[133,590,516],[197,56,271],[1045,370,342],[370,373,342],[374,350,386],[377,366,382],[367,395,362],[400,337,362],[400,371,337],[378,363,371],[106,109,614],[181,673,193],[953,920,631],[376,349,373],[376,386,349],[378,379,363],[224,375,218],[279,152,172],[361,619,381],[1347,823,795],[760,857,384],[392,374,386],[394,395,367],[383,371,400],[383,378,371],[218,375,261],[197,271,36],[414,454,976],[385,376,373],[1051,382,374],[387,394,367],[377,387,367],[395,400,362],[279,172,295],[30,365,225],[450,231,825],[385,373,370],[398,374,392],[1051,377,382],[396,378,383],[348,496,183],[295,172,286],[357,269,495],[1148,390,1411],[75,30,225],[206,76,54],[412,386,376],[412,392,386],[396,383,400],[651,114,878],[123,1241,506],[238,311,265],[381,653,29],[618,815,334],[427,1032,411],[298,414,976],[791,332,384],[129,100,140],[412,404,392],[392,404,398],[140,107,360],[395,394,400],[423,379,378],[385,412,376],[406,94,58],[419,415,1021],[422,423,378],[423,125,379],[258,508,238],[311,156,265],[213,287,491],[449,411,1024],[412,1068,404],[55,140,360],[76,414,54],[394,416,400],[400,416,396],[422,378,396],[1258,796,789],[427,411,449],[427,297,1032],[1385,1366,483],[417,448,284],[1507,341,245],[162,140,444],[658,44,81],[433,125,423],[438,251,125],[429,162,439],[1342,57,1348],[765,766,442],[697,891,695],[1057,396,416],[440,423,422],[440,433,423],[433,438,125],[438,196,251],[74,482,211],[1136,79,144],[29,195,424],[242,1004,492],[57,757,28],[414,298,54],[238,348,230],[224,163,124],[295,215,279],[495,269,490],[449,446,427],[446,297,427],[1020,1163,909],[128,138,419],[66,980,443],[415,439,1018],[111,396,1057],[111,422,396],[840,249,831],[593,664,596],[218,550,155],[109,194,180],[483,268,855],[161,415,419],[1737,232,428],[360,107,494],[1006,1011,410],[444,140,55],[919,843,430],[190,242,213],[275,403,410],[131,494,488],[449,663,446],[138,161,419],[128,419,34],[439,162,444],[460,440,422],[440,438,433],[472,74,445],[491,190,213],[238,508,515],[46,206,54],[972,944,962],[1241,1428,1284],[111,460,422],[470,432,806],[248,164,702],[1025,467,453],[553,1235,648],[263,114,881],[267,293,896],[469,438,440],[455,196,438],[287,242,492],[239,265,156],[213,242,287],[1684,746,63],[663,474,446],[415,161,429],[140,100,107],[1055,459,467],[469,455,438],[259,542,277],[446,474,466],[446,466,447],[439,444,1019],[614,109,180],[190,359,181],[156,497,190],[726,474,663],[1023,458,459],[461,440,460],[269,210,490],[246,180,194],[590,133,189],[163,218,155],[467,468,453],[1063,1029,111],[111,1029,460],[1029,464,460],[461,469,440],[150,149,323],[828,445,456],[375,502,261],[474,475,466],[573,426,462],[478,1023,477],[478,458,1023],[458,479,467],[459,458,467],[468,393,453],[464,461,460],[484,365,455],[1232,182,1380],[172,617,214],[547,694,277],[542,547,277],[184,258,238],[261,502,465],[467,479,468],[484,455,469],[1380,182,864],[475,476,466],[80,447,476],[466,476,447],[415,429,439],[479,487,468],[487,287,468],[492,393,468],[260,469,461],[481,365,484],[531,473,931],[692,360,319],[726,495,474],[468,287,492],[480,464,1029],[260,461,464],[494,481,484],[74,472,482],[174,240,212],[223,106,614],[486,477,485],[478,496,458],[491,487,479],[123,402,177],[488,469,260],[488,484,469],[265,239,348],[248,215,285],[474,490,475],[477,486,478],[458,496,479],[239,491,479],[1584,1147,1334],[488,494,484],[401,123,506],[495,490,474],[490,173,475],[80,476,264],[491,287,487],[480,1029,1004],[480,205,464],[173,476,475],[485,194,486],[486,183,478],[478,183,496],[496,239,479],[848,1166,60],[268,262,855],[205,260,464],[260,203,488],[203,131,488],[246,264,476],[194,485,264],[1002,310,1664],[311,515,497],[515,359,497],[565,359,515],[1250,1236,301],[736,456,151],[654,174,567],[577,534,648],[519,505,645],[725,565,508],[150,1723,148],[584,502,505],[584,526,502],[502,526,84],[607,191,682],[560,499,660],[607,517,191],[1038,711,124],[951,672,971],[716,507,356],[868,513,1198],[615,794,608],[682,191,174],[1313,928,1211],[617,241,214],[511,71,91],[408,800,792],[192,286,525],[80,485,447],[91,97,130],[1675,324,888],[207,756,532],[582,1097,1124],[311,497,156],[510,130,146],[523,511,510],[608,708,616],[546,690,650],[511,527,358],[536,146,518],[465,418,550],[418,709,735],[520,514,500],[584,505,519],[536,518,509],[146,536,510],[538,527,511],[876,263,669],[646,524,605],[510,536,523],[527,175,358],[724,876,669],[721,724,674],[524,683,834],[558,509,522],[558,536,509],[523,538,511],[611,243,574],[528,706,556],[668,541,498],[523,537,538],[527,540,175],[532,756,533],[1013,60,747],[551,698,699],[92,520,500],[535,536,558],[536,569,523],[538,540,527],[539,548,175],[567,212,145],[401,896,293],[534,675,639],[1510,595,1507],[557,545,530],[569,536,535],[537,540,538],[540,539,175],[569,537,523],[1135,718,47],[587,681,626],[580,535,558],[99,747,278],[701,565,725],[665,132,514],[665,514,575],[132,549,653],[176,651,189],[65,47,266],[597,569,535],[569,581,537],[537,581,540],[563,539,540],[539,564,548],[1509,1233,1434],[132,653,740],[550,710,155],[714,721,644],[410,1011,188],[732,534,586],[560,562,729],[555,557,222],[580,558,545],[597,535,580],[581,563,540],[5,821,1676],[576,215,136],[649,457,741],[564,539,563],[124,711,224],[550,668,710],[550,541,668],[565,701,673],[560,613,499],[233,532,625],[545,555,580],[601,581,569],[594,904,548],[1463,1425,434],[185,149,1454],[721,674,644],[185,380,149],[577,424,586],[462,586,559],[597,601,569],[594,548,564],[566,603,574],[165,543,544],[457,89,121],[586,424,195],[725,587,606],[1078,582,1124],[588,925,866],[462,559,593],[189,878,590],[555,229,580],[602,563,581],[904,594,956],[434,1425,1438],[1024,112,821],[572,587,626],[600,597,580],[599,591,656],[600,580,229],[601,622,581],[581,622,602],[602,564,563],[602,594,564],[603,611,574],[498,529,546],[697,1145,70],[592,628,626],[610,597,600],[597,610,601],[222,557,171],[604,765,799],[573,462,593],[133,200,176],[729,607,627],[1011,692,188],[518,146,130],[585,687,609],[682,627,607],[1712,599,656],[562,592,607],[643,656,654],[257,600,229],[601,633,622],[623,594,602],[174,212,567],[725,606,701],[609,701,606],[610,633,601],[633,642,622],[380,216,324],[142,143,1249],[501,732,586],[534,577,586],[648,1235,577],[610,641,633],[310,1002,1831],[618,334,604],[1710,145,269],[707,498,659],[501,586,462],[625,501,462],[726,663,691],[300,600,257],[641,610,600],[622,629,602],[602,629,623],[55,692,444],[518,748,509],[929,1515,1411],[620,578,267],[71,511,358],[707,668,498],[650,687,585],[600,300,641],[641,657,633],[1675,888,1669],[622,636,629],[505,502,375],[541,529,498],[332,420,1053],[637,551,638],[534,639,648],[69,623,873],[300,512,641],[633,657,642],[562,660,579],[687,637,638],[709,646,605],[775,738,885],[559,549,132],[646,683,524],[641,512,657],[266,897,949],[1712,643,1657],[184,727,258],[674,724,669],[699,714,647],[628,659,572],[657,662,642],[571,881,651],[517,607,504],[598,706,528],[598,694,547],[640,552,560],[655,693,698],[698,693,721],[91,510,511],[144,301,1136],[324,216,888],[870,764,1681],[575,514,520],[276,544,543],[658,175,44],[645,505,711],[659,546,572],[700,524,655],[605,700,529],[266,867,897],[1695,1526,764],[579,659,628],[654,591,682],[586,549,559],[698,721,714],[896,401,506],[640,734,599],[664,665,575],[621,629,636],[1712,656,643],[547,644,598],[710,668,707],[640,560,734],[655,698,551],[694,528,277],[512,662,657],[504,592,626],[688,584,519],[152,241,617],[587,725,681],[598,669,706],[526,670,84],[598,528,694],[710,707,499],[579,592,562],[660,659,579],[323,324,1134],[326,895,473],[195,29,653],[84,670,915],[560,660,562],[504,626,681],[711,505,224],[651,881,114],[216,620,889],[1362,678,197],[493,99,48],[1659,691,680],[529,690,546],[430,843,709],[655,524,693],[174,191,105],[674,669,598],[98,712,82],[572,546,585],[72,61,71],[912,911,894],[106,223,184],[664,132,665],[843,646,709],[635,699,136],[699,698,714],[593,132,664],[688,526,584],[185,177,620],[533,675,534],[687,638,635],[1652,89,457],[896,506,912],[132,740,514],[689,685,282],[691,449,680],[48,436,493],[136,699,647],[739,640,554],[549,586,653],[532,533,625],[1530,695,649],[653,381,619],[736,151,531],[188,692,241],[177,402,578],[33,689,867],[689,33,685],[593,559,132],[949,65,266],[711,1038,661],[939,480,1004],[609,369,701],[616,552,615],[619,361,740],[151,463,516],[513,521,117],[691,663,449],[186,251,196],[333,302,327],[613,560,552],[616,613,552],[690,551,637],[660,707,659],[704,208,1203],[418,735,550],[163,708,124],[524,834,693],[554,640,599],[245,341,165],[565,673,359],[155,710,708],[105,191,517],[1515,198,1411],[1709,554,599],[60,289,786],[838,1295,1399],[533,534,625],[710,499,708],[556,632,410],[217,620,216],[591,627,682],[504,503,223],[643,654,567],[690,637,650],[545,557,555],[174,654,682],[719,691,1659],[727,681,508],[645,711,661],[794,615,739],[565,515,508],[282,685,302],[1150,397,1149],[638,699,635],[544,685,33],[719,726,691],[1742,1126,1733],[1724,1475,148],[556,410,403],[185,217,380],[503,504,681],[277,556,403],[32,1178,158],[1712,1709,599],[605,529,541],[635,136,369],[687,635,369],[529,700,690],[700,551,690],[89,304,573],[625,534,732],[730,302,685],[503,681,727],[702,673,701],[730,327,302],[327,353,333],[596,664,575],[660,499,707],[585,546,650],[560,729,734],[700,655,551],[176,571,651],[517,504,223],[730,685,544],[1661,1682,726],[1682,495,726],[1250,301,917],[605,524,700],[609,687,369],[516,389,895],[1553,686,1027],[673,702,164],[656,591,654],[520,596,575],[402,123,401],[828,456,728],[1645,677,1653],[528,556,277],[638,551,699],[190,497,359],[276,730,544],[1117,1525,933],[1027,686,1306],[155,708,163],[709,605,541],[647,644,547],[650,637,687],[599,734,591],[578,293,267],[1682,357,495],[510,91,130],[734,729,627],[576,542,215],[709,541,735],[735,541,550],[276,500,730],[500,327,730],[653,619,740],[414,851,454],[734,627,591],[729,562,607],[615,552,640],[525,181,192],[308,512,300],[223,503,727],[266,165,33],[92,500,276],[321,1046,1033],[585,609,606],[1200,1559,86],[628,572,626],[301,436,803],[714,644,647],[708,499,613],[721,693,724],[514,353,327],[353,740,361],[344,158,78],[708,613,616],[615,640,739],[500,514,327],[514,740,353],[1449,177,185],[462,233,625],[851,405,1163],[608,616,615],[647,542,576],[625,732,501],[1097,582,1311],[1235,424,577],[579,628,592],[607,592,504],[24,432,470],[105,614,247],[104,742,471],[542,259,215],[365,196,455],[1420,47,65],[223,727,184],[547,542,647],[572,585,606],[587,572,606],[262,780,1370],[647,576,136],[644,674,598],[271,53,75],[727,508,258],[471,742,142],[505,375,224],[357,1710,269],[725,508,681],[659,498,546],[743,1178,32],[1195,634,231],[1176,24,470],[743,1110,1178],[135,809,857],[63,746,407],[634,1176,470],[159,1112,27],[1176,1685,24],[399,450,779],[1178,856,875],[751,744,54],[436,48,772],[634,1108,1210],[769,1285,1286],[751,298,755],[746,1684,754],[754,924,87],[722,1625,756],[87,839,153],[489,795,820],[758,808,1518],[839,840,153],[831,1111,959],[1111,749,959],[810,1253,1363],[1247,1394,713],[1388,1329,1201],[1242,120,761],[857,791,384],[758,1523,808],[296,764,1504],[70,1652,891],[207,233,1638],[1348,57,28],[858,420,332],[964,1379,1278],[420,1194,816],[784,1076,1186],[1076,21,1186],[1710,767,1],[849,822,778],[806,137,787],[786,790,744],[790,54,744],[771,63,407],[785,852,818],[774,1823,272],[895,151,516],[135,1022,809],[99,826,48],[48,826,755],[808,705,408],[833,441,716],[1733,743,32],[1385,836,852],[772,827,737],[1005,49,781],[793,1697,813],[1518,441,1537],[1139,1132,859],[782,801,770],[1510,1530,676],[770,814,835],[231,787,825],[207,722,756],[26,771,798],[782,863,865],[832,54,790],[865,842,507],[799,765,94],[1175,1261,1353],[800,408,805],[262,986,200],[792,800,814],[801,792,770],[704,1203,1148],[356,1514,822],[165,544,33],[561,776,113],[1043,738,775],[815,831,820],[773,792,801],[772,48,914],[772,737,803],[436,772,803],[808,817,705],[1624,822,1527],[588,1144,788],[799,762,604],[821,1520,1676],[854,803,666],[828,482,472],[445,74,463],[831,489,820],[828,836,482],[716,782,763],[334,815,766],[815,823,766],[334,766,765],[819,805,837],[1716,1521,1412],[1684,924,754],[800,805,819],[1709,829,554],[806,1349,137],[99,1013,747],[341,595,276],[817,810,818],[1176,1691,1685],[763,782,865],[830,846,1052],[865,1499,842],[982,846,1053],[847,832,790],[1178,875,158],[817,818,705],[1302,1392,45],[96,417,284],[223,614,517],[356,507,1514],[1166,848,1179],[1349,432,26],[717,92,276],[770,835,863],[522,509,1745],[847,841,832],[832,841,46],[829,739,554],[802,824,39],[397,1043,775],[1567,849,778],[1385,483,855],[1349,26,1346],[441,801,782],[402,401,293],[1043,667,738],[759,798,1007],[819,837,728],[728,837,828],[837,852,828],[1537,441,833],[148,1475,147],[805,705,837],[716,441,782],[483,1371,780],[814,819,844],[845,753,1336],[1661,719,4],[862,847,790],[737,827,666],[201,46,841],[810,785,818],[408,705,805],[1560,1536,849],[1585,853,1786],[7,1668,807],[7,807,8],[822,1514,1527],[800,819,814],[847,862,841],[991,857,760],[705,818,837],[808,408,773],[402,293,578],[791,858,332],[1480,1228,1240],[814,844,835],[785,1385,852],[1132,120,859],[1743,1726,684],[1704,783,1279],[1623,1694,1731],[959,489,831],[1518,808,773],[862,872,841],[441,773,801],[331,512,308],[380,217,216],[841,872,201],[818,852,837],[448,1480,1240],[856,1108,1195],[1527,1514,1526],[819,182,1232],[871,724,693],[852,836,828],[770,792,814],[803,737,666],[751,826,278],[1674,1727,1699],[849,356,822],[871,693,834],[507,842,1514],[1406,1097,869],[1328,1349,1346],[823,815,795],[744,751,278],[1110,856,1178],[520,717,316],[871,834,683],[884,876,724],[165,266,47],[716,763,507],[216,889,888],[853,1585,1570],[1536,716,356],[886,873,623],[782,770,863],[432,24,26],[683,882,871],[884,724,871],[114,876,884],[516,590,389],[11,1218,1628],[862,113,872],[886,623,629],[830,1052,1120],[762,153,604],[773,408,792],[763,865,507],[153,840,604],[882,884,871],[531,151,326],[886,890,873],[133,262,200],[819,1232,844],[621,636,122],[645,892,519],[1130,1076,784],[114,263,876],[1670,10,1663],[911,670,894],[452,885,872],[872,885,201],[887,882,683],[878,884,882],[590,878,882],[890,867,689],[897,629,621],[897,886,629],[819,728,182],[519,893,688],[894,670,526],[898,894,526],[1536,356,849],[810,1363,785],[878,114,884],[879,888,892],[892,889,893],[893,898,688],[895,683,843],[895,887,683],[889,620,267],[590,882,389],[418,465,84],[949,897,621],[897,890,886],[889,267,893],[898,267,896],[531,326,473],[189,651,878],[843,683,646],[897,867,890],[888,889,892],[893,267,898],[896,894,898],[473,895,843],[895,389,887],[974,706,669],[513,1115,521],[326,151,895],[809,791,857],[211,262,133],[920,923,947],[923,90,947],[90,25,947],[25,972,935],[64,431,899],[52,899,901],[903,905,59],[437,967,73],[839,1242,761],[904,975,44],[917,301,144],[915,670,911],[905,201,885],[1684,63,1685],[1033,1194,288],[950,913,755],[912,918,911],[950,914,913],[506,918,912],[922,919,915],[911,922,915],[1004,451,492],[1263,553,639],[922,911,918],[630,920,947],[916,506,926],[916,918,506],[521,1115,1098],[916,922,918],[919,418,915],[83,38,75],[24,1685,771],[110,1230,1213],[712,8,1837],[922,930,919],[919,430,418],[1395,1402,1187],[930,922,916],[594,623,69],[35,431,968],[35,968,969],[866,924,1684],[1625,1263,675],[631,630,52],[930,931,919],[430,709,418],[302,333,49],[1446,978,1138],[799,1007,798],[931,843,919],[947,25,64],[885,738,667],[1262,963,964],[899,970,901],[1401,946,938],[1117,933,1091],[1685,63,771],[905,948,201],[979,937,980],[951,953,950],[937,270,443],[1154,903,59],[1194,954,1067],[909,405,907],[850,1151,59],[1769,811,1432],[76,206,250],[938,946,966],[965,927,942],[938,966,957],[955,975,904],[927,965,934],[52,51,631],[59,905,667],[431,935,968],[786,289,561],[252,122,671],[481,494,107],[954,1817,1067],[795,25,90],[958,965,945],[795,972,25],[902,983,955],[972,489,944],[1256,29,424],[671,331,945],[946,958,963],[956,955,904],[902,955,956],[671,512,331],[945,331,961],[662,671,122],[671,662,512],[934,65,927],[630,947,52],[666,631,910],[850,59,667],[961,331,234],[1024,411,1042],[890,69,873],[252,671,945],[975,290,940],[283,186,196],[30,283,365],[950,755,298],[946,965,958],[985,290,975],[969,290,985],[405,851,206],[935,431,64],[941,1423,1420],[964,963,167],[942,252,945],[78,757,57],[49,1005,66],[937,979,270],[631,666,827],[980,937,443],[66,689,282],[421,902,956],[947,64,52],[35,979,899],[951,971,953],[762,87,153],[27,31,381],[924,839,87],[946,963,966],[331,308,340],[957,966,1262],[473,843,931],[953,971,920],[270,969,902],[935,962,968],[51,1005,781],[969,983,902],[437,73,940],[69,421,956],[761,249,840],[263,974,669],[962,944,967],[962,437,290],[985,975,955],[907,405,948],[720,957,1262],[25,935,64],[176,200,571],[108,945,50],[250,851,414],[200,986,571],[881,974,263],[827,772,953],[970,899,980],[29,159,27],[234,331,340],[948,405,206],[980,899,979],[986,984,571],[571,984,881],[990,706,974],[946,934,965],[970,980,66],[1113,1486,1554],[984,981,881],[881,987,974],[689,66,443],[1005,901,66],[983,985,955],[165,47,718],[987,990,974],[1370,986,262],[901,970,66],[51,901,1005],[981,987,881],[988,706,990],[942,945,965],[290,437,940],[64,899,52],[988,556,706],[941,934,946],[431,35,899],[996,989,984],[984,989,981],[981,989,987],[35,969,270],[1370,995,986],[986,995,984],[989,999,987],[987,992,990],[992,988,990],[962,967,437],[951,950,976],[979,35,270],[421,270,902],[998,995,1370],[987,999,992],[988,364,556],[969,985,983],[689,443,890],[995,1000,984],[219,958,108],[998,1000,995],[999,997,992],[914,953,772],[845,1336,745],[806,787,231],[1000,996,984],[989,996,999],[50,945,961],[443,421,69],[797,158,779],[1098,1463,434],[996,1009,999],[1001,988,992],[1001,364,988],[903,907,905],[26,759,973],[997,1001,992],[632,364,1001],[1346,26,973],[998,1008,1000],[1000,1009,996],[531,931,736],[252,949,621],[286,388,525],[1174,1008,998],[1009,1010,999],[999,1010,997],[1014,1001,997],[614,105,517],[958,945,108],[525,1004,242],[963,958,219],[233,426,304],[1000,1008,1009],[1010,1014,997],[1001,1006,632],[824,413,39],[642,636,622],[480,388,205],[28,757,797],[1014,1006,1001],[1006,410,632],[975,940,44],[1234,420,858],[54,832,46],[1009,1012,1010],[167,963,219],[41,481,107],[1017,1010,1012],[122,636,662],[939,525,388],[525,939,1004],[950,953,914],[829,1735,739],[1008,880,1015],[1008,1015,1009],[1263,639,675],[956,594,69],[795,90,1347],[1179,848,1013],[759,1007,973],[1009,1015,1012],[1012,1016,1017],[1017,1014,1010],[1019,1011,1006],[927,65,949],[649,316,595],[913,48,755],[976,950,298],[1003,1015,880],[1018,1006,1014],[1021,1018,1014],[444,692,1011],[451,1029,1063],[1185,851,1163],[29,27,381],[181,525,242],[1021,1014,1017],[1016,1021,1017],[1018,1019,1006],[1019,444,1011],[927,949,942],[451,393,492],[903,1154,907],[391,101,57],[94,765,58],[419,1016,1012],[949,252,942],[907,1020,909],[765,442,58],[94,406,908],[1007,94,908],[34,1012,1015],[34,419,1012],[419,1021,1016],[451,1057,393],[907,948,905],[1034,1073,1039],[1061,906,1619],[1068,960,1034],[471,1249,104],[112,1024,1042],[372,379,125],[341,543,165],[141,1094,170],[566,243,1061],[398,1034,1039],[325,317,1823],[1493,296,1724],[850,667,1043],[1054,297,1065],[1619,135,1074],[1061,243,906],[680,1024,821],[1103,96,1245],[1440,1123,1491],[1047,1025,1044],[672,454,1231],[1484,697,1530],[993,672,1231],[178,154,1088],[1044,1041,1066],[112,1062,1058],[1530,649,676],[178,1088,1040],[1046,328,954],[243,244,1022],[954,1194,1033],[1042,411,1032],[971,993,1056],[960,1093,1034],[1754,1338,232],[385,1064,412],[1057,1063,111],[748,1071,1447],[1530,697,695],[971,1056,1270],[977,1059,1211],[649,741,316],[1060,1452,1030],[353,354,1323],[695,768,649],[398,404,1034],[596,316,741],[1836,119,13],[1513,1115,1528],[883,1081,1652],[1039,1073,1048],[462,426,233],[31,1296,354],[1055,1047,1066],[1032,1054,1045],[1521,310,1224],[119,861,13],[1194,1234,288],[1109,1771,1070],[1166,1160,776],[1044,1035,1041],[1026,960,1064],[1050,1032,1045],[1049,1041,387],[115,1013,99],[1046,954,1033],[1321,920,971],[611,1058,345],[1048,1066,1049],[1023,1055,1073],[1029,451,1004],[118,1094,141],[1094,1080,170],[1042,1032,1050],[1026,1064,385],[15,16,1084],[1096,1079,61],[1075,1071,748],[325,1817,328],[909,1163,405],[1022,1234,809],[374,398,1051],[1082,72,81],[1023,1034,1093],[1817,1794,1067],[86,1445,1400],[1507,1535,1510],[1079,1096,1075],[568,1478,1104],[1070,178,1040],[1034,1023,1073],[776,1155,113],[1103,143,142],[1140,81,73],[1082,81,1140],[1060,1030,936],[1040,1086,1109],[370,1065,385],[61,72,1082],[1087,1096,1144],[1040,1088,1086],[1651,812,752],[1062,1050,1045],[187,154,178],[179,187,178],[1099,1344,1101],[1668,1058,807],[1073,1055,1048],[1099,1336,1344],[1283,943,1123],[1049,387,1051],[1024,680,449],[61,1082,1100],[967,749,1111],[1439,1037,88],[742,1505,142],[398,1039,1051],[1107,1336,1099],[1344,1542,1101],[142,1505,1103],[477,1093,447],[477,1023,1093],[471,142,1249],[1041,1035,394],[1328,568,1104],[61,1100,1096],[154,1092,1088],[112,1042,1050],[154,187,168],[435,235,45],[1075,1096,1087],[97,1075,748],[1049,1066,1041],[816,1067,1028],[846,982,1142],[1245,96,284],[1092,154,1080],[1057,451,1063],[387,377,1051],[1055,1025,1047],[1075,1087,1089],[1106,1108,856],[1068,1034,404],[1480,1545,868],[906,135,1619],[1074,991,1095],[570,566,1061],[1025,453,1044],[745,1336,1107],[1035,1057,416],[1092,1102,1129],[1074,135,991],[1105,745,1107],[447,1026,446],[394,387,1041],[73,81,940],[1118,1108,1106],[1210,1108,874],[243,1022,906],[412,1064,1068],[1280,611,603],[960,447,1093],[1051,1039,1049],[1040,1109,1070],[1471,1037,1439],[69,890,443],[1377,703,1374],[1092,1080,1102],[1096,1100,788],[1096,788,1144],[1114,967,1111],[446,1026,297],[70,1112,883],[453,393,1057],[1118,874,1108],[1054,370,1045],[1080,1094,1102],[1039,1048,1049],[428,753,845],[1047,1044,1066],[1044,453,1035],[1472,731,1512],[1126,1121,743],[743,1121,1110],[1032,297,1054],[1480,868,1216],[71,358,72],[1133,967,1114],[1105,1119,745],[1035,453,1057],[1026,447,960],[454,851,1190],[1030,1477,652],[589,816,1028],[1110,1121,1106],[1122,1118,1106],[1116,874,1118],[1048,1055,1066],[1194,1067,816],[744,278,747],[745,1120,845],[845,1052,428],[1105,1780,1119],[1065,297,385],[1098,1529,1463],[731,1060,936],[235,434,812],[1445,1525,1117],[1106,1121,1122],[1122,1127,1118],[1127,1116,1118],[1094,118,1732],[1119,1120,745],[1406,1124,1097],[435,117,235],[1462,1440,1037],[1126,1129,1121],[1088,1092,1129],[1133,73,967],[1120,1052,845],[812,434,752],[1441,1559,1200],[1131,588,413],[1054,1065,370],[235,1098,434],[1052,1142,428],[1737,428,1142],[1496,1446,1483],[1182,1083,1654],[1121,1129,1122],[1732,1116,1127],[768,457,649],[761,1114,249],[1064,960,1068],[1135,1481,1136],[1126,952,1129],[1087,588,1131],[1087,1144,588],[859,788,1139],[1140,1133,1132],[1133,1140,73],[1822,570,1061],[394,1035,416],[1055,1023,459],[80,264,485],[1119,1128,1120],[145,1658,567],[695,891,768],[1129,1102,1122],[1122,1102,1127],[1416,1077,1413],[297,1026,385],[1052,846,1142],[1445,1117,1400],[952,1086,1129],[1714,1089,1131],[1131,1089,1087],[1100,1139,788],[112,1050,1062],[1323,354,1296],[49,333,1141],[1142,982,1737],[79,1457,1091],[1088,1129,1086],[1102,1094,1127],[1127,1094,1732],[1100,1082,1139],[1082,1132,1139],[1082,1140,1132],[1150,1043,397],[60,1166,289],[1696,1146,1698],[1297,1202,1313],[409,1297,1313],[1234,1194,420],[1408,1391,1394],[424,1235,1243],[1203,309,1148],[485,477,447],[1152,1156,850],[1153,1149,1155],[1153,1157,1149],[1149,1152,1150],[1156,1154,1151],[776,1153,1155],[1157,1152,1149],[1217,1393,1208],[1156,1159,1154],[1153,1165,1157],[1165,1152,1157],[1159,1020,1154],[1161,1153,776],[1161,1165,1153],[1165,1158,1152],[1152,1158,1156],[1158,1159,1156],[1166,776,561],[1160,1161,776],[1161,1164,1165],[1161,1160,1164],[1158,1162,1159],[1159,1162,1020],[1270,1321,971],[1164,1170,1165],[1165,1162,1158],[1162,1163,1020],[588,788,925],[1166,1167,1160],[1165,1170,1162],[1160,1167,1164],[1162,1170,1163],[1179,1167,1166],[1167,1168,1164],[1164,1168,1170],[1168,1169,1170],[1234,1022,288],[802,39,866],[1179,1168,1167],[1169,1173,1170],[1170,1173,1163],[1173,1185,1163],[1360,1267,1364],[1169,1185,1173],[611,244,243],[900,1226,1376],[1260,1408,1350],[618,840,831],[1181,1183,1179],[1179,1184,1168],[1208,1274,1291],[1183,1184,1179],[1168,1184,1169],[1387,1395,1254],[1208,1204,1172],[1182,1197,1083],[1187,1083,1197],[1213,1183,1181],[1169,1207,1185],[135,857,991],[1013,1213,1181],[1189,1183,1213],[1183,1189,1184],[1169,1184,1207],[1207,1190,1185],[1180,1389,1288],[1191,1192,1640],[1640,1192,1090],[1090,1205,1654],[1654,1205,1182],[1188,1395,1187],[1126,743,1733],[788,859,925],[809,1234,1171],[1193,1197,1182],[1189,1199,1184],[1639,1191,1637],[1639,1212,1191],[1205,1193,1182],[1198,1187,1197],[1199,1207,1184],[332,1053,846],[1090,1192,1205],[117,1188,1187],[435,1188,117],[435,1206,1188],[1199,1189,1213],[420,816,1053],[1212,1215,1191],[117,1187,1198],[45,1206,435],[120,1132,1133],[874,1116,1210],[1191,1215,1192],[1193,1216,1197],[1216,1198,1197],[1199,1214,1207],[117,521,235],[1220,1311,1078],[1220,900,1311],[1653,1215,1212],[1192,1225,1205],[1205,1209,1193],[1209,1216,1193],[1389,1217,1172],[1207,1214,454],[171,557,1747],[1805,1078,1787],[1805,1219,1078],[1198,1216,868],[666,910,854],[1230,1231,1213],[1213,1231,1199],[1199,1231,1214],[1219,1220,1078],[1215,1221,1192],[1192,1221,1225],[1225,1228,1205],[1205,1228,1209],[1209,1228,1216],[1464,1325,1223],[1215,1227,1221],[1228,1480,1216],[1226,1653,1376],[1653,1249,1215],[1221,1240,1225],[1225,1240,1228],[839,761,840],[1238,1219,1805],[1238,1220,1219],[1232,1380,1375],[1226,1249,1653],[1221,1227,1240],[233,207,532],[110,1236,1230],[1248,1231,1230],[1231,454,1214],[1249,1227,1215],[1248,1056,1231],[489,959,944],[448,1240,284],[925,859,1242],[1805,1244,1238],[1252,1220,1238],[1252,921,1220],[1236,1251,1230],[1230,1251,1248],[1056,993,1231],[1031,1264,1263],[68,1186,157],[1227,1245,1240],[1103,1245,143],[1243,1235,612],[1252,95,921],[1249,1226,1237],[1390,1387,1254],[1120,384,830],[830,332,846],[1227,143,1245],[1315,1369,1358],[1356,1269,1386],[972,795,489],[1831,1224,310],[1250,1255,1251],[1251,1056,1248],[1256,1243,103],[658,358,175],[1620,1238,1244],[1620,1252,1238],[1506,95,1252],[104,1249,1237],[1249,143,1227],[1268,1419,1329],[634,806,231],[618,831,815],[924,1242,839],[1255,1270,1251],[1251,1270,1056],[866,925,1242],[103,29,1256],[424,1243,1256],[134,1651,752],[1250,917,1255],[1172,1204,1260],[1352,1036,1276],[1265,1201,1329],[804,1282,1259],[1259,1294,723],[335,1330,1305],[407,762,799],[875,856,1195],[32,158,344],[967,944,749],[372,125,42],[1175,1354,1261],[553,612,1235],[1259,1273,1294],[1294,1283,723],[757,78,158],[407,799,798],[901,51,52],[139,1386,1389],[1386,1269,1389],[1389,1269,1217],[1148,1590,1268],[1428,1449,1450],[804,1281,1282],[1273,1259,1282],[158,399,779],[771,407,798],[521,1098,235],[917,1312,1255],[1312,1270,1255],[1217,1269,1393],[1195,1108,634],[1110,1106,856],[1210,1691,1176],[27,1112,1145],[1296,27,1145],[1171,858,791],[704,1148,1290],[1430,1436,1437],[1282,1308,1273],[1300,943,1283],[1393,1355,1274],[720,1278,769],[1287,1059,1399],[1310,1388,1272],[1312,1321,1270],[851,1185,1190],[1296,1145,1304],[26,24,771],[51,910,631],[1329,1290,1268],[1290,1148,1268],[1298,1293,733],[1281,1293,1282],[1282,1293,1308],[1308,1299,1273],[1300,1283,1294],[1340,943,1300],[1340,1301,943],[407,754,762],[1287,1399,1295],[34,139,128],[1288,1172,1260],[120,1133,1114],[1306,1113,1511],[1464,1223,1292],[1299,1294,1273],[1299,1300,1294],[1286,1295,838],[1285,1247,1286],[1247,713,1286],[1201,1265,1390],[1378,1368,1357],[1482,1320,917],[917,1320,1312],[850,1156,1151],[588,39,413],[1324,1306,686],[789,1365,928],[1223,1326,1292],[1292,1326,1298],[869,1097,1311],[790,786,561],[1323,1304,932],[1323,1296,1304],[1317,1324,686],[1306,368,1113],[1325,1342,1223],[1326,1348,1298],[1293,1327,1308],[1308,1318,1299],[704,1290,1258],[1320,1321,1312],[761,120,1114],[1684,802,866],[1674,6,1727],[1316,1323,932],[1335,1337,1305],[1348,1327,1293],[1298,1348,1293],[1333,1300,1299],[1333,1343,1300],[1328,1301,1340],[1328,1314,1301],[838,1399,1319],[921,1237,900],[409,1391,1408],[1376,1653,677],[1281,804,1458],[1331,1324,1317],[1324,368,1306],[368,1338,1307],[1327,797,1308],[797,1345,1308],[1308,1345,1318],[1318,1333,1299],[1341,1147,1572],[923,1321,1320],[923,920,1321],[39,588,866],[1141,1323,1316],[1330,1335,1305],[1337,1335,1336],[1339,1332,1325],[1223,1342,1326],[1342,1348,1326],[1348,797,1327],[1345,1333,1318],[1343,1340,1300],[1419,1265,1329],[1347,1320,1584],[1535,1141,1316],[1078,1311,582],[1344,1335,1330],[753,1331,1337],[368,1324,1331],[753,368,1331],[1332,1485,1325],[1325,1485,1342],[787,1343,1333],[137,1328,1340],[973,1341,1479],[406,1147,1341],[1171,1234,858],[1141,1535,1322],[49,1141,1322],[1344,1336,1335],[973,908,1341],[766,1347,1584],[1347,923,1320],[781,49,1322],[368,232,1338],[787,1340,1343],[787,137,1340],[568,1346,973],[58,1147,406],[442,1334,1147],[58,442,1147],[442,766,1334],[90,923,1347],[428,368,753],[779,1333,1345],[825,787,1333],[137,1349,1328],[1328,1346,568],[908,406,1341],[924,866,1242],[1336,753,1337],[428,232,368],[1115,777,1098],[1348,28,797],[797,779,1345],[779,825,1333],[1007,908,973],[583,1351,880],[1365,1246,977],[1658,145,1710],[1310,796,1388],[718,245,165],[1302,1272,1254],[1174,1351,583],[1174,715,1351],[1358,1260,1204],[1374,1373,1276],[1377,1374,1276],[678,1362,1382],[1377,1276,254],[139,34,40],[1008,1174,583],[1396,1286,1319],[768,891,457],[1316,932,1535],[1289,1371,1360],[182,736,864],[1355,1364,1274],[860,1367,1354],[1362,1222,1382],[1376,869,1311],[1590,1411,198],[1232,1375,877],[1394,1295,1286],[880,1356,1386],[880,1351,1356],[1211,1059,1287],[197,678,1405],[880,1386,1003],[1368,1253,1357],[1357,1253,1036],[715,1289,1364],[1354,1367,703],[1383,877,1375],[1266,1288,1260],[1373,1374,703],[1372,1289,1174],[1303,1366,1378],[1351,715,1355],[1665,1666,624],[1309,1357,1036],[900,1237,1226],[1174,1289,715],[1337,1331,1317],[1360,1303,1359],[1267,1354,1175],[1241,1284,1414],[1377,254,929],[1385,855,836],[1396,1319,1436],[1361,1366,1303],[1381,1368,1378],[1313,1211,1391],[1368,1385,1363],[813,82,861],[1058,1280,807],[893,519,892],[1359,1303,860],[1382,1350,1247],[1371,1303,1360],[1267,1175,1271],[769,1286,1396],[712,1837,82],[1366,1385,1381],[1365,796,1310],[1003,1386,40],[780,1371,1370],[561,862,790],[1284,1380,864],[1449,1428,177],[611,1280,1058],[1284,1375,1380],[926,506,1241],[1305,1337,1317],[309,1203,208],[1388,1201,1390],[1309,1036,1352],[1377,929,1411],[1399,1059,1257],[1112,70,1145],[289,1166,561],[1288,1389,1172],[1362,37,1180],[713,1394,1286],[1355,1393,1269],[1401,1423,941],[1274,1271,1384],[860,1378,1367],[715,1364,1355],[677,1406,869],[1297,1358,1202],[1388,1258,1329],[1180,1288,1266],[1008,583,880],[1524,1425,1463],[1390,1403,1387],[1278,1379,1247],[1278,1247,1285],[964,1278,1262],[1358,1369,1202],[1715,1699,1726],[926,1241,1414],[1341,1572,1479],[926,930,916],[1397,51,781],[409,1358,1297],[1236,436,301],[1376,677,869],[1351,1355,1356],[758,1534,1523],[1378,1357,1367],[977,1211,1365],[1135,1136,854],[1394,1391,1295],[1266,1260,1222],[1365,1302,1246],[1232,877,844],[736,930,864],[1408,1358,409],[1508,817,1523],[1381,1385,1368],[718,854,910],[854,718,1135],[1382,1222,1350],[1391,1211,1287],[1391,1287,1295],[1257,1651,134],[1414,1284,864],[1291,1369,1315],[1202,928,1313],[86,1400,1413],[1413,1200,86],[1263,1625,1031],[1413,1400,1404],[1002,1664,1834],[930,926,1414],[1399,1257,134],[520,316,596],[1393,1274,1208],[1657,1655,1712],[1407,1404,1400],[1404,1410,1413],[1649,1229,1406],[1362,1266,1222],[1384,1271,1175],[900,1376,1311],[1274,1384,1291],[1291,1384,1431],[1433,1396,1436],[1267,1359,1354],[309,1353,703],[838,1319,1286],[1407,1410,1404],[441,1518,773],[1241,123,1428],[1622,1521,1224],[1217,1208,1172],[1130,793,1076],[425,1409,1481],[1481,1409,1533],[1303,1378,860],[1350,1408,1394],[1246,1651,977],[1289,1360,1364],[1727,1694,1623],[1417,1407,1533],[1417,1410,1407],[1406,1650,1649],[1319,134,1437],[1414,864,930],[1406,1229,1124],[1354,1359,860],[1433,769,1396],[1417,1533,1409],[1416,1413,1410],[1415,1416,1410],[95,1237,921],[1392,1254,1395],[1360,1359,1267],[1258,1290,1329],[1180,128,1389],[1420,1409,425],[1417,1418,1410],[1418,1415,1410],[1422,1077,1416],[1247,1350,1394],[37,43,1180],[1204,1315,1358],[1428,1383,1375],[1356,1355,1269],[1409,1418,1417],[1302,45,1246],[1421,1416,1415],[1421,1422,1416],[1422,1494,1077],[957,720,938],[1423,1409,1420],[1423,1418,1409],[752,434,1438],[1260,1358,1408],[1363,1385,785],[1423,1426,1418],[1426,1424,1418],[1229,1649,1124],[1222,1260,1350],[1508,1523,1137],[1278,1285,769],[1482,917,144],[1418,1424,1415],[1425,1422,1421],[1425,1524,1422],[1272,1388,1390],[1391,409,1313],[1378,1366,1381],[1371,483,1361],[720,1262,1278],[29,103,159],[1271,1364,1267],[1424,1427,1415],[1537,1522,1518],[134,752,1438],[1420,934,941],[1428,1375,1284],[1277,1224,1831],[1362,1180,1266],[1401,1426,1423],[1577,1369,1291],[268,483,262],[1383,1450,1456],[1384,1175,1431],[1430,1415,1427],[1430,1421,1415],[1430,1425,1421],[1379,1382,1247],[1252,1553,1429],[1206,1392,1395],[1433,1430,1427],[309,208,1353],[1272,1390,1254],[1361,483,1366],[1523,817,808],[1302,1254,1392],[1371,1361,1303],[1426,1435,1424],[1435,1433,1424],[1433,1427,1424],[720,769,1433],[796,1258,1388],[1590,1419,1268],[1289,1372,1371],[1305,1317,1509],[998,1372,1174],[40,1386,139],[1261,1354,703],[1364,1271,1274],[134,1438,1437],[1436,1319,1437],[1317,686,1509],[1484,932,1304],[1434,1432,1509],[1420,65,934],[931,930,736],[1367,1357,1309],[1372,1370,1371],[1204,1208,1315],[1426,938,1435],[1368,1363,1253],[1207,454,1190],[1302,1310,1272],[309,1377,390],[390,1377,1411],[1370,1372,998],[1411,1590,1148],[720,1433,1435],[1450,1383,1428],[1379,678,1382],[1405,678,1379],[1208,1291,1315],[1399,134,1319],[1367,1309,1373],[1373,1352,1276],[596,741,593],[553,1264,612],[1433,1436,1430],[1437,1438,1430],[964,1405,1379],[1373,1309,1352],[1265,1403,1390],[1233,1618,1434],[1365,1310,1302],[789,796,1365],[720,1435,938],[128,139,1389],[1466,933,1525],[1191,1640,1637],[1314,1442,943],[1141,353,1323],[1489,1138,1474],[1462,1477,1440],[1474,1138,1488],[1442,1314,1443],[1446,1030,1546],[1484,1145,697],[1549,1443,1445],[1470,1572,1468],[1397,1239,1507],[1649,1825,1824],[1259,1440,1477],[1451,1450,1449],[978,1446,652],[1454,1456,1451],[1451,1456,1450],[341,1507,595],[933,1547,79],[804,1452,1060],[1454,1455,1456],[1398,1460,1454],[1455,877,1456],[1277,1831,1825],[804,1060,1458],[1339,1459,1595],[1314,1104,1443],[933,1448,1547],[147,1460,1398],[1460,1461,1454],[1454,1461,1455],[1292,1125,1464],[417,1531,1480],[1459,1339,1325],[811,1756,335],[1512,936,1490],[777,1529,1098],[147,1475,1460],[1464,253,1459],[836,855,482],[1487,1486,1307],[1104,1501,1443],[1439,1200,1532],[1475,1469,1460],[1460,1469,1461],[1325,1464,1459],[1277,1825,1649],[1532,1200,1077],[844,877,1455],[1572,933,1466],[1479,568,973],[1509,335,1305],[1339,1595,1759],[1469,1476,1461],[1461,1476,1455],[1104,1470,1468],[1464,1472,253],[1117,1091,1407],[1756,1542,335],[1206,1395,1188],[335,1542,1330],[835,844,1455],[1471,1598,1462],[1491,1442,1441],[835,1455,1476],[1441,1442,1443],[1489,1474,1473],[1251,1236,1250],[1030,1452,1477],[1598,1439,1532],[978,1598,1492],[1426,1401,938],[1448,1584,1482],[1724,1497,1475],[1475,1497,1469],[1484,1535,932],[1307,1486,1113],[1487,696,1495],[1037,1491,1441],[1030,1446,936],[1453,1487,1495],[696,1467,1495],[1138,1489,1483],[1497,1143,1469],[1469,1143,1476],[652,1598,978],[850,1043,1150],[1482,1584,1320],[1731,98,1697],[1113,1554,1573],[1524,1532,1494],[1496,1467,696],[1452,1259,1477],[296,1504,1497],[1504,1143,1497],[1143,1499,1476],[718,910,1498],[868,1540,1528],[817,1253,810],[1490,696,1487],[1440,1491,1037],[1510,676,595],[1488,1492,1517],[781,1239,1397],[1467,1519,1503],[1500,1307,1759],[1149,397,452],[1504,1514,1143],[1514,842,1143],[1125,733,1458],[1503,1531,1555],[1276,1036,1137],[1440,723,1123],[1036,1508,1137],[817,1508,1253],[103,883,1112],[1458,731,1472],[1512,1490,1487],[1487,1453,1486],[1138,978,1488],[1036,1253,1508],[1398,149,147],[1474,1517,1513],[1125,1458,1472],[1486,1453,1554],[1518,1534,758],[345,1058,1062],[928,1202,1369],[1554,1541,1505],[1464,1125,1472],[1504,764,1514],[304,426,573],[1505,742,1506],[1479,1572,1478],[1519,1483,1489],[833,716,1069],[1522,1534,1518],[1115,1513,777],[811,335,1432],[1591,1533,1407],[777,1517,1529],[1513,1517,777],[1498,910,1397],[1069,1539,833],[833,1539,1537],[1522,1551,1534],[1534,1551,1523],[1538,1137,1523],[910,51,1397],[1367,1373,703],[1466,1525,1468],[157,1186,1832],[1429,1511,1506],[1573,1505,1506],[1259,1452,804],[1503,1495,1467],[262,483,780],[1572,1466,1468],[1536,1556,716],[716,1556,1069],[1544,1523,1551],[1544,1538,1523],[1511,1573,1506],[933,1572,1448],[1543,1537,1539],[1537,1543,1522],[1091,933,79],[1519,1540,1545],[1549,1445,86],[1069,1548,1539],[1548,1543,1539],[1543,1551,1522],[1500,1487,1307],[68,784,1186],[1552,1544,1551],[1550,1538,1544],[1538,1550,1137],[1519,1473,1540],[1547,1448,1482],[1560,1563,1536],[1536,1563,1556],[1556,1548,1069],[1543,1558,1551],[1137,1550,1276],[1453,1495,1555],[1561,1543,1548],[1543,1561,1558],[1558,1566,1551],[1552,1550,1544],[1569,1557,1550],[1557,1276,1550],[1276,1557,254],[1531,1503,1480],[1535,1530,1510],[1545,1503,1519],[1547,1482,79],[1566,1552,1551],[1552,1569,1550],[1503,1545,1480],[703,1377,309],[1625,675,756],[1037,1441,88],[929,254,1557],[849,1567,1560],[1556,1564,1548],[1492,1529,1517],[1252,1429,1506],[1553,1027,1429],[1453,1555,1541],[1554,1453,1541],[1233,686,1553],[1328,1104,1314],[1564,1576,1548],[1548,1576,1561],[1557,1562,929],[1520,112,1668],[1483,1446,1138],[778,1570,1567],[1563,1564,1556],[1561,1565,1558],[1565,1566,1558],[1569,1552,1566],[1562,1557,1569],[1530,1535,1484],[1387,1402,1395],[1621,1634,1387],[1567,1568,1560],[1560,1568,1563],[1571,1569,1566],[1344,1330,1542],[1577,1431,1353],[1638,233,304],[1524,1463,1529],[1353,1431,1175],[1077,1200,1413],[1478,1470,1104],[1568,1575,1563],[1563,1575,1564],[1575,1576,1564],[1561,1576,1565],[1565,1574,1566],[1562,1515,929],[1555,96,1541],[1531,417,96],[1555,1531,96],[1246,45,1651],[208,1577,1353],[1586,1568,1567],[1574,1571,1566],[1571,1583,1569],[1474,1513,1528],[1239,1322,1535],[1478,1572,1470],[1570,1586,1567],[1488,1517,1474],[8,1833,1837],[1123,1442,1491],[1589,1568,1586],[1576,1594,1565],[1565,1594,1574],[1562,198,1515],[1559,1441,1549],[1441,1443,1549],[1135,425,1481],[1239,1535,1507],[1595,1487,1500],[1570,1585,1586],[1589,1578,1568],[1568,1578,1575],[1579,1569,1583],[1177,1577,208],[115,1236,110],[1578,1593,1575],[1587,1576,1575],[1576,1581,1594],[1571,1582,1583],[1588,1579,1583],[1579,1580,1562],[1569,1579,1562],[1562,1580,198],[1027,1511,1429],[1589,1593,1578],[1587,1581,1576],[1582,1574,1594],[1574,1582,1571],[1575,1593,1587],[1583,1582,1588],[1580,1590,198],[1587,1593,1581],[1505,1541,96],[1369,1577,1177],[1573,1554,1505],[1479,1478,568],[1585,1589,1586],[1369,1177,704],[766,1584,1334],[977,1257,1059],[1091,1591,1407],[1591,1091,1457],[1585,1604,1589],[1581,1592,1594],[1602,1582,1594],[1582,1608,1588],[1608,1579,1588],[1579,1597,1580],[1419,1590,1580],[1597,1419,1580],[1431,1577,1291],[1589,1604,1593],[1601,1596,1593],[1593,1596,1581],[1306,1511,1027],[1511,1113,1573],[1786,1412,1585],[1412,1604,1585],[1581,1596,1592],[1592,1602,1594],[1608,1599,1579],[1599,1611,1579],[1579,1611,1597],[1512,1487,253],[1519,1489,1473],[1545,1540,868],[1083,1187,1402],[1117,1407,1400],[1292,733,1125],[284,1240,1245],[1604,1600,1593],[1600,1601,1593],[1582,1607,1608],[789,1369,704],[1467,1483,1519],[1601,1613,1596],[1596,1613,1592],[1602,1607,1582],[1620,1553,1252],[1601,1605,1613],[1592,1613,1602],[1602,1606,1607],[1608,1609,1599],[1599,1609,1611],[1603,1597,1611],[1265,1419,1597],[1603,1265,1597],[1392,1206,45],[928,1369,789],[1474,1528,1473],[1104,1468,1501],[1412,1521,1604],[1613,1631,1602],[1607,1610,1608],[1608,1610,1609],[1476,863,835],[1495,1503,1555],[1498,1397,718],[1520,1668,7],[1604,1615,1600],[1605,1601,1600],[1602,1631,1606],[1606,1610,1607],[1759,1595,1500],[1292,1298,733],[1615,1604,1521],[1609,1603,1611],[652,1462,1598],[1468,1525,1445],[1443,1501,1445],[1134,1723,150],[1521,1622,1615],[1615,1616,1600],[1616,1605,1600],[1605,1616,1612],[1605,1612,1613],[1612,1617,1613],[1613,1617,1631],[1606,1614,1610],[1265,1603,1403],[448,417,1480],[1595,253,1487],[1501,1468,1445],[1383,1456,877],[1490,1496,696],[1610,1627,1609],[1627,1621,1609],[1591,1481,1533],[1598,1471,1439],[1353,1261,703],[1606,1631,1614],[1609,1621,1403],[1532,1077,1494],[1528,1115,513],[1546,652,1446],[1211,928,1365],[1540,1473,1528],[1078,1502,1787],[1425,1430,1438],[1617,1630,1631],[959,749,944],[566,570,603],[1716,310,1521],[775,452,397],[1615,1636,1616],[1616,1636,1612],[1610,1632,1627],[789,704,1258],[1457,1481,1591],[1769,1756,811],[207,1629,722],[1629,1625,722],[1224,1277,1622],[1622,1636,1615],[1636,1646,1612],[1612,1630,1617],[1631,1626,1614],[1614,1632,1610],[1506,104,95],[1481,1457,1136],[1123,943,1442],[936,1446,1496],[1499,863,1476],[1629,1031,1625],[1233,1509,686],[1633,1634,1621],[1621,1387,1403],[1472,1512,253],[1177,208,704],[1277,1636,1622],[1626,1632,1614],[1627,1633,1621],[936,1496,1490],[185,1454,1451],[731,936,1512],[1638,1635,207],[553,1263,1264],[1653,1212,1639],[1633,1627,1632],[1633,1387,1634],[1458,1060,731],[368,1307,1113],[1264,1031,1629],[1152,850,1150],[1277,1644,1636],[1646,1637,1612],[1637,1630,1612],[1647,1631,1630],[1647,1626,1631],[1422,1524,1494],[1030,652,1546],[1635,1629,207],[1635,1264,1629],[1639,1646,1636],[1637,1640,1630],[1641,1632,1626],[1632,1642,1633],[1633,1643,1387],[842,1499,1143],[865,863,1499],[1516,978,1492],[67,1130,784],[1103,1505,96],[88,1441,1200],[1644,1639,1636],[1640,1647,1630],[1647,1641,1626],[1633,1648,1643],[1492,1532,1524],[1488,1516,1492],[1037,1471,1462],[612,1264,1635],[1502,1078,1124],[1641,1642,1632],[1648,1633,1642],[1528,513,868],[1492,1598,1532],[1095,991,760],[679,157,1664],[760,1128,1785],[1277,1650,1644],[320,1022,244],[1559,1549,86],[1676,1520,7],[1488,978,1516],[1095,760,1785],[1128,384,1120],[304,312,1638],[1081,1638,312],[1081,1635,1638],[103,612,1635],[652,1477,1462],[1650,1645,1644],[1645,1639,1644],[1639,1637,1646],[1640,1090,1647],[1654,1641,1647],[1654,1642,1641],[1654,1648,1642],[1643,1402,1387],[1432,335,1509],[384,1128,760],[1652,312,304],[103,1243,612],[1277,1649,1650],[1090,1654,1647],[1643,1648,1402],[1134,324,1675],[679,68,157],[1652,1081,312],[1136,301,803],[1653,1639,1645],[723,1440,1259],[803,854,1136],[104,1506,742],[1112,159,103],[1654,1083,1648],[977,1651,1257],[1397,1507,718],[1081,103,1635],[1650,677,1645],[1083,1402,1648],[1706,1655,1671],[1624,1704,1711],[767,2,1],[608,794,294],[1678,1683,1686],[767,1682,2],[1669,1692,1675],[296,1681,764],[1671,1656,1672],[17,1673,1679],[1706,1671,1673],[1662,1674,1699],[1655,1657,1656],[418,84,915],[1526,1514,764],[1658,1657,567],[870,1695,764],[813,1697,98],[1659,821,5],[60,1013,848],[1013,110,1213],[661,1038,1692],[1660,1703,17],[1693,1673,17],[1663,1715,1743],[1013,115,110],[344,1733,32],[1670,1663,1743],[1670,1743,1738],[1677,1670,1738],[1661,4,3],[1084,1683,1678],[1728,793,1130],[1683,1767,1196],[1677,1738,1196],[1279,1786,853],[294,1038,608],[1279,1689,1786],[870,18,1708],[870,1680,1695],[1705,10,1670],[1084,1767,1683],[1196,1738,1686],[1750,870,1681],[1750,18,870],[1773,1703,1660],[1135,47,425],[150,323,1134],[1707,1655,1706],[1741,344,1687],[1685,1691,1684],[1684,1691,802],[1672,1656,0],[1038,124,608],[1671,1672,1690],[1628,1218,1767],[1686,1275,1667],[1493,1750,1681],[1773,18,1750],[1773,1660,18],[1679,1671,16],[1735,1706,1673],[1667,1678,1686],[1688,1658,1],[1656,1688,0],[1293,1281,1458],[1698,1678,1667],[1696,1130,1722],[1698,1667,1696],[1715,1662,1699],[1692,1038,294],[1682,767,357],[1669,661,1692],[802,1702,824],[1028,1067,1784],[822,1624,778],[119,813,861],[1218,1670,1677],[1703,1693,17],[1658,1710,1],[750,1730,1729],[1701,750,1729],[1693,1735,1673],[1731,1694,98],[1691,1702,802],[783,1729,1719],[1680,870,1708],[1707,1709,1655],[533,756,675],[1691,1210,1702],[11,1705,1670],[1767,1218,1196],[1218,1677,1196],[1664,1716,1721],[1729,1725,1719],[1729,1072,1725],[1210,1116,1702],[1702,1720,824],[1682,1661,2],[1713,1719,1721],[1716,1786,1713],[1730,1722,1072],[294,1717,1811],[1692,294,1666],[1659,680,821],[824,1720,1714],[1726,1731,1718],[345,1062,1045],[1738,1743,1275],[1075,1089,1071],[783,1719,1689],[1275,684,1728],[1692,1666,1665],[1675,1692,1665],[294,1811,1666],[1716,1664,310],[1678,1698,1700],[6,9,1727],[676,649,595],[381,31,361],[1723,1804,1772],[1727,9,1694],[1720,1089,1714],[1786,1716,1412],[1683,1196,1686],[1718,1697,1085],[1116,1739,1702],[1739,1734,1720],[1702,1739,1720],[1089,1720,1734],[509,748,1745],[1743,1715,1726],[1717,294,794],[1116,1732,1739],[1718,1731,1697],[1696,1667,1130],[1134,1665,1723],[1694,712,98],[101,1687,102],[391,1736,101],[662,636,642],[1734,1447,1089],[1089,1447,1071],[436,99,493],[1689,1279,783],[1485,1465,1342],[1736,1687,101],[344,1741,1733],[1741,1742,1733],[1735,829,1706],[829,1707,1706],[1485,1332,1465],[952,1126,1742],[1747,1447,1734],[879,892,645],[1730,1146,1696],[829,1709,1707],[1709,1712,1655],[118,1739,1732],[1332,1744,1465],[1687,1749,1741],[1741,1758,1742],[679,1072,68],[1072,1722,68],[118,1747,1739],[1747,1734,1739],[1465,1744,1736],[1736,1740,1687],[1704,1701,783],[1665,624,1723],[1722,1130,67],[1025,1055,467],[1444,14,1701],[558,522,530],[1657,1658,1688],[1339,1746,1332],[1332,1748,1744],[1687,1740,1749],[1741,1749,1758],[1109,952,1742],[1747,118,141],[1671,1690,1628],[1671,1628,16],[1657,1688,1656],[1745,748,1447],[357,767,1710],[1746,1748,1332],[1146,1700,1698],[1759,1307,1338],[1239,781,1322],[1745,1447,1747],[522,1745,1747],[316,717,595],[148,1493,1724],[1758,1109,1742],[1725,1072,679],[726,719,1661],[1695,1680,1526],[1772,1750,1493],[148,1772,1493],[1542,1751,1101],[952,1109,1086],[1744,1752,1736],[1736,1752,1740],[1753,1755,1740],[391,1342,1736],[821,112,1520],[557,530,1747],[530,522,1747],[994,879,645],[1542,1756,1751],[1813,1693,1703],[1746,1754,1748],[1748,1764,1744],[1752,1757,1740],[1740,1757,1753],[1749,1740,1755],[1755,1763,1749],[1763,1758,1749],[1275,1743,684],[1813,1735,1693],[1107,1099,1101],[1723,624,1804],[1403,1603,1609],[1748,1754,1764],[1744,1757,1752],[1760,1109,1758],[1465,1736,1342],[436,115,99],[1686,1738,1275],[1751,1766,1101],[1759,1754,1746],[1755,1753,1763],[1570,1279,853],[1701,1146,750],[1655,1656,1671],[11,1670,1218],[1761,1751,1756],[1766,1107,1101],[1726,1623,1731],[1711,1704,1279],[67,784,68],[558,530,545],[1620,1618,1233],[1769,1761,1756],[102,1687,344],[1338,1754,1759],[1754,232,1764],[1744,1765,1757],[1757,1763,1753],[1762,1760,1758],[1760,1771,1109],[1339,1759,1746],[1675,1665,1134],[1730,1696,1722],[1774,1751,1761],[1766,1780,1107],[1780,1105,1107],[1764,1765,1744],[1763,1762,1758],[1772,1773,1750],[1811,1813,1703],[1434,1769,1432],[1780,1766,1751],[232,1781,1764],[1711,1279,1570],[1688,1,0],[1774,1780,1751],[1764,1781,1765],[1765,1768,1757],[1757,1768,1763],[1777,1782,1760],[1762,1777,1760],[1769,1774,1761],[1763,1777,1762],[1760,1782,1771],[232,1737,1781],[1768,1776,1763],[272,255,774],[1669,994,661],[1618,1769,1434],[1765,589,1768],[1770,1777,1763],[1701,1729,783],[1783,1774,1769],[1789,1780,1774],[589,1775,1768],[1776,1770,1763],[1782,1778,1771],[1771,1778,1070],[624,1703,1773],[624,1811,1703],[1620,1244,1618],[1779,1769,1618],[1779,1783,1769],[739,1735,1813],[1775,1776,1768],[1790,1777,1770],[1777,1778,1782],[1725,679,1721],[733,1293,1458],[1802,1618,1244],[1802,1779,1618],[1788,1783,1779],[1789,1774,1783],[1796,1780,1789],[1796,1119,1780],[1823,1817,325],[1699,1727,1623],[750,1146,1730],[1497,1724,296],[1128,1119,1796],[61,62,71],[1131,413,824],[1114,1111,249],[1784,1776,1775],[1123,723,1283],[1791,1788,1779],[1788,1789,1783],[1095,1797,1074],[1028,1784,1775],[1784,1770,1776],[1777,1790,1778],[1793,1797,1095],[1797,1800,1074],[1798,1790,1770],[1805,1802,1244],[1802,1791,1779],[1792,1789,1788],[1793,1785,1128],[1793,1095,1785],[1074,1800,1619],[741,457,593],[1798,1770,1784],[1798,1794,1790],[1786,1689,1713],[684,1726,1718],[1728,1085,793],[1795,1787,1502],[1806,1802,1805],[1819,1788,1791],[1067,1798,1784],[1790,1794,1778],[1795,1502,1124],[1801,1805,1787],[1807,1791,1802],[1807,1819,1791],[1819,1792,1788],[1799,1128,1796],[994,645,661],[684,1085,1728],[684,1718,1085],[1699,1623,1726],[1801,1787,1795],[1808,1789,1792],[1808,1796,1789],[1799,1793,1128],[1809,1797,1793],[1809,1803,1797],[1803,1800,1797],[1067,1794,1798],[774,255,1778],[1673,1671,1679],[879,1669,888],[19,1807,1802],[1810,1619,1800],[879,994,1669],[1794,774,1778],[1723,1772,148],[1804,1773,1772],[1814,1795,1124],[1649,1814,1124],[1814,1801,1795],[1812,1806,1805],[19,1802,1806],[19,1819,1807],[1810,1800,1803],[1804,624,1773],[1714,1131,824],[1801,1812,1805],[1812,19,1806],[1808,1792,1819],[1799,1809,1793],[1821,1810,1803],[1717,739,1813],[1061,1619,1822],[1794,1817,774],[79,1482,144],[1815,1801,1814],[23,1819,19],[589,1028,1775],[1817,1823,774],[1689,1719,1713],[1824,1814,1649],[1827,1818,1801],[1818,1812,1801],[1818,19,1812],[1818,20,19],[1816,1809,1799],[1821,1803,1809],[1822,1619,1810],[124,708,608],[1663,10,1715],[1815,1827,1801],[1820,1808,1819],[23,1820,1819],[603,1810,1821],[603,1822,1810],[1085,1697,793],[1628,1690,11],[1527,1704,1624],[1730,1072,1729],[1526,1444,1704],[1526,1680,1444],[1704,1444,1701],[1816,1821,1809],[1722,67,68],[317,272,1823],[1716,1713,1721],[16,1628,1767],[1527,1526,1704],[1824,1826,1814],[1814,1826,1815],[1818,21,20],[1835,1808,1820],[603,570,1822],[226,1070,1778],[1013,1181,1179],[1721,679,1664],[1717,1813,1811],[1828,1827,1815],[22,1820,23],[22,1835,1820],[1830,603,1821],[719,1659,5],[643,567,1657],[1717,794,739],[1825,1826,1824],[1828,1815,1826],[1829,21,1818],[1808,1835,13],[4,719,5],[10,1662,1715],[1828,1832,1827],[1832,1818,1827],[12,1833,1816],[1833,1821,1816],[1833,1830,1821],[14,1146,1701],[1186,1829,1818],[1280,603,1830],[14,1700,1146],[1667,1728,1130],[1825,1834,1826],[1834,1828,1826],[1832,1186,1818],[1836,13,1835],[1624,1711,1570],[778,1624,1570],[1719,1725,1721],[1002,1825,1831],[1002,1834,1825],[1834,1832,1828],[1186,21,1829],[1836,1835,22],[1837,1833,12],[1280,1830,1833],[1667,1275,1728],[16,1767,1084],[589,1765,1838],[1765,1781,1838],[1781,1737,1838],[1737,982,1838],[982,1053,1838],[1053,816,1838],[816,589,1838]]\n","function createCube(sx, sy, sz, nx, ny, nz) {\n    if (sx === undefined) sx = 1.0;\n    if (sy === undefined) sy = sx;\n    if (sz === undefined) sz = sx;\n\n    if (nx === undefined) nx = 1.0;\n    if (ny === undefined) ny = nx;\n    if (nz === undefined) nz = nx;\n\n    var x = sx / 2;\n    var y = sy / 2;\n    var z = sz / 2;\n\n    var numVertices = (nx + 1) * (ny + 1) * 2 + (nx + 1) * (nz + 1) * 2 + (nz + 1) * (ny + 1) * 2;\n\n    var vertexIndex = 0;\n    var positions = [];\n    var normals = [];\n    var uvs = [];\n    var cells = [];\n\n    function makePlane(u, v, w, su, sv, nu, nv, pw, flipu, flipv) {\n        var vertShift = vertexIndex;\n        for(var j=0; j<=nv; j++) {\n            for(var i=0; i<=nu; i++) {\n                var vert = positions[vertexIndex] = [0,0,0];\n                vert[u] = (-su/2 + i*su/nu) * flipu;\n                vert[v] = (-sv/2 + j*sv/nv) * flipv;\n                vert[w] = pw\n\n                var normal = normals[vertexIndex] = [0,0,0];\n                normal[u] = 0\n                normal[v] = 0\n                normal[w] = pw/Math.abs(pw);\n\n                var texCoord = uvs[vertexIndex] = [0,0];\n                texCoord[0] = i/nu;\n                texCoord[1] = 1.0 - j/nv;\n\n                ++vertexIndex;\n            }\n        }\n\n        for(var j=0; j<nv; j++) {\n            for(var i=0; i<nu; i++) {\n                var n = vertShift + j * (nu + 1) + i\n                cells.push([n, n + nu  + 1, n + nu + 2]);\n                cells.push([n, n + nu + 2, n + 1]);\n            }\n        }\n    }\n\n     makePlane(0, 1, 2, sx, sy, nx, ny,  sz/2,  1, -1); //front\n     makePlane(0, 1, 2, sx, sy, nx, ny, -sz/2, -1, -1); //back\n     makePlane(2, 1, 0, sz, sy, nz, ny, -sx/2,  1, -1); //left\n     makePlane(2, 1, 0, sz, sy, nz, ny,  sx/2, -1, -1); //right\n     makePlane(0, 2, 1, sx, sz, nx, nz,  sy/2,  1,  1); //top\n     makePlane(0, 2, 1, sx, sz, nx, nz, -sy/2,  1, -1); //bottom\n\n    return {\n        positions: positions,\n        normals: normals,\n        uvs: uvs,\n        cells: cells\n    }\n}\n\nmodule.exports = createCube;\n","module.exports = normalize\n\nfunction normalize(vec) {\n  var mag = 0\n  for (var n = 0; n < vec.length; n++) {\n    mag += vec[n] * vec[n]\n  }\n  mag = Math.sqrt(mag)\n\n  // avoid dividing by zero\n  if (mag === 0) {\n    return Array.apply(null, new Array(vec.length)).map(Number.prototype.valueOf, 0)\n  }\n\n  for (var n = 0; n < vec.length; n++) {\n    vec[n] /= mag\n  }\n\n  return vec\n}\n","var normalize = require('vectors/normalize-nd')\n\nmodule.exports = icosphere\n\nfunction icosphere(subdivisions) {\n  subdivisions = +subdivisions|0\n\n  var positions = []\n  var faces = []\n  var t = 0.5 + Math.sqrt(5) / 2\n\n  positions.push([-1, +t,  0])\n  positions.push([+1, +t,  0])\n  positions.push([-1, -t,  0])\n  positions.push([+1, -t,  0])\n\n  positions.push([ 0, -1, +t])\n  positions.push([ 0, +1, +t])\n  positions.push([ 0, -1, -t])\n  positions.push([ 0, +1, -t])\n\n  positions.push([+t,  0, -1])\n  positions.push([+t,  0, +1])\n  positions.push([-t,  0, -1])\n  positions.push([-t,  0, +1])\n\n  faces.push([0, 11, 5])\n  faces.push([0, 5, 1])\n  faces.push([0, 1, 7])\n  faces.push([0, 7, 10])\n  faces.push([0, 10, 11])\n\n  faces.push([1, 5, 9])\n  faces.push([5, 11, 4])\n  faces.push([11, 10, 2])\n  faces.push([10, 7, 6])\n  faces.push([7, 1, 8])\n\n  faces.push([3, 9, 4])\n  faces.push([3, 4, 2])\n  faces.push([3, 2, 6])\n  faces.push([3, 6, 8])\n  faces.push([3, 8, 9])\n\n  faces.push([4, 9, 5])\n  faces.push([2, 4, 11])\n  faces.push([6, 2, 10])\n  faces.push([8, 6, 7])\n  faces.push([9, 8, 1])\n\n  var complex = {\n      cells: faces\n    , positions: positions\n  }\n\n  while (subdivisions-- > 0) {\n    complex = subdivide(complex)\n  }\n\n  positions = complex.positions\n  for (var i = 0; i < positions.length; i++) {\n    normalize(positions[i])\n  }\n\n  return complex\n}\n\n// TODO: work out the second half of loop subdivision\n// and extract this into its own module.\nfunction subdivide(complex) {\n  var positions = complex.positions\n  var cells = complex.cells\n\n  var newCells = []\n  var newPositions = []\n  var midpoints = {}\n  var f = [0, 1, 2]\n  var l = 0\n\n  for (var i = 0; i < cells.length; i++) {\n    var cell = cells[i]\n    var c0 = cell[0]\n    var c1 = cell[1]\n    var c2 = cell[2]\n    var v0 = positions[c0]\n    var v1 = positions[c1]\n    var v2 = positions[c2]\n\n    var a = getMidpoint(v0, v1)\n    var b = getMidpoint(v1, v2)\n    var c = getMidpoint(v2, v0)\n\n    var ai = newPositions.indexOf(a)\n    if (ai === -1) ai = l++, newPositions.push(a)\n    var bi = newPositions.indexOf(b)\n    if (bi === -1) bi = l++, newPositions.push(b)\n    var ci = newPositions.indexOf(c)\n    if (ci === -1) ci = l++, newPositions.push(c)\n\n    var v0i = newPositions.indexOf(v0)\n    if (v0i === -1) v0i = l++, newPositions.push(v0)\n    var v1i = newPositions.indexOf(v1)\n    if (v1i === -1) v1i = l++, newPositions.push(v1)\n    var v2i = newPositions.indexOf(v2)\n    if (v2i === -1) v2i = l++, newPositions.push(v2)\n\n    newCells.push([v0i, ai, ci])\n    newCells.push([v1i, bi, ai])\n    newCells.push([v2i, ci, bi])\n    newCells.push([ai, bi, ci])\n  }\n\n  return {\n      cells: newCells\n    , positions: newPositions\n  }\n\n  // reuse midpoint vertices between iterations.\n  // Otherwise, there'll be duplicate vertices in the final\n  // mesh, resulting in sharp edges.\n  function getMidpoint(a, b) {\n    var point = midpoint(a, b)\n    var pointKey = pointToKey(point)\n    var cachedPoint = midpoints[pointKey]\n    if (cachedPoint) {\n      return cachedPoint\n    } else {\n      return midpoints[pointKey] = point\n    }\n  }\n\n  function pointToKey(point) {\n    return point[0].toPrecision(6) + ','\n         + point[1].toPrecision(6) + ','\n         + point[2].toPrecision(6)\n  }\n\n  function midpoint(a, b) {\n    return [\n        (a[0] + b[0]) / 2\n      , (a[1] + b[1]) / 2\n      , (a[2] + b[2]) / 2\n    ]\n  }\n}\n","var EPSILON = 1e-6;\n\n//Estimate the vertex normals of a mesh\nexports.vertexNormals = function(faces, positions) {\n  \n  var N         = positions.length;\n  var normals   = new Array(N);\n  \n  //Initialize normal array\n  for(var i=0; i<N; ++i) {\n    normals[i] = [0.0, 0.0, 0.0];\n  }\n  \n  //Walk over all the faces and add per-vertex contribution to normal weights\n  for(var i=0; i<faces.length; ++i) {\n    var f = faces[i];\n    var p = 0;\n    var c = f[f.length-1];\n    var n = f[0];\n    for(var j=0; j<f.length; ++j) {\n    \n      //Shift indices back\n      p = c;\n      c = n;\n      n = f[(j+1) % f.length];\n    \n      var v0 = positions[p];\n      var v1 = positions[c];\n      var v2 = positions[n];\n      \n      //Compute infineteismal arcs\n      var d01 = new Array(3);\n      var m01 = 0.0;\n      var d21 = new Array(3);\n      var m21 = 0.0;\n      for(var k=0; k<3; ++k) {\n        d01[k] = v0[k]  - v1[k];\n        m01   += d01[k] * d01[k];\n        d21[k] = v2[k]  - v1[k];\n        m21   += d21[k] * d21[k];\n      }\n\n      //Accumulate values in normal\n      if(m01 * m21 > EPSILON) {\n        var norm = normals[c];\n        var w = 1.0 / Math.sqrt(m01 * m21);\n        for(var k=0; k<3; ++k) {\n          var u = (k+1)%3;\n          var v = (k+2)%3;\n          norm[k] += w * (d21[u] * d01[v] - d21[v] * d01[u]);\n        }\n      }\n    }\n  }\n  \n  //Scale all normals to unit length\n  for(var i=0; i<N; ++i) {\n    var norm = normals[i];\n    var m = 0.0;\n    for(var k=0; k<3; ++k) {\n      m += norm[k] * norm[k];\n    }\n    if(m > EPSILON) {\n      var w = 1.0 / Math.sqrt(m);\n      for(var k=0; k<3; ++k) {\n        norm[k] *= w;\n      }\n    } else {\n      for(var k=0; k<3; ++k) {\n        norm[k] = 0.0;\n      }\n    }\n  }\n\n  //Return the resulting set of patches\n  return normals;\n}\n\n//Compute face normals of a mesh\nexports.faceNormals = function(faces, positions) {\n  var N         = faces.length;\n  var normals   = new Array(N);\n  \n  for(var i=0; i<N; ++i) {\n    var f = faces[i];\n    var pos = new Array(3);\n    for(var j=0; j<3; ++j) {\n      pos[j] = positions[f[j]];\n    }\n    \n    var d01 = new Array(3);\n    var d21 = new Array(3);\n    for(var j=0; j<3; ++j) {\n      d01[j] = pos[1][j] - pos[0][j];\n      d21[j] = pos[2][j] - pos[0][j];\n    }\n    \n    var n = new Array(3);\n    var l = 0.0;\n    for(var j=0; j<3; ++j) {\n      var u = (j+1)%3;\n      var v = (j+2)%3;\n      n[j] = d01[u] * d21[v] - d01[v] * d21[u];\n      l += n[j] * n[j];\n    }\n    if(l > EPSILON) {\n      l = 1.0 / Math.sqrt(l);\n    } else {\n      l = 0.0;\n    }\n    for(var j=0; j<3; ++j) {\n      n[j] *= l;\n    }\n    normals[i] = n;\n  }\n  return normals;\n}\n\n\n","module.exports = function(dtype) {\n  switch (dtype) {\n    case 'int8':\n      return Int8Array\n    case 'int16':\n      return Int16Array\n    case 'int32':\n      return Int32Array\n    case 'uint8':\n      return Uint8Array\n    case 'uint16':\n      return Uint16Array\n    case 'uint32':\n      return Uint32Array\n    case 'float32':\n      return Float32Array\n    case 'float64':\n      return Float64Array\n    case 'array':\n      return Array\n    case 'uint8_clamped':\n      return Uint8ClampedArray\n  }\n}\n","var dtype = require('dtype')\n\nmodule.exports = pack\n\nfunction pack(arr, type) {\n  type = type || 'float32'\n\n  if (!arr[0] || !arr[0].length) {\n    return arr\n  }\n\n  var Arr = typeof type === 'string'\n    ? dtype(type)\n    : type\n\n  var dim = arr[0].length\n  var out = new Arr(arr.length * dim)\n  var k = 0\n\n  for (var i = 0; i < arr.length; i++)\n  for (var j = 0; j < dim; j++) {\n    out[k++] = arr[i][j]\n  }\n\n  return out\n}\n","\"use strict\"\n\nvar glm = require(\"gl-matrix\")\nvar vec3 = glm.vec3\nvar mat3 = glm.mat3\nvar mat4 = glm.mat4\nvar quat = glm.quat\n\n//Scratch variables\nvar scratch0 = new Float32Array(16)\nvar scratch1 = new Float32Array(16)\n\nfunction OrbitCamera(rotation, center, distance) {\n  this.rotation = rotation\n  this.center   = center\n  this.distance = distance\n}\n\nvar proto = OrbitCamera.prototype\n\nproto.view = function(out) {\n  if(!out) {\n    out = mat4.create()\n  }\n  scratch1[0] = scratch1[1] = 0.0\n  scratch1[2] = -this.distance\n  mat4.fromRotationTranslation(out,\n    quat.conjugate(scratch0, this.rotation),\n    scratch1)\n  mat4.translate(out, out, vec3.negate(scratch0, this.center))\n  return out\n}\n\nproto.lookAt = function(eye, center, up) {\n  mat4.lookAt(scratch0, eye, center, up)\n  mat3.fromMat4(scratch0, scratch0)\n  quat.fromMat3(this.rotation, scratch0)\n  vec3.copy(this.center, center)\n  this.distance = vec3.distance(eye, center)\n}\n\nproto.pan = function(dpan) {\n  var d = this.distance\n  scratch0[0] = -d*(dpan[0]||0)\n  scratch0[1] =  d*(dpan[1]||0)\n  scratch0[2] =  d*(dpan[2]||0)\n  vec3.transformQuat(scratch0, scratch0, this.rotation)\n  vec3.add(this.center, this.center, scratch0)\n}\n\nproto.zoom = function(d) {\n  this.distance += d\n  if(this.distance < 0.0) {\n    this.distance = 0.0\n  }\n}\n\nfunction quatFromVec(out, da) {\n  var x = da[0]\n  var y = da[1]\n  var z = da[2]\n  var s = x*x + y*y\n  if(s > 1.0) {\n    s = 1.0\n  }\n  out[0] = -da[0]\n  out[1] =  da[1]\n  out[2] =  da[2] || Math.sqrt(1.0 - s)\n  out[3] =  0.0\n}\n\nproto.rotate = function(da, db) {\n  quatFromVec(scratch0, da)\n  quatFromVec(scratch1, db)\n  quat.invert(scratch1, scratch1)\n  quat.multiply(scratch0, scratch0, scratch1)\n  if(quat.length(scratch0) < 1e-6) {\n    return\n  }\n  quat.multiply(this.rotation, this.rotation, scratch0)\n  quat.normalize(this.rotation, this.rotation)\n}\n\nfunction createOrbitCamera(eye, target, up) {\n  eye     = eye     || [0,0,-1]\n  target  = target  || [0,0,0]\n  up      = up      || [0,1,0]\n  var camera = new OrbitCamera(quat.create(), vec3.create(), 1.0)\n  camera.lookAt(eye, target, up)\n  return camera\n}\n\nmodule.exports = createOrbitCamera\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction EventEmitter() {\n  this._events = this._events || {};\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function(n) {\n  if (!isNumber(n) || n < 0 || isNaN(n))\n    throw TypeError('n must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nEventEmitter.prototype.emit = function(type) {\n  var er, handler, len, args, i, listeners;\n\n  if (!this._events)\n    this._events = {};\n\n  // If there is no 'error' event listener then throw.\n  if (type === 'error') {\n    if (!this._events.error ||\n        (isObject(this._events.error) && !this._events.error.length)) {\n      er = arguments[1];\n      if (er instanceof Error) {\n        throw er; // Unhandled 'error' event\n      } else {\n        // At least give some kind of context to the user\n        var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n        err.context = er;\n        throw err;\n      }\n    }\n  }\n\n  handler = this._events[type];\n\n  if (isUndefined(handler))\n    return false;\n\n  if (isFunction(handler)) {\n    switch (arguments.length) {\n      // fast cases\n      case 1:\n        handler.call(this);\n        break;\n      case 2:\n        handler.call(this, arguments[1]);\n        break;\n      case 3:\n        handler.call(this, arguments[1], arguments[2]);\n        break;\n      // slower\n      default:\n        args = Array.prototype.slice.call(arguments, 1);\n        handler.apply(this, args);\n    }\n  } else if (isObject(handler)) {\n    args = Array.prototype.slice.call(arguments, 1);\n    listeners = handler.slice();\n    len = listeners.length;\n    for (i = 0; i < len; i++)\n      listeners[i].apply(this, args);\n  }\n\n  return true;\n};\n\nEventEmitter.prototype.addListener = function(type, listener) {\n  var m;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events)\n    this._events = {};\n\n  // To avoid recursion in the case that type === \"newListener\"! Before\n  // adding it to the listeners, first emit \"newListener\".\n  if (this._events.newListener)\n    this.emit('newListener', type,\n              isFunction(listener.listener) ?\n              listener.listener : listener);\n\n  if (!this._events[type])\n    // Optimize the case of one listener. Don't need the extra array object.\n    this._events[type] = listener;\n  else if (isObject(this._events[type]))\n    // If we've already got an array, just append.\n    this._events[type].push(listener);\n  else\n    // Adding the second element, need to change to array.\n    this._events[type] = [this._events[type], listener];\n\n  // Check for listener leak\n  if (isObject(this._events[type]) && !this._events[type].warned) {\n    if (!isUndefined(this._maxListeners)) {\n      m = this._maxListeners;\n    } else {\n      m = EventEmitter.defaultMaxListeners;\n    }\n\n    if (m && m > 0 && this._events[type].length > m) {\n      this._events[type].warned = true;\n      console.error('(node) warning: possible EventEmitter memory ' +\n                    'leak detected. %d listeners added. ' +\n                    'Use emitter.setMaxListeners() to increase limit.',\n                    this._events[type].length);\n      if (typeof console.trace === 'function') {\n        // not supported in IE 10\n        console.trace();\n      }\n    }\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.once = function(type, listener) {\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  var fired = false;\n\n  function g() {\n    this.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  g.listener = listener;\n  this.on(type, g);\n\n  return this;\n};\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener = function(type, listener) {\n  var list, position, length, i;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events || !this._events[type])\n    return this;\n\n  list = this._events[type];\n  length = list.length;\n  position = -1;\n\n  if (list === listener ||\n      (isFunction(list.listener) && list.listener === listener)) {\n    delete this._events[type];\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n\n  } else if (isObject(list)) {\n    for (i = length; i-- > 0;) {\n      if (list[i] === listener ||\n          (list[i].listener && list[i].listener === listener)) {\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0)\n      return this;\n\n    if (list.length === 1) {\n      list.length = 0;\n      delete this._events[type];\n    } else {\n      list.splice(position, 1);\n    }\n\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  var key, listeners;\n\n  if (!this._events)\n    return this;\n\n  // not listening for removeListener, no need to emit\n  if (!this._events.removeListener) {\n    if (arguments.length === 0)\n      this._events = {};\n    else if (this._events[type])\n      delete this._events[type];\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    for (key in this._events) {\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = {};\n    return this;\n  }\n\n  listeners = this._events[type];\n\n  if (isFunction(listeners)) {\n    this.removeListener(type, listeners);\n  } else if (listeners) {\n    // LIFO order\n    while (listeners.length)\n      this.removeListener(type, listeners[listeners.length - 1]);\n  }\n  delete this._events[type];\n\n  return this;\n};\n\nEventEmitter.prototype.listeners = function(type) {\n  var ret;\n  if (!this._events || !this._events[type])\n    ret = [];\n  else if (isFunction(this._events[type]))\n    ret = [this._events[type]];\n  else\n    ret = this._events[type].slice();\n  return ret;\n};\n\nEventEmitter.prototype.listenerCount = function(type) {\n  if (this._events) {\n    var evlistener = this._events[type];\n\n    if (isFunction(evlistener))\n      return 1;\n    else if (evlistener)\n      return evlistener.length;\n  }\n  return 0;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  return emitter.listenerCount(type);\n};\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n","/**\n * This module unifies handling of mouse whee event accross different browsers\n *\n * See https://developer.mozilla.org/en-US/docs/Web/Reference/Events/wheel?redirectlocale=en-US&redirectslug=DOM%2FMozilla_event_reference%2Fwheel\n * for more details\n *\n * Usage:\n *  var addWheelListener = require('wheel');\n *  addWheelListener(domElement, function (e) {\n *    // mouse wheel event\n *  });\n */\nmodule.exports = addWheelListener;\n\nvar prefix = \"\", _addEventListener, onwheel, support;\n\n// detect event model\nif ( window.addEventListener ) {\n    _addEventListener = \"addEventListener\";\n} else {\n    _addEventListener = \"attachEvent\";\n    prefix = \"on\";\n}\n\n// detect available wheel event\nsupport = \"onwheel\" in document.createElement(\"div\") ? \"wheel\" : // Modern browsers support \"wheel\"\n          document.onmousewheel !== undefined ? \"mousewheel\" : // Webkit and IE support at least \"mousewheel\"\n          \"DOMMouseScroll\"; // let's assume that remaining browsers are older Firefox\n\nfunction addWheelListener( elem, callback, useCapture ) {\n    _addWheelListener( elem, support, callback, useCapture );\n\n    // handle MozMousePixelScroll in older Firefox\n    if( support == \"DOMMouseScroll\" ) {\n        _addWheelListener( elem, \"MozMousePixelScroll\", callback, useCapture );\n    }\n};\n\nfunction _addWheelListener( elem, eventName, callback, useCapture ) {\n  elem[ _addEventListener ]( prefix + eventName, support == \"wheel\" ? callback : function( originalEvent ) {\n    !originalEvent && ( originalEvent = window.event );\n\n    // create a normalized event object\n    var event = {\n      // keep a ref to the original event object\n      originalEvent: originalEvent,\n      target: originalEvent.target || originalEvent.srcElement,\n      type: \"wheel\",\n      deltaMode: originalEvent.type == \"MozMousePixelScroll\" ? 0 : 1,\n      deltaX: 0,\n      delatZ: 0,\n      preventDefault: function() {\n        originalEvent.preventDefault ?\n            originalEvent.preventDefault() :\n            originalEvent.returnValue = false;\n      }\n    };\n\n    // calculate deltaY (and deltaX) according to the event\n    if ( support == \"mousewheel\" ) {\n      event.deltaY = - 1/40 * originalEvent.wheelDelta;\n      // Webkit also support wheelDeltaX\n      originalEvent.wheelDeltaX && ( event.deltaX = - 1/40 * originalEvent.wheelDeltaX );\n    } else {\n      event.deltaY = originalEvent.detail;\n    }\n\n    // it's time to fire the callback\n    return callback( event );\n\n  }, useCapture || false );\n}\n","var Emitter = require('events/')\nvar wheel = require('wheel')\n\nmodule.exports = getScroller\n\nfunction getScroller(element, preventDefault) {\n  var scroll = new Emitter\n\n  scroll.flush = flush\n  flush()\n\n  if (typeof window === 'undefined') {\n    return scroll\n  }\n\n  element = element || window\n  wheel(element, onscroll, false)\n\n  return scroll\n\n  function flush() {\n    scroll[0] =\n    scroll[1] =\n    scroll[2] = 0\n  }\n\n  function onscroll(e) {\n    // Normal/Line scrolling\n    var scale = e.deltaMode === 1 ? 12 : 1\n\n    scroll[0] += scale * (e.deltaX || 0)\n    scroll[1] += scale * (e.deltaY || 0)\n    scroll[2] += scale * (e.deltaZ || 0)\n    scroll.emit('scroll', scroll)\n\n    if (!preventDefault) return\n    if (!e.preventDefault) return\n\n    e.preventDefault()\n    if (e.stopPropagation) e.stopPropagation()\n  }\n}\n","var Emitter = require('events/')\n\nmodule.exports = attach\n\nfunction attach(element, listener) {\n  var position = new Emitter\n\n  position.x = 0\n  position.y = 0\n  position.prevX = 0\n  position.prevY = 0\n  position.flush = flush\n\n  if (typeof window === 'undefined') {\n    return position\n  }\n\n  listener = listener || element || window\n  element  = element  || document.body\n  listener.addEventListener('mousemove', (\n       element === document.body\n    || element === window\n  ) ? function(e) {\n      position.prevX = position.x\n      position.prevY = position.y\n      position.x = e.clientX\n      position.y = e.clientY\n      position.emit('move', e)\n    }\n    : function(e) {\n      position.prevX = position.x\n      position.prevY = position.y\n      var bounds = element.getBoundingClientRect()\n      position.x = e.clientX - bounds.left\n      position.y = e.clientY - bounds.top\n      position.emit('move', e)\n    }\n  , false)\n\n  return position\n\n  function flush() {\n    this.prevX = this.x\n    this.prevY = this.y\n  }\n}\n","var Emitter = require('events/')\nvar map = [\n    'left'\n  , 'middle'\n  , 'right'\n]\n\nmodule.exports = pressed\n\nfunction pressed(element, preventDefault) {\n  var mouse = new Emitter\n\n  mouse.left = false\n  mouse.right = false\n  mouse.middle = false\n\n  if (typeof window !== 'undefined') {\n    element = element || window\n    element.addEventListener('mousedown', mousedown, false)\n    element.addEventListener('mouseup', mouseup, false)\n\n    if (preventDefault) {\n      element.addEventListener('contextmenu', function(e) {\n        return e.preventDefault && e.preventDefault() && false\n      }, false)\n    }\n  }\n\n  return mouse\n\n  function mousedown(e) {\n    mouse.right = false\n    mouse[map[e.button]] = true\n    mouse.emit('down', e)\n\n    if (!preventDefault) return\n    if (!e.preventDefault) return false\n    e.preventDefault()\n    e.stopPropagation()\n  }\n\n  function mouseup(e) {\n    mouse.right = false\n    mouse[map[e.button]] = false\n    mouse.emit('up', e)\n\n    if (!preventDefault) return\n    if (!e.preventDefault) return\n    e.preventDefault()\n    e.stopPropagation()\n  }\n}\n","var ua = typeof window !== 'undefined' ? window.navigator.userAgent : ''\n  , isOSX = /OS X/.test(ua)\n  , isOpera = /Opera/.test(ua)\n  , maybeFirefox = !/like Gecko/.test(ua) && !isOpera\n\nvar i, output = module.exports = {\n  0:  isOSX ? '<menu>' : '<UNK>'\n, 1:  '<mouse 1>'\n, 2:  '<mouse 2>'\n, 3:  '<break>'\n, 4:  '<mouse 3>'\n, 5:  '<mouse 4>'\n, 6:  '<mouse 5>'\n, 8:  '<backspace>'\n, 9:  '<tab>'\n, 12: '<clear>'\n, 13: '<enter>'\n, 16: '<shift>'\n, 17: '<control>'\n, 18: '<alt>'\n, 19: '<pause>'\n, 20: '<caps-lock>'\n, 21: '<ime-hangul>'\n, 23: '<ime-junja>'\n, 24: '<ime-final>'\n, 25: '<ime-kanji>'\n, 27: '<escape>'\n, 28: '<ime-convert>'\n, 29: '<ime-nonconvert>'\n, 30: '<ime-accept>'\n, 31: '<ime-mode-change>'\n, 27: '<escape>'\n, 32: '<space>'\n, 33: '<page-up>'\n, 34: '<page-down>'\n, 35: '<end>'\n, 36: '<home>'\n, 37: '<left>'\n, 38: '<up>'\n, 39: '<right>'\n, 40: '<down>'\n, 41: '<select>'\n, 42: '<print>'\n, 43: '<execute>'\n, 44: '<snapshot>'\n, 45: '<insert>'\n, 46: '<delete>'\n, 47: '<help>'\n, 91: '<meta>'  // meta-left -- no one handles left and right properly, so we coerce into one.\n, 92: '<meta>'  // meta-right\n, 93: isOSX ? '<meta>' : '<menu>'      // chrome,opera,safari all report this for meta-right (osx mbp).\n, 95: '<sleep>'\n, 106: '<num-*>'\n, 107: '<num-+>'\n, 108: '<num-enter>'\n, 109: '<num-->'\n, 110: '<num-.>'\n, 111: '<num-/>'\n, 144: '<num-lock>'\n, 145: '<scroll-lock>'\n, 160: '<shift-left>'\n, 161: '<shift-right>'\n, 162: '<control-left>'\n, 163: '<control-right>'\n, 164: '<alt-left>'\n, 165: '<alt-right>'\n, 166: '<browser-back>'\n, 167: '<browser-forward>'\n, 168: '<browser-refresh>'\n, 169: '<browser-stop>'\n, 170: '<browser-search>'\n, 171: '<browser-favorites>'\n, 172: '<browser-home>'\n\n  // ff/osx reports '<volume-mute>' for '-'\n, 173: isOSX && maybeFirefox ? '-' : '<volume-mute>'\n, 174: '<volume-down>'\n, 175: '<volume-up>'\n, 176: '<next-track>'\n, 177: '<prev-track>'\n, 178: '<stop>'\n, 179: '<play-pause>'\n, 180: '<launch-mail>'\n, 181: '<launch-media-select>'\n, 182: '<launch-app 1>'\n, 183: '<launch-app 2>'\n, 186: ';'\n, 187: '='\n, 188: ','\n, 189: '-'\n, 190: '.'\n, 191: '/'\n, 192: '`'\n, 219: '['\n, 220: '\\\\'\n, 221: ']'\n, 222: \"'\"\n, 223: '<meta>'\n, 224: '<meta>'       // firefox reports meta here.\n, 226: '<alt-gr>'\n, 229: '<ime-process>'\n, 231: isOpera ? '`' : '<unicode>'\n, 246: '<attention>'\n, 247: '<crsel>'\n, 248: '<exsel>'\n, 249: '<erase-eof>'\n, 250: '<play>'\n, 251: '<zoom>'\n, 252: '<no-name>'\n, 253: '<pa-1>'\n, 254: '<clear>'\n}\n\nfor(i = 58; i < 65; ++i) {\n  output[i] = String.fromCharCode(i)\n}\n\n// 0-9\nfor(i = 48; i < 58; ++i) {\n  output[i] = (i - 48)+''\n}\n\n// A-Z\nfor(i = 65; i < 91; ++i) {\n  output[i] = String.fromCharCode(i)\n}\n\n// num0-9\nfor(i = 96; i < 106; ++i) {\n  output[i] = '<num-'+(i - 96)+'>'\n}\n\n// F1-F24\nfor(i = 112; i < 136; ++i) {\n  output[i] = 'F'+(i-111)\n}\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","var keys = require('vkey')\nvar list = Object.keys(keys)\nvar down = {}\n\nreset()\n\nmodule.exports = pressed\n\nif (process.browser) {\n  window.addEventListener('keydown', keydown, false)\n  window.addEventListener('keyup', keyup, false)\n  window.addEventListener('blur', reset, false)\n}\n\nfunction pressed(key) {\n  return key\n    ? down[key]\n    : down\n}\n\nfunction reset() {\n  list.forEach(function(code) {\n    down[keys[code]] = false\n  })\n}\n\nfunction keyup(e) {\n  down[keys[e.keyCode]] = false\n}\n\nfunction keydown(e) {\n  down[keys[e.keyCode]] = true\n}\n","var createCamera = require('orbit-camera')\nvar createScroll = require('scroll-speed')\nvar mp = require('mouse-position')\nvar mb = require('mouse-pressed')\nvar key = require('key-pressed')\n\nvar panSpeed = 1\n\nmodule.exports = attachCamera\n\nfunction attachCamera(canvas, opts) {\n  opts = opts || {}\n  opts.pan = opts.pan !== false\n  opts.scale = opts.scale !== false\n  opts.rotate = opts.rotate !== false\n\n  var scroll = createScroll(canvas, opts.scale)\n  var mbut = mb(canvas, opts.rotate)\n  var mpos = mp(canvas)\n  var camera = createCamera(\n      [0, 10, 30]\n    , [0, 0, 0]\n    , [0, 1, 0]\n  )\n\n  camera.tick = tick\n\n  return camera\n\n  function tick() {\n    var ctrl = key('<control>') || key('<alt>')\n    var alt = key('<shift>')\n    var height = canvas.height\n    var width = canvas.width\n\n    if (opts.rotate && mbut.left && !ctrl && !alt) {\n      camera.rotate(\n          [ mpos.x / width - 0.5, mpos.y / height - 0.5 ]\n        , [ mpos.prevX / width - 0.5, mpos.prevY / height - 0.5 ]\n      )\n    }\n\n    if (opts.pan && mbut.right || (mbut.left && ctrl && !alt)) {\n      camera.pan([\n          panSpeed * (mpos.x - mpos.prevX) / width\n        , panSpeed * (mpos.y - mpos.prevY) / height\n      ])\n    }\n\n    if (opts.scale && scroll[1]) {\n      camera.distance *= Math.exp(scroll[1] / height)\n    }\n\n    if (opts.scale && (mbut.middle || (mbut.left && !ctrl && alt))) {\n      var d = mpos.y - mpos.prevY\n      if (!d) return;\n\n      camera.distance *= Math.exp(d / height)\n    }\n\n    scroll.flush()\n    mpos.flush()\n  }\n}\n","!function(e,t){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define(\"OBJ\",[],t):\"object\"==typeof exports?exports.OBJ=t():e.OBJ=t()}(\"undefined\"!=typeof self?self:this,function(){return function(e){function t(a){if(r[a])return r[a].exports;var n=r[a]={i:a,l:!1,exports:{}};return e[a].call(n.exports,n,n.exports,t),n.l=!0,n.exports}var r={};return t.m=e,t.c=r,t.d=function(exports,e,r){t.o(exports,e)||Object.defineProperty(exports,e,{configurable:!1,enumerable:!0,get:r})},t.n=function(e){var r=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(r,\"a\",r),r},t.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},t.p=\"/\",t(t.s=3)}([function(e,exports,t){\"use strict\";function r(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}function a(e){switch(e){case\"BYTE\":case\"UNSIGNED_BYTE\":return 1;case\"SHORT\":case\"UNSIGNED_SHORT\":return 2;case\"FLOAT\":return 4}}Object.defineProperty(exports,\"__esModule\",{value:!0});var n=exports.Layout=function e(){r(this,e);for(var t=arguments.length,a=Array(t),n=0;n<t;n++)a[n]=arguments[n];this.attributes=a;var s=0,l=0,o=!0,u=!1,c=void 0;try{for(var f,h=a[Symbol.iterator]();!(o=(f=h.next()).done);o=!0){var p=f.value;if(this[p.key])throw new i(p);s%p.sizeOfType!=0&&(s+=p.sizeOfType-s%p.sizeOfType),this[p.key]={attribute:p,size:p.size,type:p.type,normalized:p.normalized,offset:s},s+=p.sizeInBytes,l=Math.max(l,p.sizeOfType)}}catch(e){u=!0,c=e}finally{try{!o&&h.return&&h.return()}finally{if(u)throw c}}s%l!=0&&(s+=l-s%l),this.stride=s;var v=!0,d=!1,y=void 0;try{for(var m,M=a[Symbol.iterator]();!(v=(m=M.next()).done);v=!0){this[m.value.key].stride=this.stride}}catch(e){d=!0,y=e}finally{try{!v&&M.return&&M.return()}finally{if(d)throw y}}},i=function e(t){r(this,e),this.message=\"found duplicate attribute: \"+t.key},s=function e(t,n,i){arguments.length>3&&void 0!==arguments[3]&&arguments[3];r(this,e),this.key=t,this.size=n,this.type=i,this.normalized=!1,this.sizeOfType=a(i),this.sizeInBytes=this.sizeOfType*n};n.POSITION=new s(\"position\",3,\"FLOAT\"),n.NORMAL=new s(\"normal\",3,\"FLOAT\"),n.TANGENT=new s(\"tangent\",3,\"FLOAT\"),n.BITANGENT=new s(\"bitangent\",3,\"FLOAT\"),n.UV=new s(\"uv\",2,\"FLOAT\"),n.MATERIAL_INDEX=new s(\"materialIndex\",1,\"SHORT\"),n.MATERIAL_ENABLED=new s(\"materialEnabled\",1,\"UNSIGNED_SHORT\"),n.AMBIENT=new s(\"ambient\",3,\"FLOAT\"),n.DIFFUSE=new s(\"diffuse\",3,\"FLOAT\"),n.SPECULAR=new s(\"specular\",3,\"FLOAT\"),n.SPECULAR_EXPONENT=new s(\"specularExponent\",3,\"FLOAT\"),n.EMISSIVE=new s(\"emissive\",3,\"FLOAT\"),n.TRANSMISSION_FILTER=new s(\"transmissionFilter\",3,\"FLOAT\"),n.DISSOLVE=new s(\"dissolve\",1,\"FLOAT\"),n.ILLUMINATION=new s(\"illumination\",1,\"UNSIGNED_SHORT\"),n.REFRACTION_INDEX=new s(\"refractionIndex\",1,\"FLOAT\"),n.SHARPNESS=new s(\"sharpness\",1,\"FLOAT\"),n.MAP_DIFFUSE=new s(\"mapDiffuse\",1,\"SHORT\"),n.MAP_AMBIENT=new s(\"mapAmbient\",1,\"SHORT\"),n.MAP_SPECULAR=new s(\"mapSpecular\",1,\"SHORT\"),n.MAP_SPECULAR_EXPONENT=new s(\"mapSpecularExponent\",1,\"SHORT\"),n.MAP_DISSOLVE=new s(\"mapDissolve\",1,\"SHORT\"),n.ANTI_ALIASING=new s(\"antiAliasing\",1,\"UNSIGNED_SHORT\"),n.MAP_BUMP=new s(\"mapBump\",1,\"SHORT\"),n.MAP_DISPLACEMENT=new s(\"mapDisplacement\",1,\"SHORT\"),n.MAP_DECAL=new s(\"mapDecal\",1,\"SHORT\"),n.MAP_EMISSIVE=new s(\"mapEmissive\",1,\"SHORT\")},function(e,exports,t){\"use strict\";function r(e){if(Array.isArray(e)){for(var t=0,r=Array(e.length);t<e.length;t++)r[t]=e[t];return r}return Array.from(e)}function a(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}Object.defineProperty(exports,\"__esModule\",{value:!0});var n=function(){function e(e,t){for(var r=0;r<t.length;r++){var a=t[r];a.enumerable=a.enumerable||!1,a.configurable=!0,\"value\"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,r,a){return r&&e(t.prototype,r),a&&e(t,a),t}}(),i=t(0),s=function(){function e(t,n){a(this,e),n=n||{},n.materials=n.materials||{},n.enableWTextureCoord=!!n.enableWTextureCoord,n.indicesPerMaterial=!!n.indicesPerMaterial;var i=this;i.vertices=[],i.vertexNormals=[],i.textures=[],i.indices=[],i.textureStride=n.enableWTextureCoord?3:2,this.name=\"\";var s=[],l=[],o=[],u={},c=[],f={},h=-1,p=0;u.verts=[],u.norms=[],u.textures=[],u.hashindices={},u.indices=[[]],u.materialIndices=[],u.index=0;for(var v=/^v\\s/,d=/^vn\\s/,y=/^vt\\s/,m=/^f\\s/,M=/\\s+/,b=/^usemtl/,x=t.split(\"\\n\"),I=0;I<x.length;I++){var A=x[I].trim();if(A&&!A.startsWith(\"#\")){var _=A.split(M);if(_.shift(),v.test(A))s.push.apply(s,r(_));else if(d.test(A))l.push.apply(l,r(_));else if(y.test(A)){var k=_;_.length>2&&!n.enableWTextureCoord?k=_.slice(0,2):2===_.length&&n.enableWTextureCoord&&k.push(0),o.push.apply(o,r(k))}else if(b.test(A)){var T=_[0];T in f||(c.push(T),f[T]=c.length-1,n.indicesPerMaterial&&f[T]>0&&u.indices.push([])),h=f[T],n.indicesPerMaterial&&(p=h)}else if(m.test(A))for(var w=!1,F=0,S=_.length;F<S;F++){3!==F||w||(F=2,w=!0);var E=_[0]+\",\"+h,g=_[F]+\",\"+h;if(g in u.hashindices)u.indices[p].push(u.hashindices[g]);else{var O=_[F].split(\"/\"),B=O.length-1;if(u.verts.push(+s[3*(O[0]-1)+0]),u.verts.push(+s[3*(O[0]-1)+1]),u.verts.push(+s[3*(O[0]-1)+2]),o.length){var L=n.enableWTextureCoord?3:2;u.textures.push(+o[(O[1]-1)*L+0]),u.textures.push(+o[(O[1]-1)*L+1]),n.enableWTextureCoord&&u.textures.push(+o[(O[1]-1)*L+2])}u.norms.push(+l[3*(O[B]-1)+0]),u.norms.push(+l[3*(O[B]-1)+1]),u.norms.push(+l[3*(O[B]-1)+2]),u.materialIndices.push(h),u.hashindices[g]=u.index,u.indices[p].push(u.hashindices[g]),u.index+=1}3===F&&w&&u.indices[p].push(u.hashindices[E])}}}i.vertices=u.verts,i.vertexNormals=u.norms,i.textures=u.textures,i.vertexMaterialIndices=u.materialIndices,i.indices=n.indicesPerMaterial?u.indices:u.indices[p],i.materialNames=c,i.materialIndices=f,i.materialsByIndex={},n.calcTangentsAndBitangents&&this.calculateTangentsAndBitangents()}return n(e,[{key:\"calculateTangentsAndBitangents\",value:function(){var e={};e.tangents=[].concat(r(new Array(this.vertices.length))).map(function(e){return 0}),e.bitangents=[].concat(r(new Array(this.vertices.length))).map(function(e){return 0});var t=void 0;t=Array.isArray(this.indices[0])?[].concat.apply([],this.indices):this.indices;for(var a=this.vertices,n=this.vertexNormals,i=this.textures,s=0;s<t.length;s+=3){var l=t[s+0],o=t[s+1],u=t[s+2],c=a[3*l+0],f=a[3*l+1],h=a[3*l+2],p=i[2*l+0],v=i[2*l+1],d=a[3*o+0],y=a[3*o+1],m=a[3*o+2],M=i[2*o+0],b=i[2*o+1],x=a[3*u+0],I=a[3*u+1],A=a[3*u+2],_=i[2*u+0],k=i[2*u+1],T=d-c,w=y-f,F=m-h,S=x-c,E=I-f,g=A-h,O=M-p,B=b-v,L=_-p,N=k-v,R=O*N-B*L,P=1/(Math.abs(R<1e-4)?1:R),D=(T*N-S*B)*P,C=(w*N-E*B)*P,U=(F*N-g*B)*P,j=(S*O-T*L)*P,z=(E*O-w*L)*P,H=(g*O-F*L)*P,W=n[3*l+0],G=n[3*l+1],V=n[3*l+2],K=n[3*o+0],q=n[3*o+1],X=n[3*o+2],Y=n[3*u+0],J=n[3*u+1],Q=n[3*u+2],Z=D*W+C*G+U*V,ee=D*K+C*q+U*X,te=D*Y+C*J+U*Q,re=D-W*Z,ae=C-G*Z,ne=U-V*Z,ie=D-K*ee,se=C-q*ee,le=U-X*ee,oe=D-Y*te,ue=C-J*te,ce=U-Q*te,fe=Math.sqrt(re*re+ae*ae+ne*ne),he=Math.sqrt(ie*ie+se*se+le*le),pe=Math.sqrt(oe*oe+ue*ue+ce*ce),ve=j*W+z*G+H*V,de=j*K+z*q+H*X,ye=j*Y+z*J+H*Q,me=j-W*ve,Me=z-G*ve,be=H-V*ve,xe=j-K*de,Ie=z-q*de,Ae=H-X*de,_e=j-Y*ye,ke=z-J*ye,Te=H-Q*ye,we=Math.sqrt(me*me+Me*Me+be*be),Fe=Math.sqrt(xe*xe+Ie*Ie+Ae*Ae),Se=Math.sqrt(_e*_e+ke*ke+Te*Te);e.tangents[3*l+0]+=re/fe,e.tangents[3*l+1]+=ae/fe,e.tangents[3*l+2]+=ne/fe,e.tangents[3*o+0]+=ie/he,e.tangents[3*o+1]+=se/he,e.tangents[3*o+2]+=le/he,e.tangents[3*u+0]+=oe/pe,e.tangents[3*u+1]+=ue/pe,e.tangents[3*u+2]+=ce/pe,e.bitangents[3*l+0]+=me/we,e.bitangents[3*l+1]+=Me/we,e.bitangents[3*l+2]+=be/we,e.bitangents[3*o+0]+=xe/Fe,e.bitangents[3*o+1]+=Ie/Fe,e.bitangents[3*o+2]+=Ae/Fe,e.bitangents[3*u+0]+=_e/Se,e.bitangents[3*u+1]+=ke/Se,e.bitangents[3*u+2]+=Te/Se}this.tangents=e.tangents,this.bitangents=e.bitangents}},{key:\"makeBufferData\",value:function(e){var t=this.vertices.length/3,r=new ArrayBuffer(e.stride*t);r.numItems=t;for(var a=new DataView(r),n=0,s=0;n<t;n++){s=n*e.stride;var l=!0,o=!1,u=void 0;try{for(var c,f=e.attributes[Symbol.iterator]();!(l=(c=f.next()).done);l=!0){var h=c.value,p=s+e[h.key].offset;switch(h.key){case i.Layout.POSITION.key:a.setFloat32(p,this.vertices[3*n],!0),a.setFloat32(p+4,this.vertices[3*n+1],!0),a.setFloat32(p+8,this.vertices[3*n+2],!0);break;case i.Layout.UV.key:a.setFloat32(p,this.textures[2*n],!0),a.setFloat32(p+4,this.vertices[2*n+1],!0);break;case i.Layout.NORMAL.key:a.setFloat32(p,this.vertexNormals[3*n],!0),a.setFloat32(p+4,this.vertexNormals[3*n+1],!0),a.setFloat32(p+8,this.vertexNormals[3*n+2],!0);break;case i.Layout.MATERIAL_INDEX.key:a.setInt16(p,this.vertexMaterialIndices[n],!0);break;case i.Layout.AMBIENT.key:var v=this.vertexMaterialIndices[n],d=this.materialsByIndex[v];if(!d)break;a.setFloat32(p,d.ambient[0],!0),a.setFloat32(p+4,d.ambient[1],!0),a.setFloat32(p+8,d.ambient[2],!0);break;case i.Layout.DIFFUSE.key:var y=this.vertexMaterialIndices[n],m=this.materialsByIndex[y];if(!m)break;a.setFloat32(p,m.diffuse[0],!0),a.setFloat32(p+4,m.diffuse[1],!0),a.setFloat32(p+8,m.diffuse[2],!0);break;case i.Layout.SPECULAR.key:var M=this.vertexMaterialIndices[n],b=this.materialsByIndex[M];if(!b)break;a.setFloat32(p,b.specular[0],!0),a.setFloat32(p+4,b.specular[1],!0),a.setFloat32(p+8,b.specular[2],!0);break;case i.Layout.SPECULAR_EXPONENT.key:var x=this.vertexMaterialIndices[n],I=this.materialsByIndex[x];if(!I)break;a.setFloat32(p,I.specularExponent,!0);break;case i.Layout.EMISSIVE.key:var A=this.vertexMaterialIndices[n],_=this.materialsByIndex[A];if(!_)break;a.setFloat32(p,_.emissive[0],!0),a.setFloat32(p+4,_.emissive[1],!0),a.setFloat32(p+8,_.emissive[2],!0);break;case i.Layout.TRANSMISSION_FILTER.key:var k=this.vertexMaterialIndices[n],T=this.materialsByIndex[k];if(!T)break;a.setFloat32(p,T.transmissionFilter[0],!0),a.setFloat32(p+4,T.transmissionFilter[1],!0),a.setFloat32(p+8,T.transmissionFilter[2],!0);break;case i.Layout.DISSOLVE.key:var w=this.vertexMaterialIndices[n],F=this.materialsByIndex[w];if(!F)break;a.setFloat32(p,F.dissolve,!0);break;case i.Layout.ILLUMINATION.key:var S=this.vertexMaterialIndices[n],E=this.materialsByIndex[S];if(!E)break;a.setInt16(p,E.illumination,!0);break;case i.Layout.REFRACTION_INDEX.key:var g=this.vertexMaterialIndices[n],O=this.materialsByIndex[g];if(!O)break;a.setFloat32(p,O.refractionIndex,!0);break;case i.Layout.SHARPNESS.key:var B=this.vertexMaterialIndices[n],L=this.materialsByIndex[B];if(!L)break;a.setFloat32(p,L.sharpness,!0);break;case i.Layout.ANTI_ALIASING.key:var N=this.vertexMaterialIndices[n],R=this.materialsByIndex[N];if(!R)break;a.setInt16(p,R.antiAliasing,!0)}}}catch(e){o=!0,u=e}finally{try{!l&&f.return&&f.return()}finally{if(o)throw u}}}return r}},{key:\"makeIndexBufferData\",value:function(){var e=new Uint16Array(this.indices);return e.numItems=this.indices.length,e}},{key:\"addMaterialLibrary\",value:function(e){for(var t in e.materials)if(t in this.materialIndices){var r=e.materials[t],a=this.materialIndices[r.name];this.materialsByIndex[a]=r}}}]),e}();exports.default=s},function(e,exports,t){\"use strict\";function r(e){return Array.isArray(e)?e:Array.from(e)}function a(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}Object.defineProperty(exports,\"__esModule\",{value:!0});var n=function(){function e(e,t){for(var r=0;r<t.length;r++){var a=t[r];a.enumerable=a.enumerable||!1,a.configurable=!0,\"value\"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,r,a){return r&&e(t.prototype,r),a&&e(t,a),t}}(),i=exports.Material=function e(t){a(this,e),this.name=t,this.ambient=[0,0,0],this.diffuse=[0,0,0],this.specular=[0,0,0],this.emissive=[0,0,0],this.transmissionFilter=[0,0,0],this.dissolve=0,this.specularExponent=0,this.transparency=0,this.illumination=0,this.refractionIndex=1,this.sharpness=0,this.mapDiffuse=null,this.mapAmbient=null,this.mapSpecular=null,this.mapSpecularExponent=null,this.mapDissolve=null,this.antiAliasing=!1,this.mapBump=null,this.mapDisplacement=null,this.mapDecal=null,this.mapEmissive=null,this.mapReflections=[]};exports.MaterialLibrary=function(){function e(t){a(this,e),this.data=t,this.currentMaterial=null,this.materials={},this.parse()}return n(e,[{key:\"parse_newmtl\",value:function(e){var t=e[0];this.currentMaterial=new i(t),this.materials[t]=this.currentMaterial}},{key:\"parseColor\",value:function(e){if(\"spectral\"!=e[0]&&\"xyz\"!=e[0]){if(3==e.length)return e.map(parseFloat);var t=parseFloat(e[0]);return[t,t,t]}}},{key:\"parse_Ka\",value:function(e){this.currentMaterial.ambient=this.parseColor(e)}},{key:\"parse_Kd\",value:function(e){this.currentMaterial.diffuse=this.parseColor(e)}},{key:\"parse_Ks\",value:function(e){this.currentMaterial.specular=this.parseColor(e)}},{key:\"parse_Ke\",value:function(e){this.currentMaterial.emissive=this.parseColor(e)}},{key:\"parse_Tf\",value:function(e){this.currentMaterial.transmissionFilter=this.parseColor(e)}},{key:\"parse_d\",value:function(e){this.currentMaterial.dissolve=parseFloat(e.pop())}},{key:\"parse_illum\",value:function(e){this.currentMaterial.illumination=parseInt(e[0])}},{key:\"parse_Ni\",value:function(e){this.currentMaterial.refractionIndex=parseFloat(e[0])}},{key:\"parse_Ns\",value:function(e){this.currentMaterial.specularExponent=parseInt(e[0])}},{key:\"parse_sharpness\",value:function(e){this.currentMaterial.sharpness=parseInt(e[0])}},{key:\"parse_cc\",value:function(e,t){t.colorCorrection=\"on\"==e[0]}},{key:\"parse_blendu\",value:function(e,t){t.horizontalBlending=\"on\"==e[0]}},{key:\"parse_blendv\",value:function(e,t){t.verticalBlending=\"on\"==e[0]}},{key:\"parse_boost\",value:function(e,t){t.boostMipMapSharpness=parseFloat(e[0])}},{key:\"parse_mm\",value:function(e,t){t.modifyTextureMap.brightness=parseFloat(e[0]),t.modifyTextureMap.contrast=parseFloat(e[1])}},{key:\"parse_ost\",value:function(e,t,r){for(;e.length<3;)e.push(r);t.u=parseFloat(e[0]),t.v=parseFloat(e[1]),t.w=parseFloat(e[2])}},{key:\"parse_o\",value:function(e,t){this.parse_ost(e,t.offset,0)}},{key:\"parse_s\",value:function(e,t){this.parse_ost(e,t.scale,1)}},{key:\"parse_t\",value:function(e,t){this.parse_ost(e,t.turbulence,0)}},{key:\"parse_texres\",value:function(e,t){t.textureResolution=parseFloat(e[0])}},{key:\"parse_clamp\",value:function(e,t){t.clamp=\"on\"==e[0]}},{key:\"parse_bm\",value:function(e,t){t.bumpMultiplier=parseFloat(e[0])}},{key:\"parse_imfchan\",value:function(e,t){t.imfChan=e[0]}},{key:\"parse_type\",value:function(e,t){t.reflectionType=e[0]}},{key:\"parseOptions\",value:function(e){var t={colorCorrection:!1,horizontalBlending:!0,verticalBlending:!0,boostMipMapSharpness:0,modifyTextureMap:{brightness:0,contrast:1},offset:{u:0,v:0,w:0},scale:{u:1,v:1,w:1},turbulence:{u:0,v:0,w:0},clamp:!1,textureResolution:null,bumpMultiplier:1,imfChan:null},r=void 0,a=void 0,n={};for(e.reverse();e.length;){var i=e.pop();i.startsWith(\"-\")?(r=i.substr(1),n[r]=[]):n[r].push(i)}for(r in n)if(n.hasOwnProperty(r)){a=n[r];var s=this[\"parse_\"+r];s&&s.bind(this)(a,t)}return t}},{key:\"parseMap\",value:function(e){var t=void 0,a=void 0;if(e[0].startsWith(\"-\"))t=e.pop(),a=e;else{var n=r(e);t=n[0],a=n.slice(1)}return a=this.parseOptions(a),a.filename=t,a}},{key:\"parse_map_Ka\",value:function(e){this.currentMaterial.mapAmbient=this.parseMap(e)}},{key:\"parse_map_Kd\",value:function(e){this.currentMaterial.mapDiffuse=this.parseMap(e)}},{key:\"parse_map_Ks\",value:function(e){this.currentMaterial.mapSpecular=this.parseMap(e)}},{key:\"parse_map_Ke\",value:function(e){this.currentMaterial.mapEmissive=this.parseMap(e)}},{key:\"parse_map_Ns\",value:function(e){this.currentMaterial.mapSpecularExponent=this.parseMap(e)}},{key:\"parse_map_d\",value:function(e){this.currentMaterial.mapDissolve=this.parseMap(e)}},{key:\"parse_map_aat\",value:function(e){this.currentMaterial.antiAliasing=\"on\"==e[0]}},{key:\"parse_map_bump\",value:function(e){this.currentMaterial.mapBump=this.parseMap(e)}},{key:\"parse_bump\",value:function(e){this.parse_map_bump(e)}},{key:\"parse_disp\",value:function(e){this.currentMaterial.mapDisplacement=this.parseMap(e)}},{key:\"parse_decal\",value:function(e){this.currentMaterial.mapDecal=this.parseMap(e)}},{key:\"parse_refl\",value:function(e){this.currentMaterial.mapReflections.push(this.parseMap(e))}},{key:\"parse\",value:function(){var e=this.data.split(/\\r?\\n/),t=!0,a=!1,n=void 0;try{for(var i,s=e[Symbol.iterator]();!(t=(i=s.next()).done);t=!0){var l=i.value;if((l=l.trim())&&!l.startsWith(\"#\")){var o=l.split(/\\s/),u=void 0,c=o,f=r(c);u=f[0],o=f.slice(1);var h=this[\"parse_\"+u];h&&h.bind(this)(o)}}}catch(e){a=!0,n=e}finally{try{!t&&s.return&&s.return()}finally{if(a)throw n}}delete this.data,this.currentMaterial=null}}]),e}()},function(e,exports,t){e.exports=t(4)},function(e,exports,t){\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.version=exports.deleteMeshBuffers=exports.initMeshBuffers=exports.downloadMeshes=exports.downloadModels=exports.Layout=exports.MaterialLibrary=exports.Material=exports.Mesh=void 0;var r=t(1),a=function(e){return e&&e.__esModule?e:{default:e}}(r),n=t(2),i=t(0),s=t(5);exports.Mesh=a.default,exports.Material=n.Material,exports.MaterialLibrary=n.MaterialLibrary,exports.Layout=i.Layout,exports.downloadModels=s.downloadModels,exports.downloadMeshes=s.downloadMeshes,exports.initMeshBuffers=s.initMeshBuffers,exports.deleteMeshBuffers=s.deleteMeshBuffers,exports.version=\"1.1.3\"},function(e,exports,t){\"use strict\";function r(e,t){var r=[\"mapDiffuse\",\"mapAmbient\",\"mapSpecular\",\"mapDissolve\",\"mapBump\",\"mapDisplacement\",\"mapDecal\",\"mapEmissive\"];t.endsWith(\"/\")||(t+=\"/\");var a=[];for(var n in e.materials)if(e.materials.hasOwnProperty(n)){n=e.materials[n];var i=!0,s=!1,l=void 0;try{for(var o,u=r[Symbol.iterator]();!(i=(o=u.next()).done);i=!0){var c=o.value;(function(e){var r=n[e];if(!r)return\"continue\";var i=t+r.filename;a.push(fetch(i).then(function(e){if(!e.ok)throw new Error;return e.blob()}).then(function(e){var t=new Image;return t.src=URL.createObjectURL(e),r.texture=t,new Promise(function(e){return t.onload=e})}).catch(function(){}))})(c)}}catch(e){s=!0,l=e}finally{try{!i&&u.return&&u.return()}finally{if(s)throw l}}}return Promise.all(a)}function a(e){var t=[],a=!0,n=!1,i=void 0;try{for(var s,o=e[Symbol.iterator]();!(a=(s=o.next()).done);a=!0){var f=s.value;!function(e){var a=[];if(!e.obj)throw new Error('\"obj\" attribute of model object not set. The .obj file is required to be set in order to use downloadModels()');var n={};n.indicesPerMaterial=!!e.indicesPerMaterial,n.calcTangentsAndBitangents=!!e.calcTangentsAndBitangents;var i=e.name;if(!i){var s=e.obj.split(\"/\");i=s[s.length-1].replace(\".obj\",\"\")}if(a.push(Promise.resolve(i)),a.push(fetch(e.obj).then(function(e){return e.text()}).then(function(e){return new u.default(e,n)})),e.mtl){var l=e.mtl;\"boolean\"==typeof l&&(l=e.obj.replace(/\\.obj$/,\".mtl\")),a.push(fetch(l).then(function(e){return e.text()}).then(function(t){var a=new c.MaterialLibrary(t);if(!1!==e.downloadMtlTextures){var n=e.mtlTextureRoot;return n||(n=l.substr(0,l.lastIndexOf(\"/\"))),Promise.all([Promise.resolve(a),r(a,n)])}return Promise.all(Promise.resolve(a))}).then(function(e){return e[0]}))}t.push(Promise.all(a))}(f)}}catch(e){n=!0,i=e}finally{try{!a&&o.return&&o.return()}finally{if(n)throw i}}return Promise.all(t).then(function(e){var t={},r=!0,a=!1,n=void 0;try{for(var i,s=e[Symbol.iterator]();!(r=(i=s.next()).done);r=!0){var o=i.value,u=l(o,3),c=u[0],f=u[1],h=u[2];f.name=c,h&&f.addMaterialLibrary(h),t[c]=f}}catch(e){a=!0,n=e}finally{try{!r&&s.return&&s.return()}finally{if(a)throw n}}return t})}function n(e,t,r){void 0===r&&(r={});var a=[];for(var n in e){(function(t){if(!e.hasOwnProperty(t))return\"continue\";var r=e[t];a.push(fetch(r).then(function(e){return e.text()}).then(function(e){return[t,new u.default(e)]}))})(n)}Promise.all(a).then(function(e){var a=!0,n=!1,i=void 0;try{for(var s,o=e[Symbol.iterator]();!(a=(s=o.next()).done);a=!0){var u=s.value,c=l(u,2),f=c[0],h=c[1];r[f]=h}}catch(e){n=!0,i=e}finally{try{!a&&o.return&&o.return()}finally{if(n)throw i}}return t(r)})}function i(e,t){t.normalBuffer=f(e,e.ARRAY_BUFFER,t.vertexNormals,3),t.textureBuffer=f(e,e.ARRAY_BUFFER,t.textures,t.textureStride),t.vertexBuffer=f(e,e.ARRAY_BUFFER,t.vertices,3),t.indexBuffer=f(e,e.ELEMENT_ARRAY_BUFFER,t.indices,1)}function s(e,t){e.deleteBuffer(t.normalBuffer),e.deleteBuffer(t.textureBuffer),e.deleteBuffer(t.vertexBuffer),e.deleteBuffer(t.indexBuffer)}Object.defineProperty(exports,\"__esModule\",{value:!0});var l=function(){function e(e,t){var r=[],a=!0,n=!1,i=void 0;try{for(var s,l=e[Symbol.iterator]();!(a=(s=l.next()).done)&&(r.push(s.value),!t||r.length!==t);a=!0);}catch(e){n=!0,i=e}finally{try{!a&&l.return&&l.return()}finally{if(n)throw i}}return r}return function(t,r){if(Array.isArray(t))return t;if(Symbol.iterator in Object(t))return e(t,r);throw new TypeError(\"Invalid attempt to destructure non-iterable instance\")}}();exports.downloadModels=a,exports.downloadMeshes=n,exports.initMeshBuffers=i,exports.deleteMeshBuffers=s;var o=t(1),u=function(e){return e&&e.__esModule?e:{default:e}}(o),c=t(2),f=(t(0),function(e,t,r,a){var n=e.createBuffer(),i=t===e.ARRAY_BUFFER?Float32Array:Uint16Array;return e.bindBuffer(t,n),e.bufferData(t,new i(r),e.STATIC_DRAW),n.itemSize=a,n.numItems=r.length/a,n})}])});","/**\n * This module contains common functionality shared across Linguine's WebGL\n * examples.\n */\nimport { mat4 } from 'gl-matrix';\nimport * as teapot from 'teapot';\nimport * as bunny from 'bunny';\nimport cube from 'primitive-cube';\nimport icosphere from 'icosphere';\nimport * as normals from 'normals';\nimport pack from 'array-pack-2d';\nimport canvasOrbitCamera from 'canvas-orbit-camera';\nimport * as obj_loader from 'webgl-obj-loader';\n\nexport type Vec3Array = [number, number, number][];\n\n/**\n * Compile a single GLSL shader source file.\n */\nexport function compileShader(gl: WebGLRenderingContext, shaderType: number, shaderSource: string): WebGLShader {\n  // Create the shader object\n  let shader = gl.createShader(shaderType);\n  if (!shader) {\n    throw \"could not create shader\";\n  }\n\n  // Set the shader source code.\n  gl.shaderSource(shader, shaderSource);\n  console.log(shaderSource);\n  // Compile the shader\n  gl.compileShader(shader);\n\n  // Check if it compiled\n  let success = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n  if (!success) {\n    // Something went wrong during compilation; get the error\n    throw \"could not compile shader:\" + gl.getShaderInfoLog(shader);\n  }\n\n  return shader;\n}\n\n/**\n * Link two compiled shaders (a vertex shader and a fragment shader) together\n * to create a *shader program*, which can be used to issue a draw call.\n */\nexport function createProgram(gl: WebGLRenderingContext, shaders: WebGLShader[]): WebGLProgram {\n  // create a program.\n  let program = gl.createProgram();\n  if (!program) {\n    throw \"could not create new program\";\n  }\n\n  // attach the shaders.\n  shaders.forEach(function (shader: WebGLBuffer) {\n    gl.attachShader(program!, shader);\n  });\n\n  // link the program.\n  gl.linkProgram(program);\n\n  // Check if it linked.\n  let success = gl.getProgramParameter(program, gl.LINK_STATUS);\n  if (!success) {\n    // something went wrong with the link\n    throw (\"program failed to link:\" + gl.getProgramInfoLog(program));\n  }\n\n  // Delete shader objects after linked to program.\n  shaders.forEach(function (shader: WebGLBuffer) {\n    gl.deleteShader(shader);\n  });\n\n  return program;\n}\n\n/**\n * Compile and link a vertex/fragment shader pair.\n */\nexport function compileProgram(gl: WebGLRenderingContext, vtx: string, frag: string): WebGLProgram {\n  let vertexShader = compileShader(gl, gl.VERTEX_SHADER, vtx);\n  let fragmentShader = compileShader(gl, gl.FRAGMENT_SHADER, frag);\n  return createProgram(gl, [vertexShader, fragmentShader]);\n}\n\n/**\n * Compile and link a list of shaders\n */\nexport function compileMultipassProgram(gl: WebGLRenderingContext, shaders: { shader: string, context: number }[]): WebGLProgram {\n  let toReturn: WebGLShader[] = [];\n  shaders.forEach(function (shader) {\n    toReturn.push(compileShader(gl, shader.context, shader.shader));\n  });\n  return createProgram(gl, toReturn);\n}\n\n/**\n * Compute a projection matrix (placed in the `out` matrix allocation) given\n * the width and height of a viewport.\n */\nexport function projection_matrix(out: mat4, width: number, height: number) {\n  // arbitrary constants designed to give a wide field of view\n  var aspectRatio = width / height;\n  var fieldOfView = Math.PI / 4;\n  var near = .1;\n  var far = 2000;\n\n  // mat4.perspective(out, fieldOfView, aspectRatio, near, far)\n  // Do the above manually for my sanity for now\n  var f = 1.0 / Math.tan(fieldOfView / 2),\n    rangeInv = 1.0 / (near - far);\n\n  out[0] = f / aspectRatio;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = (far + near) * rangeInv;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = (2 * far * near) * rangeInv;\n  out[15] = 0;\n}\n\n/**\n * Create and fill a WebGL buffer with a typed array.\n *\n * `mode` should be either `ELEMENT_ARRAY_BUFFER` or `ARRAY_BUFFER`.\n *\n * [Source]: https://github.com/cucapra/braid/\n */\nfunction gl_buffer(gl: WebGLRenderingContext, mode: number, data: Float32Array | Uint16Array) {\n  let buf = gl.createBuffer();\n  if (!buf) {\n    throw \"could not create WebGL buffer\";\n  }\n  gl.bindBuffer(mode, buf);\n  gl.bufferData(mode, data, gl.STATIC_DRAW);\n  return buf;\n}\n\n/**\n * Make a WebGL buffer from a nested \"array of arrays\" representing a series\n * of short vectors.\n */\nfunction make_buffer(gl: WebGLRenderingContext, data: number[][], type: 'uint8' | 'uint16' | 'float32', mode: number): WebGLBuffer {\n  // Initialize a buffer.\n  let buf = gl.createBuffer();\n  if (!buf) {\n    throw \"could not create WebGL buffer\";\n  }\n\n  // Flatten the data to a packed array.\n  let arr = pack(data, type);\n\n  // Insert the data into the buffer.\n  gl.bindBuffer(mode, buf);\n  gl.bufferData(mode, arr, gl.STATIC_DRAW);\n\n  return buf;\n}\n\n/**\n * Bind a buffer as an attribute array.\n */\nexport function bind_attrib_buffer(gl: WebGLRenderingContext, location: number, buffer: WebGLBuffer, size: number) {\n  gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n  gl.vertexAttribPointer(location, size, gl.FLOAT, false, 0, 0);\n  gl.enableVertexAttribArray(location);\n}\n\n/**\n * Bind a buffer as an elment array.\n */\nexport function bind_element_buffer(gl: WebGLRenderingContext, buffer: WebGLBuffer) {\n  gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buffer);\n}\n\n/**\n * Contains buffers for a single 3D object model.\n */\nexport interface Mesh {\n  /**\n   * A 3-dimensional uint16 element array buffer.\n   */\n  cells: WebGLBuffer;\n\n  /**\n   * The total number of numbers in the cell buffer.\n   */\n  cell_count: number;\n\n  /**\n   * A 3-dimensional float32 array buffer.\n   */\n  positions: WebGLBuffer;\n\n  /**\n   * Also a 3-dimensional float32 array buffer.\n   */\n  normals: WebGLBuffer;\n\n  /**\n   * 2-Dimensional float32 array buffer.\n   */\n  texcoords: WebGLBuffer;\n}\n\n/**\n * Given a mesh, with the fields `positions` and `cells`, create a Mesh object\n * housing the buffers necessary for drawing the thing.\n */\nexport function getMesh(gl: WebGLRenderingContext, obj: { cells: [number, number, number][], positions: [number, number, number][] }): Mesh {\n  let norm = normals.vertexNormals(obj.cells, obj.positions);\n\n  return {\n    cells: make_buffer(gl, obj.cells, 'uint16', gl.ELEMENT_ARRAY_BUFFER),\n    cell_count: obj.cells.length * obj.cells[0].length,\n    positions: make_buffer(gl, obj.positions, 'float32', gl.ARRAY_BUFFER),\n    normals: make_buffer(gl, norm, 'float32', gl.ARRAY_BUFFER),\n    texcoords: make_buffer(gl, norm, 'float32', gl.ARRAY_BUFFER) /* dummy value */\n  };\n}\n\n/**\n * Load a mesh from an OBJ file.\n *\n * [Reference] : https://github.com/cucapra/braid/\n * @param gl      rendering context\n * @param obj_src string literal content of OBJ source file\n */\nexport function load_obj(gl: WebGLRenderingContext, obj_src: string): Mesh {\n\n  if (typeof obj_src !== \"string\") {\n    throw \"obj source must be a string\";\n  }\n\n  // // Create a WebGL buffer.\n  let mesh = new obj_loader.Mesh(obj_src);\n  console.log(mesh.vertices);\n  // Match the interface we're using for Mesh objects that come from\n  // StackGL.\n  let cell = group_array(mesh.indices, 3) as Vec3Array;\n  let position = group_array(mesh.vertices, 3) as Vec3Array;\n  let normal = normals.vertexNormals(cell, position);\n  let out: Mesh = {\n    positions: make_buffer(gl, position, 'float32', gl.ARRAY_BUFFER),\n    cells: make_buffer(gl, cell, 'uint16', gl.ELEMENT_ARRAY_BUFFER),\n    normals: make_buffer(gl, normal, 'float32', gl.ARRAY_BUFFER),\n    cell_count: cell.length * cell[0].length,\n    // This name I invented -- it's not in the StackGL models.\n    texcoords: gl_buffer(gl, gl.ARRAY_BUFFER, new Float32Array(mesh.textures))\n  };\n\n  // .obj files can have normals, but if they don't, this parser library\n  // (confusingly) fills the array with NaN.\n  if (!isNaN(mesh.vertexNormals[0])) {\n    out.normals = group_array(mesh.vertexNormals, 3) as Vec3Array;\n  }\n\n  return out;\n}\n\n\n/**\n * Load image texture.\n * @param gl rendering context\n */\nexport function load_texture(gl: WebGLRenderingContext, img_src: string) {\n  // Create a texture.\n  // Asynchronously load an image\n  var image = new Image();\n  image.src = img_src;\n  var texture = gl.createTexture();\n\n  image.addEventListener('load', function () {\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, 1);\n\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n    // clamp to edge gives us non-power-of-2 support\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\n  });\n}\n\n\n/**\n * Given a flat array, return an array with the elements grouped into\n * sub-arrays of a given size.\n *\n * [Source] : https://github.com/cucapra/braid/\n */\nfunction group_array<T>(a: T[], size: number) {\n  let out: T[][] = [];\n  for (let i = 0; i < a.length; i += size) {\n    out.push(a.slice(i, i + size));\n  }\n  return out;\n}\n\n/**\n * Get a Mesh object for a sphere\n */\nexport function getCube(gl: WebGLRenderingContext, sx: number, sy: number, sz: number, ny: number, nz: number) {\n  return getMesh(gl, cube(sx, sy, sz, ny, nz));\n}\n\n/**\n * Get a Mesh object for a sphere\n */\nexport function getSphere(gl: WebGLRenderingContext, subdivisions: number) {\n  return getMesh(gl, icosphere(subdivisions));\n}\n\n/**\n * Get a Mesh object for the Stanford bunny.\n */\nexport function getBunny(gl: WebGLRenderingContext) {\n  return getMesh(gl, bunny);\n}\n\n/**\n * Get a Mesh object for the Utah teapot.\n */\nexport function getTeapot(gl: WebGLRenderingContext) {\n  return getMesh(gl, teapot);\n}\n\n/**\n * Use a WebGL `drawElements` call to draw a mesh created by `getMesh` using\n * its elements (cells).\n */\nexport function drawMesh(gl: WebGLRenderingContext, mesh: Mesh) {\n  bind_element_buffer(gl, mesh.cells);\n  gl.drawElements(gl.TRIANGLES, mesh.cell_count, gl.UNSIGNED_SHORT, 0);\n  let errorCode = gl.getError();\n  if (errorCode != 0) {\n    throw errorCode;\n  }\n}\n\n/**\n * Get the WebGL rendering context for a <canvas> element.\n *\n * Thow an error if the browser does not support WebGL. If provided,\n * also attach a rendering function that will be called to paint each\n * frame.\n */\nexport function glContext(canvas: HTMLCanvasElement, render?: () => void): WebGLRenderingContext {\n  let gl = canvas.getContext('webgl');\n  if (!gl) {\n    throw \"WebGL not available\";\n  }\n\n  // Register the animation function.\n  if (render) {\n    registerAnimator(render);\n  }\n\n  return gl;\n}\n\n/**\n * Register a function to be called to animate every frame.\n *\n * Return a function that can be used to cancel the animation.\n */\nexport function registerAnimator(func: () => void): () => void {\n  let rafID: number;\n  let tick = () => {\n    func();\n    rafID = requestAnimationFrame(tick);  // Call us back on the next frame.\n  }\n  rafID = requestAnimationFrame(tick);  // Kick off the first frame.\n\n  return () => {\n    cancelAnimationFrame(rafID);\n  };\n}\n\n/**\n * Throw an exception if a value is null. Otherwise, return it unchanged.\n */\nexport function check_null<T>(v: T | null, s: string): T {\n  if (v === null) {\n    throw s + \" is null\";\n  }\n  return v;\n}\n\n/**\n * Set up a WebGL context for the first canvas on the page with a render\n * loop that calls the provided function. Return the WebGL context object.\n *\n * The render function is provided with two transformation matrices: a view\n * matrix and a projection matrix.\n *\n * The canvas gets an interactive \"orbit camera\" that lets the user\n * interactively manipulate the view.\n */\nexport function setup(render: (view: mat4, projection: mat4) => void): [WebGLRenderingContext, () => void] {\n  console.log(new Date().getTime());\n  // Get the first canvas on the document.\n  let canvases = document.getElementsByTagName('canvas');\n  if (canvases.length === 0) {\n    throw \"no canvas found\";\n  }\n  let canvas = canvases[0] as HTMLCanvasElement;\n\n  // Set up the interactive pan/rotate/zoom camera.\n  let camera = canvasOrbitCamera(canvas);\n  // camera.zoom(-31);\n  // Initialize the transformation matrices that are dictated by the camera\n  // and the canvas dimensions.\n  let projection = mat4.create();\n  let view = mat4.create();\n\n  // Get the WebGL rendering context\n  let gl = glContext(canvas);\n\n  // Clear the canvas.\n  gl.clearColor(0, 0, 0, 0);\n  gl.clear(gl.COLOR_BUFFER_BIT);\n\n  // Set up the render loop.\n  let cancel = registerAnimator(() => {\n    // Update the camera view.\n    camera.view(view);\n    camera.tick();\n\n\n    // Update the projection matrix.\n    let width = gl.drawingBufferWidth;\n    let height = gl.drawingBufferHeight;\n    projection_matrix(projection, width, height);\n\n    // Set the rendering context to fill the canvas.\n    gl.viewport(0, 0, width, height);\n\n    // Rendering flags.\n    gl.enable(gl.DEPTH_TEST);  // Prevent triangle overlap.\n    gl.enable(gl.CULL_FACE);  // Triangles not visible from behind.\n\n    render(view, projection);\n  });\n\n  // A **total hack** to cancel previously-registered animation loops.\n  let w = window as any;\n  if (w._linguineCancel) {\n    w._linguineCancel();\n  }\n  w._linguineCancel = cancel;\n\n  return [gl, cancel];\n}\n\n/**\n * Look up a uniform location (and assert that it is non-null).\n */\nexport function uniformLoc(gl: WebGLRenderingContext, program: WebGLProgram, name: string) {\n  return check_null(gl.getUniformLocation(program, name), name);\n}\n\n/**\n * Look up an attribute location (and assert that it is non-null).\n */\nexport function attribLoc(gl: WebGLRenderingContext, program: WebGLProgram, name: string) {\n  return check_null(gl.getAttribLocation(program, name), name);\n}\n","import * as lgl from '../lglexample';\r\nimport { mat4, vec3 } from 'gl-matrix';\r\n\r\nconst PROGRAM_COUNT = 50;\r\n\r\nfunction main() {\r\n  let [gl, cancel] = lgl.setup(render);\r\n\r\n  // let vertices: string[] = new Array(PROGRAM_COUNT).fill(require('./vertex.lgl'));\r\n  // Compile our shaders.\r\n  let program = lgl.compileProgram(gl,\r\n    require('./vertex.lgl'),\r\n    require('./fragment.lgl')\r\n  );\r\n\r\n  // Uniform and attribute locations.\r\n  let loc_uProjection = lgl.uniformLoc(gl, program, 'uProjection');\r\n  let loc_uView = lgl.uniformLoc(gl, program, 'uView');\r\n  let loc_uModel = lgl.uniformLoc(gl, program, 'uModel');\r\n  let loc_uLight = lgl.uniformLoc(gl, program, 'uLight');\r\n  let loc_aPosition = lgl.attribLoc(gl, program, 'aPosition');\r\n  let loc_aNormal = lgl.attribLoc(gl, program, 'aNormal');\r\n\r\n  // We'll draw a teapot.\r\n  let mesh = lgl.getBunny(gl);\r\n\r\n  // Initialize the model position.\r\n  let model = mat4.create();\r\n\r\n  // Position the light source for the lighting effect.\r\n  let light = vec3.fromValues(20., 0., 20.);\r\n  let numFrames = 0;\r\n  let start = new Date().getTime();\r\n  setInterval(() => {\r\n    console.log(numFrames / ((new Date().getTime() - start) / 1000));\r\n    numFrames = 0, start = new Date().getTime();\r\n  }, 1000);\r\n  function render(view: mat4, projection: mat4) {\r\n    // Rotate the model a little bit on each frame.\r\n    numFrames++;\r\n    mat4.rotateY(model, model, .01);\r\n\r\n    // Use our shader pair.\r\n    gl.useProgram(program);\r\n\r\n    // Set the shader \"uniform\" parameters.\r\n    gl.uniformMatrix4fv(loc_uProjection, false, projection);\r\n    gl.uniformMatrix4fv(loc_uView, false, view);\r\n    gl.uniformMatrix4fv(loc_uModel, false, model);\r\n    gl.uniform3fv(loc_uLight, light);\r\n\r\n    // Set the attribute arrays.\r\n    lgl.bind_attrib_buffer(gl, loc_aNormal, mesh.normals, 3);\r\n    lgl.bind_attrib_buffer(gl, loc_aPosition, mesh.positions, 3);\r\n\r\n    // Draw the object.\r\n    lgl.drawMesh(gl, mesh);\r\n  }\r\n}\r\n\r\nmain();\r\n"]}